{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/tooltip/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  flip,\n  shift,\n  useHover,\n  useFocus,\n  useDismiss,\n  useRole,\n  useInteractions,\n  useMergeRefs,\n  FloatingPortal,\n  type Placement,\n  type UseFloatingReturn,\n  type ReferenceType,\n  FloatingDelayGroup,\n} from \"@floating-ui/react\"\nimport \"@/components/tiptap-ui-primitive/tooltip/tooltip.scss\"\n\ninterface TooltipProviderProps {\n  children: React.ReactNode\n  initialOpen?: boolean\n  placement?: Placement\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n  delay?: number\n  closeDelay?: number\n  timeout?: number\n  useDelayGroup?: boolean\n}\n\ninterface TooltipTriggerProps\n  extends Omit<React.HTMLProps<HTMLElement>, \"ref\"> {\n  asChild?: boolean\n  children: React.ReactNode\n}\n\ninterface TooltipContentProps\n  extends Omit<React.HTMLProps<HTMLDivElement>, \"ref\"> {\n  children?: React.ReactNode\n  portal?: boolean\n  portalProps?: Omit<React.ComponentProps<typeof FloatingPortal>, \"children\">\n}\n\ninterface TooltipContextValue extends UseFloatingReturn<ReferenceType> {\n  open: boolean\n  setOpen: (open: boolean) => void\n  getReferenceProps: (\n    userProps?: React.HTMLProps<HTMLElement>\n  ) => Record<string, unknown>\n  getFloatingProps: (\n    userProps?: React.HTMLProps<HTMLDivElement>\n  ) => Record<string, unknown>\n}\n\nfunction useTooltip({\n  initialOpen = false,\n  placement = \"top\",\n  open: controlledOpen,\n  onOpenChange: setControlledOpen,\n  delay = 600,\n  closeDelay = 0,\n}: Omit<TooltipProviderProps, \"children\"> = {}) {\n  const [uncontrolledOpen, setUncontrolledOpen] =\n    React.useState<boolean>(initialOpen)\n\n  const open = controlledOpen ?? uncontrolledOpen\n  const setOpen = setControlledOpen ?? setUncontrolledOpen\n\n  const data = useFloating({\n    placement,\n    open,\n    onOpenChange: setOpen,\n    whileElementsMounted: autoUpdate,\n    middleware: [\n      offset(4),\n      flip({\n        crossAxis: placement.includes(\"-\"),\n        fallbackAxisSideDirection: \"start\",\n        padding: 4,\n      }),\n      shift({ padding: 4 }),\n    ],\n  })\n\n  const context = data.context\n\n  const hover = useHover(context, {\n    mouseOnly: true,\n    move: false,\n    restMs: delay,\n    enabled: controlledOpen == null,\n    delay: {\n      close: closeDelay,\n    },\n  })\n  const focus = useFocus(context, {\n    enabled: controlledOpen == null,\n  })\n  const dismiss = useDismiss(context)\n  const role = useRole(context, { role: \"tooltip\" })\n\n  const interactions = useInteractions([hover, focus, dismiss, role])\n\n  return React.useMemo(\n    () => ({\n      open,\n      setOpen,\n      ...interactions,\n      ...data,\n    }),\n    [open, setOpen, interactions, data]\n  )\n}\n\nconst TooltipContext = React.createContext<TooltipContextValue | null>(null)\n\nfunction useTooltipContext() {\n  const context = React.useContext(TooltipContext)\n\n  if (context == null) {\n    throw new Error(\"Tooltip components must be wrapped in <TooltipProvider />\")\n  }\n\n  return context\n}\n\nexport function Tooltip({ children, ...props }: TooltipProviderProps) {\n  const tooltip = useTooltip(props)\n\n  if (!props.useDelayGroup) {\n    return (\n      <TooltipContext.Provider value={tooltip}>\n        {children}\n      </TooltipContext.Provider>\n    )\n  }\n\n  return (\n    <FloatingDelayGroup\n      delay={{ open: props.delay ?? 0, close: props.closeDelay ?? 0 }}\n      timeoutMs={props.timeout}\n    >\n      <TooltipContext.Provider value={tooltip}>\n        {children}\n      </TooltipContext.Provider>\n    </FloatingDelayGroup>\n  )\n}\n\nexport const TooltipTrigger = React.forwardRef<\n  HTMLElement,\n  TooltipTriggerProps\n>(function TooltipTrigger({ children, asChild = false, ...props }, propRef) {\n  const context = useTooltipContext()\n  const childrenRef = React.isValidElement(children)\n    ? parseInt(React.version, 10) >= 19\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (children as { props: { ref?: React.Ref<any> } }).props.ref\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (children as any).ref\n    : undefined\n  const ref = useMergeRefs([context.refs.setReference, propRef, childrenRef])\n\n  if (asChild && React.isValidElement(children)) {\n    const dataAttributes = {\n      \"data-tooltip-state\": context.open ? \"open\" : \"closed\",\n    }\n\n    return React.cloneElement(\n      children,\n      context.getReferenceProps({\n        ref,\n        ...props,\n        ...(typeof children.props === \"object\" ? children.props : {}),\n        ...dataAttributes,\n      })\n    )\n  }\n\n  return (\n    <button\n      ref={ref}\n      data-tooltip-state={context.open ? \"open\" : \"closed\"}\n      {...context.getReferenceProps(props)}\n    >\n      {children}\n    </button>\n  )\n})\n\nexport const TooltipContent = React.forwardRef<\n  HTMLDivElement,\n  TooltipContentProps\n>(function TooltipContent(\n  { style, children, portal = true, portalProps = {}, ...props },\n  propRef\n) {\n  const context = useTooltipContext()\n  const ref = useMergeRefs([context.refs.setFloating, propRef])\n\n  if (!context.open) return null\n\n  const content = (\n    <div\n      ref={ref}\n      style={{\n        ...context.floatingStyles,\n        ...style,\n      }}\n      {...context.getFloatingProps(props)}\n      className=\"tiptap-tooltip\"\n    >\n      {children}\n    </div>\n  )\n\n  if (portal) {\n    return <FloatingPortal {...portalProps}>{content}</FloatingPortal>\n  }\n\n  return content\n})\n\nTooltip.displayName = \"Tooltip\"\nTooltipTrigger.displayName = \"TooltipTrigger\"\nTooltipContent.displayName = \"TooltipContent\"\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/tooltip/index.tsx"],"sourcesContent":["export * from \"./tooltip\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/lib/tiptap-utils.ts"],"sourcesContent":["import type { Node as TiptapNode } from \"@tiptap/pm/model\"\nimport { NodeSelection, Selection, TextSelection } from \"@tiptap/pm/state\"\nimport type { Editor } from \"@tiptap/react\"\n\nexport const MAX_FILE_SIZE = 5 * 1024 * 1024 // 5MB\n\nexport const MAC_SYMBOLS: Record<string, string> = {\n  mod: \"⌘\",\n  command: \"⌘\",\n  meta: \"⌘\",\n  ctrl: \"⌃\",\n  control: \"⌃\",\n  alt: \"⌥\",\n  option: \"⌥\",\n  shift: \"⇧\",\n  backspace: \"Del\",\n  delete: \"⌦\",\n  enter: \"⏎\",\n  escape: \"⎋\",\n  capslock: \"⇪\",\n} as const\n\nexport function cn(\n  ...classes: (string | boolean | undefined | null)[]\n): string {\n  return classes.filter(Boolean).join(\" \")\n}\n\n/**\n * Determines if the current platform is macOS\n * @returns boolean indicating if the current platform is Mac\n */\nexport function isMac(): boolean {\n  return (\n    typeof navigator !== \"undefined\" &&\n    navigator.platform.toLowerCase().includes(\"mac\")\n  )\n}\n\n/**\n * Formats a shortcut key based on the platform (Mac or non-Mac)\n * @param key - The key to format (e.g., \"ctrl\", \"alt\", \"shift\")\n * @param isMac - Boolean indicating if the platform is Mac\n * @param capitalize - Whether to capitalize the key (default: true)\n * @returns Formatted shortcut key symbol\n */\nexport const formatShortcutKey = (\n  key: string,\n  isMac: boolean,\n  capitalize: boolean = true\n) => {\n  if (isMac) {\n    const lowerKey = key.toLowerCase()\n    return MAC_SYMBOLS[lowerKey] || (capitalize ? key.toUpperCase() : key)\n  }\n\n  return capitalize ? key.charAt(0).toUpperCase() + key.slice(1) : key\n}\n\n/**\n * Parses a shortcut key string into an array of formatted key symbols\n * @param shortcutKeys - The string of shortcut keys (e.g., \"ctrl-alt-shift\")\n * @param delimiter - The delimiter used to split the keys (default: \"-\")\n * @param capitalize - Whether to capitalize the keys (default: true)\n * @returns Array of formatted shortcut key symbols\n */\nexport const parseShortcutKeys = (props: {\n  shortcutKeys: string | undefined\n  delimiter?: string\n  capitalize?: boolean\n}) => {\n  const { shortcutKeys, delimiter = \"+\", capitalize = true } = props\n\n  if (!shortcutKeys) return []\n\n  return shortcutKeys\n    .split(delimiter)\n    .map((key) => key.trim())\n    .map((key) => formatShortcutKey(key, isMac(), capitalize))\n}\n\n/**\n * Checks if a mark exists in the editor schema\n * @param markName - The name of the mark to check\n * @param editor - The editor instance\n * @returns boolean indicating if the mark exists in the schema\n */\nexport const isMarkInSchema = (\n  markName: string,\n  editor: Editor | null\n): boolean => {\n  if (!editor?.schema) return false\n  return editor.schema.spec.marks.get(markName) !== undefined\n}\n\n/**\n * Checks if a node exists in the editor schema\n * @param nodeName - The name of the node to check\n * @param editor - The editor instance\n * @returns boolean indicating if the node exists in the schema\n */\nexport const isNodeInSchema = (\n  nodeName: string,\n  editor: Editor | null\n): boolean => {\n  if (!editor?.schema) return false\n  return editor.schema.spec.nodes.get(nodeName) !== undefined\n}\n\n/**\n * Moves the focus to the next node in the editor\n * @param editor - The editor instance\n * @returns boolean indicating if the focus was moved\n */\nexport function focusNextNode(editor: Editor) {\n  const { state, view } = editor\n  const { doc, selection } = state\n\n  const nextSel = Selection.findFrom(selection.$to, 1, true)\n  if (nextSel) {\n    view.dispatch(state.tr.setSelection(nextSel).scrollIntoView())\n    return true\n  }\n\n  const paragraphType = state.schema.nodes.paragraph\n  if (!paragraphType) {\n    console.warn(\"No paragraph node type found in schema.\")\n    return false\n  }\n\n  const end = doc.content.size\n  const para = paragraphType.create()\n  let tr = state.tr.insert(end, para)\n\n  // Place the selection inside the new paragraph\n  const $inside = tr.doc.resolve(end + 1)\n  tr = tr.setSelection(TextSelection.near($inside)).scrollIntoView()\n  view.dispatch(tr)\n  return true\n}\n\n/**\n * Checks if a value is a valid number (not null, undefined, or NaN)\n * @param value - The value to check\n * @returns boolean indicating if the value is a valid number\n */\nexport function isValidPosition(pos: number | null | undefined): pos is number {\n  return typeof pos === \"number\" && pos >= 0\n}\n\n/**\n * Checks if one or more extensions are registered in the Tiptap editor.\n * @param editor - The Tiptap editor instance\n * @param extensionNames - A single extension name or an array of names to check\n * @returns True if at least one of the extensions is available, false otherwise\n */\nexport function isExtensionAvailable(\n  editor: Editor | null,\n  extensionNames: string | string[]\n): boolean {\n  if (!editor) return false\n\n  const names = Array.isArray(extensionNames)\n    ? extensionNames\n    : [extensionNames]\n\n  const found = names.some((name) =>\n    editor.extensionManager.extensions.some((ext) => ext.name === name)\n  )\n\n  if (!found) {\n    console.warn(\n      `None of the extensions [${names.join(\", \")}] were found in the editor schema. Ensure they are included in the editor configuration.`\n    )\n  }\n\n  return found\n}\n\n/**\n * Finds a node at the specified position with error handling\n * @param editor The Tiptap editor instance\n * @param position The position in the document to find the node\n * @returns The node at the specified position, or null if not found\n */\nexport function findNodeAtPosition(editor: Editor, position: number) {\n  try {\n    const node = editor.state.doc.nodeAt(position)\n    if (!node) {\n      console.warn(`No node found at position ${position}`)\n      return null\n    }\n    return node\n  } catch (error) {\n    console.error(`Error getting node at position ${position}:`, error)\n    return null\n  }\n}\n\n/**\n * Finds the position and instance of a node in the document\n * @param props Object containing editor, node (optional), and nodePos (optional)\n * @param props.editor The Tiptap editor instance\n * @param props.node The node to find (optional if nodePos is provided)\n * @param props.nodePos The position of the node to find (optional if node is provided)\n * @returns An object with the position and node, or null if not found\n */\nexport function findNodePosition(props: {\n  editor: Editor | null\n  node?: TiptapNode | null\n  nodePos?: number | null\n}): { pos: number; node: TiptapNode } | null {\n  const { editor, node, nodePos } = props\n\n  if (!editor || !editor.state?.doc) return null\n\n  // Zero is valid position\n  const hasValidNode = node !== undefined && node !== null\n  const hasValidPos = isValidPosition(nodePos)\n\n  if (!hasValidNode && !hasValidPos) {\n    return null\n  }\n\n  // First search for the node in the document if we have a node\n  if (hasValidNode) {\n    let foundPos = -1\n    let foundNode: TiptapNode | null = null\n\n    editor.state.doc.descendants((currentNode, pos) => {\n      // TODO: Needed?\n      // if (currentNode.type && currentNode.type.name === node!.type.name) {\n      if (currentNode === node) {\n        foundPos = pos\n        foundNode = currentNode\n        return false\n      }\n      return true\n    })\n\n    if (foundPos !== -1 && foundNode !== null) {\n      return { pos: foundPos, node: foundNode }\n    }\n  }\n\n  // If we have a valid position, use findNodeAtPosition\n  if (hasValidPos) {\n    const nodeAtPos = findNodeAtPosition(editor, nodePos!)\n    if (nodeAtPos) {\n      return { pos: nodePos!, node: nodeAtPos }\n    }\n  }\n\n  return null\n}\n\n/**\n * Checks if the current selection in the editor is a node selection of specified types\n * @param editor The Tiptap editor instance\n * @param types An array of node type names to check against\n * @returns boolean indicating if the selected node matches any of the specified types\n */\nexport function isNodeTypeSelected(\n  editor: Editor | null,\n  types: string[] = []\n): boolean {\n  if (!editor || !editor.state.selection) return false\n\n  const { state } = editor\n  const { selection } = state\n\n  if (selection.empty) return false\n\n  if (selection instanceof NodeSelection) {\n    const node = selection.node\n    return node ? types.includes(node.type.name) : false\n  }\n\n  return false\n}\n\n/**\n * Handles image upload with progress tracking and abort capability\n * @param file The file to upload\n * @param onProgress Optional callback for tracking upload progress\n * @param abortSignal Optional AbortSignal for cancelling the upload\n * @returns Promise resolving to the URL of the uploaded image\n */\nexport const handleImageUpload = async (\n  file: File,\n  onProgress?: (event: { progress: number }) => void,\n  abortSignal?: AbortSignal\n): Promise<string> => {\n  // Validate file\n  if (!file) {\n    throw new Error(\"No file provided\")\n  }\n\n  if (file.size > MAX_FILE_SIZE) {\n    throw new Error(\n      `File size exceeds maximum allowed (${MAX_FILE_SIZE / (1024 * 1024)}MB)`\n    )\n  }\n\n  // For demo/testing: Simulate upload progress. In production, replace the following code\n  // with your own upload implementation.\n  for (let progress = 0; progress <= 100; progress += 10) {\n    if (abortSignal?.aborted) {\n      throw new Error(\"Upload cancelled\")\n    }\n    await new Promise((resolve) => setTimeout(resolve, 500))\n    onProgress?.({ progress })\n  }\n\n  return \"/images/tiptap-ui-placeholder-image.jpg\"\n}\n\ntype ProtocolOptions = {\n  /**\n   * The protocol scheme to be registered.\n   * @default '''\n   * @example 'ftp'\n   * @example 'git'\n   */\n  scheme: string\n\n  /**\n   * If enabled, it allows optional slashes after the protocol.\n   * @default false\n   * @example true\n   */\n  optionalSlashes?: boolean\n}\n\ntype ProtocolConfig = Array<ProtocolOptions | string>\n\nconst ATTR_WHITESPACE =\n  // eslint-disable-next-line no-control-regex\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g\n\nexport function isAllowedUri(\n  uri: string | undefined,\n  protocols?: ProtocolConfig\n) {\n  const allowedProtocols: string[] = [\n    \"http\",\n    \"https\",\n    \"ftp\",\n    \"ftps\",\n    \"mailto\",\n    \"tel\",\n    \"callto\",\n    \"sms\",\n    \"cid\",\n    \"xmpp\",\n  ]\n\n  if (protocols) {\n    protocols.forEach((protocol) => {\n      const nextProtocol =\n        typeof protocol === \"string\" ? protocol : protocol.scheme\n\n      if (nextProtocol) {\n        allowedProtocols.push(nextProtocol)\n      }\n    })\n  }\n\n  return (\n    !uri ||\n    uri.replace(ATTR_WHITESPACE, \"\").match(\n      new RegExp(\n        // eslint-disable-next-line no-useless-escape\n        `^(?:(?:${allowedProtocols.join(\"|\")}):|[^a-z]|[a-z0-9+.\\-]+(?:[^a-z+.\\-:]|$))`,\n        \"i\"\n      )\n    )\n  )\n}\n\nexport function sanitizeUrl(\n  inputUrl: string,\n  baseUrl: string,\n  protocols?: ProtocolConfig\n): string {\n  try {\n    const url = new URL(inputUrl, baseUrl)\n\n    if (isAllowedUri(url.href, protocols)) {\n      return url.href\n    }\n  } catch {\n    // If URL creation fails, it's considered invalid\n  }\n  return \"#\"\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/button/button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Tiptap UI Primitive ---\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@/components/tiptap-ui-primitive/tooltip\"\n\n// --- Lib ---\nimport { cn, parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\nimport \"@/components/tiptap-ui-primitive/button/button-colors.scss\"\nimport \"@/components/tiptap-ui-primitive/button/button-group.scss\"\nimport \"@/components/tiptap-ui-primitive/button/button.scss\"\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  className?: string\n  showTooltip?: boolean\n  tooltip?: React.ReactNode\n  shortcutKeys?: string\n}\n\nexport const ShortcutDisplay: React.FC<{ shortcuts: string[] }> = ({\n  shortcuts,\n}) => {\n  if (shortcuts.length === 0) return null\n\n  return (\n    <div>\n      {shortcuts.map((key, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <kbd>+</kbd>}\n          <kbd>{key}</kbd>\n        </React.Fragment>\n      ))}\n    </div>\n  )\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      children,\n      tooltip,\n      showTooltip = true,\n      shortcutKeys,\n      \"aria-label\": ariaLabel,\n      ...props\n    },\n    ref\n  ) => {\n    const shortcuts = React.useMemo(\n      () => parseShortcutKeys({ shortcutKeys }),\n      [shortcutKeys]\n    )\n\n    if (!tooltip || !showTooltip) {\n      return (\n        <button\n          className={cn(\"tiptap-button\", className)}\n          ref={ref}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          {children}\n        </button>\n      )\n    }\n\n    return (\n      <Tooltip delay={200}>\n        <TooltipTrigger\n          className={cn(\"tiptap-button\", className)}\n          ref={ref}\n          aria-label={ariaLabel}\n          {...props}\n        >\n          {children}\n        </TooltipTrigger>\n        <TooltipContent>\n          {tooltip}\n          <ShortcutDisplay shortcuts={shortcuts} />\n        </TooltipContent>\n      </Tooltip>\n    )\n  }\n)\n\nButton.displayName = \"Button\"\n\nexport const ButtonGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    orientation?: \"horizontal\" | \"vertical\"\n  }\n>(({ className, children, orientation = \"vertical\", ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"tiptap-button-group\", className)}\n      data-orientation={orientation}\n      role=\"group\"\n      {...props}\n    >\n      {children}\n    </div>\n  )\n})\nButtonGroup.displayName = \"ButtonGroup\"\n\nexport default Button\n"],"names":[],"mappings":";;;;;;;AAEA;AAEA,8BAA8B;AAC9B;AAAA;AAMA,cAAc;AACd;;;AAZA;;;;;;;AA0BO,MAAM,kBAAqD;QAAC,EACjE,SAAS,EACV;IACC,IAAI,UAAU,MAAM,KAAK,GAAG,OAAO;IAEnC,qBACE,4SAAC;kBACE,UAAU,GAAG,CAAC,CAAC,KAAK,sBACnB,4SAAC,4QAAA,CAAA,WAAc;;oBACZ,QAAQ,mBAAK,4SAAC;kCAAI;;;;;;kCACnB,4SAAC;kCAAK;;;;;;;eAFa;;;;;;;;;;AAO7B;KAfa;AAiBN,MAAM,uBAAS,GAAA,4QAAA,CAAA,aAAgB,UACpC,QAUE;QATA,EACE,SAAS,EACT,QAAQ,EACR,OAAO,EACP,cAAc,IAAI,EAClB,YAAY,EACZ,cAAc,SAAS,EACvB,GAAG,OACJ;;IAGD,MAAM,YAAY,4QAAA,CAAA,UAAa;qCAC7B,IAAM,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;gBAAE;YAAa;oCACvC;QAAC;KAAa;IAGhB,IAAI,CAAC,WAAW,CAAC,aAAa;QAC5B,qBACE,4SAAC;YACC,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;YAC/B,KAAK;YACL,cAAY;YACX,GAAG,KAAK;sBAER;;;;;;IAGP;IAEA,qBACE,4SAAC,iKAAA,CAAA,UAAO;QAAC,OAAO;;0BACd,4SAAC,iKAAA,CAAA,iBAAc;gBACb,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;gBAC/B,KAAK;gBACL,cAAY;gBACX,GAAG,KAAK;0BAER;;;;;;0BAEH,4SAAC,iKAAA,CAAA,iBAAc;;oBACZ;kCACD,4SAAC;wBAAgB,WAAW;;;;;;;;;;;;;;;;;;AAIpC;;AAGF,OAAO,WAAW,GAAG;AAEd,MAAM,4BAAc,4QAAA,CAAA,aAAgB,OAKzC,QAA8D;QAA7D,EAAE,SAAS,EAAE,QAAQ,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO;IAC5D,qBACE,4SAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACrC,oBAAkB;QAClB,MAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AACA,YAAY,WAAW,GAAG;uCAEX","debugId":null}},
    {"offset": {"line": 660, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/button/index.tsx"],"sourcesContent":["export * from \"./button\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 679, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/spacer/spacer.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nexport type SpacerOrientation = \"horizontal\" | \"vertical\"\n\nexport interface SpacerProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: SpacerOrientation\n  size?: string | number\n}\n\nexport function Spacer({\n  orientation = \"horizontal\",\n  size,\n  style = {},\n  ...props\n}: SpacerProps) {\n  const computedStyle = {\n    ...style,\n    ...(orientation === \"horizontal\" && !size && { flex: 1 }),\n    ...(size && {\n      width: orientation === \"vertical\" ? \"1px\" : size,\n      height: orientation === \"horizontal\" ? \"1px\" : size,\n    }),\n  }\n\n  return <div {...props} style={computedStyle} />\n}\n"],"names":[],"mappings":";;;;AAAA;;AAWO,SAAS,OAAO,KAKT;QALS,EACrB,cAAc,YAAY,EAC1B,IAAI,EACJ,QAAQ,CAAC,CAAC,EACV,GAAG,OACS,GALS;IAMrB,MAAM,gBAAgB;QACpB,GAAG,KAAK;QACR,GAAI,gBAAgB,gBAAgB,CAAC,QAAQ;YAAE,MAAM;QAAE,CAAC;QACxD,GAAI,QAAQ;YACV,OAAO,gBAAgB,aAAa,QAAQ;YAC5C,QAAQ,gBAAgB,eAAe,QAAQ;QACjD,CAAC;IACH;IAEA,qBAAO,4SAAC;QAAK,GAAG,KAAK;QAAE,OAAO;;;;;;AAChC;KAhBgB","debugId":null}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/spacer/index.tsx"],"sourcesContent":["export * from \"./spacer\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/separator/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport \"@/components/tiptap-ui-primitive/separator/separator.scss\"\nimport { cn } from \"@/lib/tiptap-utils\"\n\nexport type Orientation = \"horizontal\" | \"vertical\"\n\nexport interface SeparatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: Orientation\n  decorative?: boolean\n}\n\nexport const Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(\n  ({ decorative, orientation = \"vertical\", className, ...divProps }, ref) => {\n    const ariaOrientation = orientation === \"vertical\" ? orientation : undefined\n    const semanticProps = decorative\n      ? { role: \"none\" }\n      : { \"aria-orientation\": ariaOrientation, role: \"separator\" }\n\n    return (\n      <div\n        className={cn(\"tiptap-separator\", className)}\n        data-orientation={orientation}\n        {...semanticProps}\n        {...divProps}\n        ref={ref}\n      />\n    )\n  }\n)\n\nSeparator.displayName = \"Separator\"\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;;AAaO,MAAM,0BAAY,4QAAA,CAAA,aAAgB,MACvC,QAAmE;QAAlE,EAAE,UAAU,EAAE,cAAc,UAAU,EAAE,SAAS,EAAE,GAAG,UAAU;IAC/D,MAAM,kBAAkB,gBAAgB,aAAa,cAAc;IACnE,MAAM,gBAAgB,aAClB;QAAE,MAAM;IAAO,IACf;QAAE,oBAAoB;QAAiB,MAAM;IAAY;IAE7D,qBACE,4SAAC;QACC,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,oBAAoB;QAClC,oBAAkB;QACjB,GAAG,aAAa;QAChB,GAAG,QAAQ;QACZ,KAAK;;;;;;AAGX;;AAGF,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/separator/index.tsx"],"sourcesContent":["export * from \"./separator\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-menu-navigation.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\n\ntype Orientation = \"horizontal\" | \"vertical\" | \"both\"\n\ninterface MenuNavigationOptions<T> {\n  /**\n   * The Tiptap editor instance, if using with a Tiptap editor.\n   */\n  editor?: Editor | null\n  /**\n   * Reference to the container element for handling keyboard events.\n   */\n  containerRef?: React.RefObject<HTMLElement | null>\n  /**\n   * Search query that affects the selected item.\n   */\n  query?: string\n  /**\n   * Array of items to navigate through.\n   */\n  items: T[]\n  /**\n   * Callback fired when an item is selected.\n   */\n  onSelect?: (item: T) => void\n  /**\n   * Callback fired when the menu should close.\n   */\n  onClose?: () => void\n  /**\n   * The navigation orientation of the menu.\n   * @default \"vertical\"\n   */\n  orientation?: Orientation\n  /**\n   * Whether to automatically select the first item when the menu opens.\n   * @default true\n   */\n  autoSelectFirstItem?: boolean\n}\n\n/**\n * Hook that implements keyboard navigation for dropdown menus and command palettes.\n *\n * Handles arrow keys, tab, home/end, enter for selection, and escape to close.\n * Works with both Tiptap editors and regular DOM elements.\n *\n * @param options - Configuration options for the menu navigation\n * @returns Object containing the selected index and a setter function\n */\nexport function useMenuNavigation<T>({\n  editor,\n  containerRef,\n  query,\n  items,\n  onSelect,\n  onClose,\n  orientation = \"vertical\",\n  autoSelectFirstItem = true,\n}: MenuNavigationOptions<T>) {\n  const [selectedIndex, setSelectedIndex] = React.useState<number>(\n    autoSelectFirstItem ? 0 : -1\n  )\n\n  React.useEffect(() => {\n    const handleKeyboardNavigation = (event: KeyboardEvent) => {\n      if (!items.length) return false\n\n      const moveNext = () =>\n        setSelectedIndex((currentIndex) => {\n          if (currentIndex === -1) return 0\n          return (currentIndex + 1) % items.length\n        })\n\n      const movePrev = () =>\n        setSelectedIndex((currentIndex) => {\n          if (currentIndex === -1) return items.length - 1\n          return (currentIndex - 1 + items.length) % items.length\n        })\n\n      switch (event.key) {\n        case \"ArrowUp\": {\n          if (orientation === \"horizontal\") return false\n          event.preventDefault()\n          movePrev()\n          return true\n        }\n\n        case \"ArrowDown\": {\n          if (orientation === \"horizontal\") return false\n          event.preventDefault()\n          moveNext()\n          return true\n        }\n\n        case \"ArrowLeft\": {\n          if (orientation === \"vertical\") return false\n          event.preventDefault()\n          movePrev()\n          return true\n        }\n\n        case \"ArrowRight\": {\n          if (orientation === \"vertical\") return false\n          event.preventDefault()\n          moveNext()\n          return true\n        }\n\n        case \"Tab\": {\n          event.preventDefault()\n          if (event.shiftKey) {\n            movePrev()\n          } else {\n            moveNext()\n          }\n          return true\n        }\n\n        case \"Home\": {\n          event.preventDefault()\n          setSelectedIndex(0)\n          return true\n        }\n\n        case \"End\": {\n          event.preventDefault()\n          setSelectedIndex(items.length - 1)\n          return true\n        }\n\n        case \"Enter\": {\n          if (event.isComposing) return false\n          event.preventDefault()\n          if (selectedIndex !== -1 && items[selectedIndex]) {\n            onSelect?.(items[selectedIndex])\n          }\n          return true\n        }\n\n        case \"Escape\": {\n          event.preventDefault()\n          onClose?.()\n          return true\n        }\n\n        default:\n          return false\n      }\n    }\n\n    let targetElement: HTMLElement | null = null\n\n    if (editor) {\n      targetElement = editor.view.dom\n    } else if (containerRef?.current) {\n      targetElement = containerRef.current\n    }\n\n    if (targetElement) {\n      targetElement.addEventListener(\"keydown\", handleKeyboardNavigation, true)\n\n      return () => {\n        targetElement?.removeEventListener(\n          \"keydown\",\n          handleKeyboardNavigation,\n          true\n        )\n      }\n    }\n\n    return undefined\n  }, [\n    editor,\n    containerRef,\n    items,\n    selectedIndex,\n    onSelect,\n    onClose,\n    orientation,\n  ])\n\n  React.useEffect(() => {\n    if (query) {\n      setSelectedIndex(autoSelectFirstItem ? 0 : -1)\n    }\n  }, [query, autoSelectFirstItem])\n\n  return {\n    selectedIndex: items.length ? selectedIndex : undefined,\n    setSelectedIndex,\n  }\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAqDO,SAAS,kBAAqB,KASV;QATU,EACnC,MAAM,EACN,YAAY,EACZ,KAAK,EACL,KAAK,EACL,QAAQ,EACR,OAAO,EACP,cAAc,UAAU,EACxB,sBAAsB,IAAI,EACD,GATU;;IAUnC,MAAM,CAAC,eAAe,iBAAiB,GAAG,4QAAA,CAAA,WAAc,CACtD,sBAAsB,IAAI,CAAC;IAG7B,4QAAA,CAAA,YAAe;uCAAC;YACd,MAAM;wEAA2B,CAAC;oBAChC,IAAI,CAAC,MAAM,MAAM,EAAE,OAAO;oBAE1B,MAAM;yFAAW,IACf;iGAAiB,CAAC;oCAChB,IAAI,iBAAiB,CAAC,GAAG,OAAO;oCAChC,OAAO,CAAC,eAAe,CAAC,IAAI,MAAM,MAAM;gCAC1C;;;oBAEF,MAAM;yFAAW,IACf;iGAAiB,CAAC;oCAChB,IAAI,iBAAiB,CAAC,GAAG,OAAO,MAAM,MAAM,GAAG;oCAC/C,OAAO,CAAC,eAAe,IAAI,MAAM,MAAM,IAAI,MAAM,MAAM;gCACzD;;;oBAEF,OAAQ,MAAM,GAAG;wBACf,KAAK;4BAAW;gCACd,IAAI,gBAAgB,cAAc,OAAO;gCACzC,MAAM,cAAc;gCACpB;gCACA,OAAO;4BACT;wBAEA,KAAK;4BAAa;gCAChB,IAAI,gBAAgB,cAAc,OAAO;gCACzC,MAAM,cAAc;gCACpB;gCACA,OAAO;4BACT;wBAEA,KAAK;4BAAa;gCAChB,IAAI,gBAAgB,YAAY,OAAO;gCACvC,MAAM,cAAc;gCACpB;gCACA,OAAO;4BACT;wBAEA,KAAK;4BAAc;gCACjB,IAAI,gBAAgB,YAAY,OAAO;gCACvC,MAAM,cAAc;gCACpB;gCACA,OAAO;4BACT;wBAEA,KAAK;4BAAO;gCACV,MAAM,cAAc;gCACpB,IAAI,MAAM,QAAQ,EAAE;oCAClB;gCACF,OAAO;oCACL;gCACF;gCACA,OAAO;4BACT;wBAEA,KAAK;4BAAQ;gCACX,MAAM,cAAc;gCACpB,iBAAiB;gCACjB,OAAO;4BACT;wBAEA,KAAK;4BAAO;gCACV,MAAM,cAAc;gCACpB,iBAAiB,MAAM,MAAM,GAAG;gCAChC,OAAO;4BACT;wBAEA,KAAK;4BAAS;gCACZ,IAAI,MAAM,WAAW,EAAE,OAAO;gCAC9B,MAAM,cAAc;gCACpB,IAAI,kBAAkB,CAAC,KAAK,KAAK,CAAC,cAAc,EAAE;oCAChD,qBAAA,+BAAA,SAAW,KAAK,CAAC,cAAc;gCACjC;gCACA,OAAO;4BACT;wBAEA,KAAK;4BAAU;gCACb,MAAM,cAAc;gCACpB,oBAAA,8BAAA;gCACA,OAAO;4BACT;wBAEA;4BACE,OAAO;oBACX;gBACF;;YAEA,IAAI,gBAAoC;YAExC,IAAI,QAAQ;gBACV,gBAAgB,OAAO,IAAI,CAAC,GAAG;YACjC,OAAO,IAAI,yBAAA,mCAAA,aAAc,OAAO,EAAE;gBAChC,gBAAgB,aAAa,OAAO;YACtC;YAEA,IAAI,eAAe;gBACjB,cAAc,gBAAgB,CAAC,WAAW,0BAA0B;gBAEpE;mDAAO;wBACL,0BAAA,oCAAA,cAAe,mBAAmB,CAChC,WACA,0BACA;oBAEJ;;YACF;YAEA,OAAO;QACT;sCAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,4QAAA,CAAA,YAAe;uCAAC;YACd,IAAI,OAAO;gBACT,iBAAiB,sBAAsB,IAAI,CAAC;YAC9C;QACF;sCAAG;QAAC;QAAO;KAAoB;IAE/B,OAAO;QACL,eAAe,MAAM,MAAM,GAAG,gBAAgB;QAC9C;IACF;AACF;GA9IgB","debugId":null}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-composed-ref.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// basically Exclude<React.ClassAttributes<T>[\"ref\"], string>\ntype UserRef<T> =\n  | ((instance: T | null) => void)\n  | React.RefObject<T | null>\n  | null\n  | undefined\n\nconst updateRef = <T>(ref: NonNullable<UserRef<T>>, value: T | null) => {\n  if (typeof ref === \"function\") {\n    ref(value)\n  } else if (ref && typeof ref === \"object\" && \"current\" in ref) {\n    // Safe assignment without MutableRefObject\n    ;(ref as { current: T | null }).current = value\n  }\n}\n\nexport const useComposedRef = <T extends HTMLElement>(\n  libRef: React.RefObject<T | null>,\n  userRef: UserRef<T>\n) => {\n  const prevUserRef = React.useRef<UserRef<T>>(null)\n\n  return React.useCallback(\n    (instance: T | null) => {\n      if (libRef && \"current\" in libRef) {\n        ;(libRef as { current: T | null }).current = instance\n      }\n\n      if (prevUserRef.current) {\n        updateRef(prevUserRef.current, null)\n      }\n\n      prevUserRef.current = userRef\n\n      if (userRef) {\n        updateRef(userRef, instance)\n      }\n    },\n    [libRef, userRef]\n  )\n}\n\nexport default useComposedRef\n"],"names":[],"mappings":";;;;AAEA;;AAFA;;AAWA,MAAM,YAAY,CAAI,KAA8B;IAClD,IAAI,OAAO,QAAQ,YAAY;QAC7B,IAAI;IACN,OAAO,IAAI,OAAO,OAAO,QAAQ,YAAY,aAAa,KAAK;QAC7D,2CAA2C;;QACzC,IAA8B,OAAO,GAAG;IAC5C;AACF;AAEO,MAAM,iBAAiB,CAC5B,QACA;;IAEA,MAAM,cAAc,4QAAA,CAAA,SAAY,CAAa;IAE7C,OAAO,4QAAA,CAAA,cAAiB;sCACtB,CAAC;YACC,IAAI,UAAU,aAAa,QAAQ;;gBAC/B,OAAiC,OAAO,GAAG;YAC/C;YAEA,IAAI,YAAY,OAAO,EAAE;gBACvB,UAAU,YAAY,OAAO,EAAE;YACjC;YAEA,YAAY,OAAO,GAAG;YAEtB,IAAI,SAAS;gBACX,UAAU,SAAS;YACrB;QACF;qCACA;QAAC;QAAQ;KAAQ;AAErB;GAxBa;uCA0BE","debugId":null}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/toolbar/toolbar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { Separator } from \"@/components/tiptap-ui-primitive/separator\"\nimport \"@/components/tiptap-ui-primitive/toolbar/toolbar.scss\"\nimport { cn } from \"@/lib/tiptap-utils\"\nimport { useMenuNavigation } from \"@/hooks/use-menu-navigation\"\nimport { useComposedRef } from \"@/hooks/use-composed-ref\"\n\ntype BaseProps = React.HTMLAttributes<HTMLDivElement>\n\ninterface ToolbarProps extends BaseProps {\n  variant?: \"floating\" | \"fixed\"\n}\n\nconst useToolbarNavigation = (\n  toolbarRef: React.RefObject<HTMLDivElement | null>\n) => {\n  const [items, setItems] = React.useState<HTMLElement[]>([])\n\n  const collectItems = React.useCallback(() => {\n    if (!toolbarRef.current) return []\n    return Array.from(\n      toolbarRef.current.querySelectorAll<HTMLElement>(\n        'button:not([disabled]), [role=\"button\"]:not([disabled]), [tabindex=\"0\"]:not([disabled])'\n      )\n    )\n  }, [toolbarRef])\n\n  React.useEffect(() => {\n    const toolbar = toolbarRef.current\n    if (!toolbar) return\n\n    const updateItems = () => setItems(collectItems())\n\n    updateItems()\n    const observer = new MutationObserver(updateItems)\n    observer.observe(toolbar, { childList: true, subtree: true })\n\n    return () => observer.disconnect()\n  }, [collectItems, toolbarRef])\n\n  const { selectedIndex } = useMenuNavigation<HTMLElement>({\n    containerRef: toolbarRef,\n    items,\n    orientation: \"horizontal\",\n    onSelect: (el) => el.click(),\n    autoSelectFirstItem: false,\n  })\n\n  React.useEffect(() => {\n    const toolbar = toolbarRef.current\n    if (!toolbar) return\n\n    const handleFocus = (e: FocusEvent) => {\n      const target = e.target as HTMLElement\n      if (toolbar.contains(target))\n        target.setAttribute(\"data-focus-visible\", \"true\")\n    }\n\n    const handleBlur = (e: FocusEvent) => {\n      const target = e.target as HTMLElement\n      if (toolbar.contains(target)) target.removeAttribute(\"data-focus-visible\")\n    }\n\n    toolbar.addEventListener(\"focus\", handleFocus, true)\n    toolbar.addEventListener(\"blur\", handleBlur, true)\n\n    return () => {\n      toolbar.removeEventListener(\"focus\", handleFocus, true)\n      toolbar.removeEventListener(\"blur\", handleBlur, true)\n    }\n  }, [toolbarRef])\n\n  React.useEffect(() => {\n    if (selectedIndex !== undefined && items[selectedIndex]) {\n      items[selectedIndex].focus()\n    }\n  }, [selectedIndex, items])\n}\n\nexport const Toolbar = React.forwardRef<HTMLDivElement, ToolbarProps>(\n  ({ children, className, variant = \"fixed\", ...props }, ref) => {\n    const toolbarRef = React.useRef<HTMLDivElement>(null)\n    const composedRef = useComposedRef(toolbarRef, ref)\n    useToolbarNavigation(toolbarRef)\n\n    return (\n      <div\n        ref={composedRef}\n        role=\"toolbar\"\n        aria-label=\"toolbar\"\n        data-variant={variant}\n        className={cn(\"tiptap-toolbar\", className)}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\nToolbar.displayName = \"Toolbar\"\n\nexport const ToolbarGroup = React.forwardRef<HTMLDivElement, BaseProps>(\n  ({ children, className, ...props }, ref) => (\n    <div\n      ref={ref}\n      role=\"group\"\n      className={cn(\"tiptap-toolbar-group\", className)}\n      {...props}\n    >\n      {children}\n    </div>\n  )\n)\nToolbarGroup.displayName = \"ToolbarGroup\"\n\nexport const ToolbarSeparator = React.forwardRef<HTMLDivElement, BaseProps>(\n  ({ ...props }, ref) => (\n    <Separator ref={ref} orientation=\"vertical\" decorative {...props} />\n  )\n)\nToolbarSeparator.displayName = \"ToolbarSeparator\"\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1190, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/toolbar/index.tsx"],"sourcesContent":["export * from \"./toolbar\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1209, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/close-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const CloseIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M18.7071 6.70711C19.0976 6.31658 19.0976 5.68342 18.7071 5.29289C18.3166 4.90237 17.6834 4.90237 17.2929 5.29289L12 10.5858L6.70711 5.29289C6.31658 4.90237 5.68342 4.90237 5.29289 5.29289C4.90237 5.68342 4.90237 6.31658 5.29289 6.70711L10.5858 12L5.29289 17.2929C4.90237 17.6834 4.90237 18.3166 5.29289 18.7071C5.68342 19.0976 6.31658 19.0976 6.70711 18.7071L12 13.4142L17.2929 18.7071C17.6834 19.0976 18.3166 19.0976 18.7071 18.7071C19.0976 18.3166 19.0976 17.6834 18.7071 17.2929L13.4142 12L18.7071 6.70711Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nCloseIcon.displayName = \"CloseIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,0BAAY,4QAAA,CAAA,OAAU,MACjC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1254, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-node/image-upload-node/image-upload-node.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { NodeViewProps } from \"@tiptap/react\"\nimport { NodeViewWrapper } from \"@tiptap/react\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { CloseIcon } from \"@/components/tiptap-icons/close-icon\"\nimport \"@/components/tiptap-node/image-upload-node/image-upload-node.scss\"\nimport { focusNextNode, isValidPosition } from \"@/lib/tiptap-utils\"\n\nexport interface FileItem {\n  /**\n   * Unique identifier for the file item\n   */\n  id: string\n  /**\n   * The actual File object being uploaded\n   */\n  file: File\n  /**\n   * Current upload progress as a percentage (0-100)\n   */\n  progress: number\n  /**\n   * Current status of the file upload process\n   * @default \"uploading\"\n   */\n  status: \"uploading\" | \"success\" | \"error\"\n\n  /**\n   * URL to the uploaded file, available after successful upload\n   * @optional\n   */\n  url?: string\n  /**\n   * Controller that can be used to abort the upload process\n   * @optional\n   */\n  abortController?: AbortController\n}\n\nexport interface UploadOptions {\n  /**\n   * Maximum allowed file size in bytes\n   */\n  maxSize: number\n  /**\n   * Maximum number of files that can be uploaded\n   */\n  limit: number\n  /**\n   * String specifying acceptable file types (MIME types or extensions)\n   * @example \".jpg,.png,image/jpeg\" or \"image/*\"\n   */\n  accept: string\n  /**\n   * Function that handles the actual file upload process\n   * @param {File} file - The file to be uploaded\n   * @param {Function} onProgress - Callback function to report upload progress\n   * @param {AbortSignal} signal - Signal that can be used to abort the upload\n   * @returns {Promise<string>} Promise resolving to the URL of the uploaded file\n   */\n  upload: (\n    file: File,\n    onProgress: (event: { progress: number }) => void,\n    signal: AbortSignal\n  ) => Promise<string>\n  /**\n   * Callback triggered when a file is uploaded successfully\n   * @param {string} url - URL of the successfully uploaded file\n   * @optional\n   */\n  onSuccess?: (url: string) => void\n  /**\n   * Callback triggered when an error occurs during upload\n   * @param {Error} error - The error that occurred\n   * @optional\n   */\n  onError?: (error: Error) => void\n}\n\n/**\n * Custom hook for managing multiple file uploads with progress tracking and cancellation\n */\nfunction useFileUpload(options: UploadOptions) {\n  const [fileItems, setFileItems] = React.useState<FileItem[]>([])\n\n  const uploadFile = async (file: File): Promise<string | null> => {\n    if (file.size > options.maxSize) {\n      const error = new Error(\n        `File size exceeds maximum allowed (${options.maxSize / 1024 / 1024}MB)`\n      )\n      options.onError?.(error)\n      return null\n    }\n\n    const abortController = new AbortController()\n    const fileId = crypto.randomUUID()\n\n    const newFileItem: FileItem = {\n      id: fileId,\n      file,\n      progress: 0,\n      status: \"uploading\",\n      abortController,\n    }\n\n    setFileItems((prev) => [...prev, newFileItem])\n\n    try {\n      if (!options.upload) {\n        throw new Error(\"Upload function is not defined\")\n      }\n\n      const url = await options.upload(\n        file,\n        (event: { progress: number }) => {\n          setFileItems((prev) =>\n            prev.map((item) =>\n              item.id === fileId ? { ...item, progress: event.progress } : item\n            )\n          )\n        },\n        abortController.signal\n      )\n\n      if (!url) throw new Error(\"Upload failed: No URL returned\")\n\n      if (!abortController.signal.aborted) {\n        setFileItems((prev) =>\n          prev.map((item) =>\n            item.id === fileId\n              ? { ...item, status: \"success\", url, progress: 100 }\n              : item\n          )\n        )\n        options.onSuccess?.(url)\n        return url\n      }\n\n      return null\n    } catch (error) {\n      if (!abortController.signal.aborted) {\n        setFileItems((prev) =>\n          prev.map((item) =>\n            item.id === fileId\n              ? { ...item, status: \"error\", progress: 0 }\n              : item\n          )\n        )\n        options.onError?.(\n          error instanceof Error ? error : new Error(\"Upload failed\")\n        )\n      }\n      return null\n    }\n  }\n\n  const uploadFiles = async (files: File[]): Promise<string[]> => {\n    if (!files || files.length === 0) {\n      options.onError?.(new Error(\"No files to upload\"))\n      return []\n    }\n\n    if (options.limit && files.length > options.limit) {\n      options.onError?.(\n        new Error(\n          `Maximum ${options.limit} file${options.limit === 1 ? \"\" : \"s\"} allowed`\n        )\n      )\n      return []\n    }\n\n    // Upload all files concurrently\n    const uploadPromises = files.map((file) => uploadFile(file))\n    const results = await Promise.all(uploadPromises)\n\n    // Filter out null results (failed uploads)\n    return results.filter((url): url is string => url !== null)\n  }\n\n  const removeFileItem = (fileId: string) => {\n    setFileItems((prev) => {\n      const fileToRemove = prev.find((item) => item.id === fileId)\n      if (fileToRemove?.abortController) {\n        fileToRemove.abortController.abort()\n      }\n      if (fileToRemove?.url) {\n        URL.revokeObjectURL(fileToRemove.url)\n      }\n      return prev.filter((item) => item.id !== fileId)\n    })\n  }\n\n  const clearAllFiles = () => {\n    fileItems.forEach((item) => {\n      if (item.abortController) {\n        item.abortController.abort()\n      }\n      if (item.url) {\n        URL.revokeObjectURL(item.url)\n      }\n    })\n    setFileItems([])\n  }\n\n  return {\n    fileItems,\n    uploadFiles,\n    removeFileItem,\n    clearAllFiles,\n  }\n}\n\nconst CloudUploadIcon: React.FC = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    className=\"tiptap-image-upload-icon\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M11.1953 4.41771C10.3478 4.08499 9.43578 3.94949 8.5282 4.02147C7.62062 4.09345 6.74133 4.37102 5.95691 4.83316C5.1725 5.2953 4.50354 5.92989 4.00071 6.68886C3.49788 7.44783 3.17436 8.31128 3.05465 9.2138C2.93495 10.1163 3.0222 11.0343 3.3098 11.8981C3.5974 12.7619 4.07781 13.5489 4.71463 14.1995C5.10094 14.5942 5.09414 15.2274 4.69945 15.6137C4.30476 16 3.67163 15.9932 3.28532 15.5985C2.43622 14.731 1.79568 13.6816 1.41221 12.5299C1.02875 11.3781 0.91241 10.1542 1.07201 8.95084C1.23162 7.74748 1.66298 6.59621 2.33343 5.58425C3.00387 4.57229 3.89581 3.72617 4.9417 3.10998C5.98758 2.4938 7.15998 2.1237 8.37008 2.02773C9.58018 1.93176 10.7963 2.11243 11.9262 2.55605C13.0561 2.99968 14.0703 3.69462 14.8919 4.58825C15.5423 5.29573 16.0585 6.11304 16.4177 7.00002H17.4999C18.6799 6.99991 19.8288 7.37933 20.7766 8.08222C21.7245 8.78515 22.4212 9.7743 22.7637 10.9036C23.1062 12.0328 23.0765 13.2423 22.6788 14.3534C22.2812 15.4644 21.5367 16.4181 20.5554 17.0736C20.0962 17.3803 19.4752 17.2567 19.1684 16.7975C18.8617 16.3382 18.9853 15.7172 19.4445 15.4105C20.069 14.9934 20.5427 14.3865 20.7958 13.6794C21.0488 12.9724 21.0678 12.2027 20.8498 11.4841C20.6318 10.7655 20.1885 10.136 19.5853 9.6887C18.9821 9.24138 18.251 8.99993 17.5001 9.00002H15.71C15.2679 9.00002 14.8783 8.70973 14.7518 8.28611C14.4913 7.41374 14.0357 6.61208 13.4195 5.94186C12.8034 5.27164 12.0427 4.75043 11.1953 4.41771Z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M11 14.4142V21C11 21.5523 11.4477 22 12 22C12.5523 22 13 21.5523 13 21V14.4142L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L12.7078 11.2936C12.7054 11.2912 12.703 11.2888 12.7005 11.2864C12.5208 11.1099 12.2746 11.0008 12.003 11L12 11L11.997 11C11.8625 11.0004 11.7343 11.0273 11.6172 11.0759C11.502 11.1236 11.3938 11.1937 11.2995 11.2864C11.297 11.2888 11.2946 11.2912 11.2922 11.2936L7.29289 15.2929C6.90237 15.6834 6.90237 16.3166 7.29289 16.7071C7.68342 17.0976 8.31658 17.0976 8.70711 16.7071L11 14.4142Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nconst FileIcon: React.FC = () => (\n  <svg\n    width=\"43\"\n    height=\"57\"\n    viewBox=\"0 0 43 57\"\n    fill=\"currentColor\"\n    className=\"tiptap-image-upload-dropzone-rect-primary\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0.75 10.75C0.75 5.64137 4.89137 1.5 10 1.5H32.3431C33.2051 1.5 34.0317 1.84241 34.6412 2.4519L40.2981 8.10876C40.9076 8.71825 41.25 9.5449 41.25 10.4069V46.75C41.25 51.8586 37.1086 56 32 56H10C4.89137 56 0.75 51.8586 0.75 46.75V10.75Z\"\n      fill=\"currentColor\"\n      fillOpacity=\"0.11\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.5\"\n    />\n  </svg>\n)\n\nconst FileCornerIcon: React.FC = () => (\n  <svg\n    width=\"10\"\n    height=\"10\"\n    className=\"tiptap-image-upload-dropzone-rect-secondary\"\n    viewBox=\"0 0 10 10\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0 0.75H0.343146C1.40401 0.75 2.42143 1.17143 3.17157 1.92157L8.82843 7.57843C9.57857 8.32857 10 9.34599 10 10.4069V10.75H4C1.79086 10.75 0 8.95914 0 6.75V0.75Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\ninterface ImageUploadDragAreaProps {\n  /**\n   * Callback function triggered when files are dropped or selected\n   * @param {File[]} files - Array of File objects that were dropped or selected\n   */\n  onFile: (files: File[]) => void\n  /**\n   * Optional child elements to render inside the drag area\n   * @optional\n   * @default undefined\n   */\n  children?: React.ReactNode\n}\n\n/**\n * A component that creates a drag-and-drop area for image uploads\n */\nconst ImageUploadDragArea: React.FC<ImageUploadDragAreaProps> = ({\n  onFile,\n  children,\n}) => {\n  const [isDragOver, setIsDragOver] = React.useState(false)\n  const [isDragActive, setIsDragActive] = React.useState(false)\n\n  const handleDragEnter = (e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setIsDragActive(true)\n  }\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (!e.currentTarget.contains(e.relatedTarget as Node)) {\n      setIsDragActive(false)\n      setIsDragOver(false)\n    }\n  }\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setIsDragOver(true)\n  }\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setIsDragActive(false)\n    setIsDragOver(false)\n\n    const files = Array.from(e.dataTransfer.files)\n    if (files.length > 0) {\n      onFile(files)\n    }\n  }\n\n  return (\n    <div\n      className={`tiptap-image-upload-drag-area ${isDragActive ? \"drag-active\" : \"\"} ${isDragOver ? \"drag-over\" : \"\"}`}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      {children}\n    </div>\n  )\n}\n\ninterface ImageUploadPreviewProps {\n  /**\n   * The file item to preview\n   */\n  fileItem: FileItem\n  /**\n   * Callback to remove this file from upload queue\n   */\n  onRemove: () => void\n}\n\n/**\n * Component that displays a preview of an uploading file with progress\n */\nconst ImageUploadPreview: React.FC<ImageUploadPreviewProps> = ({\n  fileItem,\n  onRemove,\n}) => {\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return \"0 Bytes\"\n    const k = 1024\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"]\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`\n  }\n\n  return (\n    <div className=\"tiptap-image-upload-preview\">\n      {fileItem.status === \"uploading\" && (\n        <div\n          className=\"tiptap-image-upload-progress\"\n          style={{ width: `${fileItem.progress}%` }}\n        />\n      )}\n\n      <div className=\"tiptap-image-upload-preview-content\">\n        <div className=\"tiptap-image-upload-file-info\">\n          <div className=\"tiptap-image-upload-file-icon\">\n            <CloudUploadIcon />\n          </div>\n          <div className=\"tiptap-image-upload-details\">\n            <span className=\"tiptap-image-upload-text\">\n              {fileItem.file.name}\n            </span>\n            <span className=\"tiptap-image-upload-subtext\">\n              {formatFileSize(fileItem.file.size)}\n            </span>\n          </div>\n        </div>\n        <div className=\"tiptap-image-upload-actions\">\n          {fileItem.status === \"uploading\" && (\n            <span className=\"tiptap-image-upload-progress-text\">\n              {fileItem.progress}%\n            </span>\n          )}\n          <Button\n            type=\"button\"\n            data-style=\"ghost\"\n            onClick={(e) => {\n              e.stopPropagation()\n              onRemove()\n            }}\n          >\n            <CloseIcon className=\"tiptap-button-icon\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst DropZoneContent: React.FC<{ maxSize: number; limit: number }> = ({\n  maxSize,\n  limit,\n}) => (\n  <>\n    <div className=\"tiptap-image-upload-dropzone\">\n      <FileIcon />\n      <FileCornerIcon />\n      <div className=\"tiptap-image-upload-icon-container\">\n        <CloudUploadIcon />\n      </div>\n    </div>\n\n    <div className=\"tiptap-image-upload-content\">\n      <span className=\"tiptap-image-upload-text\">\n        <em>Click to upload</em> or drag and drop\n      </span>\n      <span className=\"tiptap-image-upload-subtext\">\n        Maximum {limit} file{limit === 1 ? \"\" : \"s\"}, {maxSize / 1024 / 1024}MB\n        each.\n      </span>\n    </div>\n  </>\n)\n\nexport const ImageUploadNode: React.FC<NodeViewProps> = (props) => {\n  const { accept, limit, maxSize } = props.node.attrs\n  const inputRef = React.useRef<HTMLInputElement>(null)\n  const extension = props.extension\n\n  const uploadOptions: UploadOptions = {\n    maxSize,\n    limit,\n    accept,\n    upload: extension.options.upload,\n    onSuccess: extension.options.onSuccess,\n    onError: extension.options.onError,\n  }\n\n  const { fileItems, uploadFiles, removeFileItem, clearAllFiles } =\n    useFileUpload(uploadOptions)\n\n  const handleUpload = async (files: File[]) => {\n    const urls = await uploadFiles(files)\n\n    if (urls.length > 0) {\n      const pos = props.getPos()\n\n      if (isValidPosition(pos)) {\n        const imageNodes = urls.map((url, index) => {\n          const filename =\n            files[index]?.name.replace(/\\.[^/.]+$/, \"\") || \"unknown\"\n          return {\n            type: extension.options.type,\n            attrs: {\n              ...extension.options,\n              src: url,\n              alt: filename,\n              title: filename,\n            },\n          }\n        })\n\n        props.editor\n          .chain()\n          .focus()\n          .deleteRange({ from: pos, to: pos + props.node.nodeSize })\n          .insertContentAt(pos, imageNodes)\n          .run()\n\n        focusNextNode(props.editor)\n      }\n    }\n  }\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (!files || files.length === 0) {\n      extension.options.onError?.(new Error(\"No file selected\"))\n      return\n    }\n    handleUpload(Array.from(files))\n  }\n\n  const handleClick = () => {\n    if (inputRef.current && fileItems.length === 0) {\n      inputRef.current.value = \"\"\n      inputRef.current.click()\n    }\n  }\n\n  const hasFiles = fileItems.length > 0\n\n  return (\n    <NodeViewWrapper\n      className=\"tiptap-image-upload\"\n      tabIndex={0}\n      onClick={handleClick}\n    >\n      {!hasFiles && (\n        <ImageUploadDragArea onFile={handleUpload}>\n          <DropZoneContent maxSize={maxSize} limit={limit} />\n        </ImageUploadDragArea>\n      )}\n\n      {hasFiles && (\n        <div className=\"tiptap-image-upload-previews\">\n          {fileItems.length > 1 && (\n            <div className=\"tiptap-image-upload-header\">\n              <span>Uploading {fileItems.length} files</span>\n              <Button\n                type=\"button\"\n                data-style=\"ghost\"\n                onClick={(e) => {\n                  e.stopPropagation()\n                  clearAllFiles()\n                }}\n              >\n                Clear All\n              </Button>\n            </div>\n          )}\n          {fileItems.map((fileItem) => (\n            <ImageUploadPreview\n              key={fileItem.id}\n              fileItem={fileItem}\n              onRemove={() => removeFileItem(fileItem.id)}\n            />\n          ))}\n        </div>\n      )}\n\n      <input\n        ref={inputRef}\n        name=\"file\"\n        accept={accept}\n        type=\"file\"\n        multiple={limit > 1}\n        onChange={handleChange}\n        onClick={(e: React.MouseEvent<HTMLInputElement>) => e.stopPropagation()}\n      />\n    </NodeViewWrapper>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1889, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-node/image-upload-node/image-upload-node-extension.ts"],"sourcesContent":["import { mergeAttributes, Node } from \"@tiptap/react\"\nimport { ReactNodeViewRenderer } from \"@tiptap/react\"\nimport { ImageUploadNode as ImageUploadNodeComponent } from \"@/components/tiptap-node/image-upload-node/image-upload-node\"\nimport type { NodeType } from \"@tiptap/pm/model\"\n\nexport type UploadFunction = (\n  file: File,\n  onProgress?: (event: { progress: number }) => void,\n  abortSignal?: AbortSignal\n) => Promise<string>\n\nexport interface ImageUploadNodeOptions {\n  /**\n   * The type of the node.\n   * @default 'image'\n   */\n  type?: string | NodeType | undefined\n  /**\n   * Acceptable file types for upload.\n   * @default 'image/*'\n   */\n  accept?: string\n  /**\n   * Maximum number of files that can be uploaded.\n   * @default 1\n   */\n  limit?: number\n  /**\n   * Maximum file size in bytes (0 for unlimited).\n   * @default 0\n   */\n  maxSize?: number\n  /**\n   * Function to handle the upload process.\n   */\n  upload?: UploadFunction\n  /**\n   * Callback for upload errors.\n   */\n  onError?: (error: Error) => void\n  /**\n   * Callback for successful uploads.\n   */\n  onSuccess?: (url: string) => void\n  /**\n   * HTML attributes to add to the image element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module \"@tiptap/react\" {\n  interface Commands<ReturnType> {\n    imageUpload: {\n      setImageUploadNode: (options?: ImageUploadNodeOptions) => ReturnType\n    }\n  }\n}\n\n/**\n * A Tiptap node extension that creates an image upload component.\n * @see registry/tiptap-node/image-upload-node/image-upload-node\n */\nexport const ImageUploadNode = Node.create<ImageUploadNodeOptions>({\n  name: \"imageUpload\",\n\n  group: \"block\",\n\n  draggable: true,\n\n  atom: true,\n\n  addOptions() {\n    return {\n      type: \"image\",\n      accept: \"image/*\",\n      limit: 1,\n      maxSize: 0,\n      upload: undefined,\n      onError: undefined,\n      onSuccess: undefined,\n      HTMLAttributes: {},\n    }\n  },\n\n  addAttributes() {\n    return {\n      accept: {\n        default: this.options.accept,\n      },\n      limit: {\n        default: this.options.limit,\n      },\n      maxSize: {\n        default: this.options.maxSize,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{ tag: 'div[data-type=\"image-upload\"]' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      \"div\",\n      mergeAttributes({ \"data-type\": \"image-upload\" }, HTMLAttributes),\n    ]\n  },\n\n  addNodeView() {\n    return ReactNodeViewRenderer(ImageUploadNodeComponent)\n  },\n\n  addCommands() {\n    return {\n      setImageUploadNode:\n        (options) =>\n        ({ commands }) => {\n          return commands.insertContent({\n            type: this.name,\n            attrs: options,\n          })\n        },\n    }\n  },\n\n  /**\n   * Adds Enter key handler to trigger the upload component when it's selected.\n   */\n  addKeyboardShortcuts() {\n    return {\n      Enter: ({ editor }) => {\n        const { selection } = editor.state\n        const { nodeAfter } = selection.$from\n\n        if (\n          nodeAfter &&\n          nodeAfter.type.name === \"imageUpload\" &&\n          editor.isActive(\"imageUpload\")\n        ) {\n          const nodeEl = editor.view.nodeDOM(selection.$from.pos)\n          if (nodeEl && nodeEl instanceof HTMLElement) {\n            // Since NodeViewWrapper is wrapped with a div, we need to click the first child\n            const firstChild = nodeEl.firstChild\n            if (firstChild && firstChild instanceof HTMLElement) {\n              firstChild.click()\n              return true\n            }\n          }\n        }\n        return false\n      },\n    }\n  },\n})\n\nexport default ImageUploadNode\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AA+DO,MAAM,kBAAkB,iPAAA,CAAA,OAAI,CAAC,MAAM,CAAyB;IACjE,MAAM;IAEN,OAAO;IAEP,WAAW;IAEX,MAAM;IAEN;QACE,OAAO;YACL,MAAM;YACN,QAAQ;YACR,OAAO;YACP,SAAS;YACT,QAAQ;YACR,SAAS;YACT,WAAW;YACX,gBAAgB,CAAC;QACnB;IACF;IAEA;QACE,OAAO;YACL,QAAQ;gBACN,SAAS,IAAI,CAAC,OAAO,CAAC,MAAM;YAC9B;YACA,OAAO;gBACL,SAAS,IAAI,CAAC,OAAO,CAAC,KAAK;YAC7B;YACA,SAAS;gBACP,SAAS,IAAI,CAAC,OAAO,CAAC,OAAO;YAC/B;QACF;IACF;IAEA;QACE,OAAO;YAAC;gBAAE,KAAK;YAAgC;SAAE;IACnD;IAEA,YAAW,KAAkB;YAAlB,EAAE,cAAc,EAAE,GAAlB;QACT,OAAO;YACL;YACA,CAAA,GAAA,iPAAA,CAAA,kBAAe,AAAD,EAAE;gBAAE,aAAa;YAAe,GAAG;SAClD;IACH;IAEA;QACE,OAAO,CAAA,GAAA,+QAAA,CAAA,wBAAqB,AAAD,EAAE,sLAAA,CAAA,kBAAwB;IACvD;IAEA;QACE,OAAO;YACL,oBACE,CAAC,UACD;wBAAC,EAAE,QAAQ,EAAE;oBACX,OAAO,SAAS,aAAa,CAAC;wBAC5B,MAAM,IAAI,CAAC,IAAI;wBACf,OAAO;oBACT;gBACF;QACJ;IACF;IAEA;;GAEC,GACD;QACE,OAAO;YACL,OAAO;oBAAC,EAAE,MAAM,EAAE;gBAChB,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,KAAK;gBAClC,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,KAAK;gBAErC,IACE,aACA,UAAU,IAAI,CAAC,IAAI,KAAK,iBACxB,OAAO,QAAQ,CAAC,gBAChB;oBACA,MAAM,SAAS,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,CAAC,GAAG;oBACtD,IAAI,UAAU,kBAAkB,aAAa;wBAC3C,gFAAgF;wBAChF,MAAM,aAAa,OAAO,UAAU;wBACpC,IAAI,cAAc,sBAAsB,aAAa;4BACnD,WAAW,KAAK;4BAChB,OAAO;wBACT;oBACF;gBACF;gBACA,OAAO;YACT;QACF;IACF;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 1993, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-node/horizontal-rule-node/horizontal-rule-node-extension.ts"],"sourcesContent":["import { mergeAttributes } from \"@tiptap/react\"\nimport TiptapHorizontalRule from \"@tiptap/extension-horizontal-rule\"\n\nexport const HorizontalRule = TiptapHorizontalRule.extend({\n  renderHTML() {\n    return [\n      \"div\",\n      mergeAttributes(this.options.HTMLAttributes, { \"data-type\": this.name }),\n      [\"hr\"],\n    ]\n  },\n})\n\nexport default HorizontalRule\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,iBAAiB,gRAAA,CAAA,UAAoB,CAAC,MAAM,CAAC;IACxD;QACE,OAAO;YACL;YACA,CAAA,GAAA,iPAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;gBAAE,aAAa,IAAI,CAAC,IAAI;YAAC;YACtE;gBAAC;aAAK;SACP;IACH;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 2024, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/chevron-down-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ChevronDownIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.29289 8.29289C5.68342 7.90237 6.31658 7.90237 6.70711 8.29289L12 13.5858L17.2929 8.29289C17.6834 7.90237 18.3166 7.90237 18.7071 8.29289C19.0976 8.68342 19.0976 9.31658 18.7071 9.70711L12.7071 15.7071C12.3166 16.0976 11.6834 16.0976 11.2929 15.7071L5.29289 9.70711C4.90237 9.31658 4.90237 8.68342 5.29289 8.29289Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nChevronDownIcon.displayName = \"ChevronDownIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2071, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-tiptap-editor.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\nimport { useCurrentEditor, useEditorState } from \"@tiptap/react\"\n\n/**\n * Hook that provides access to a Tiptap editor instance.\n *\n * Accepts an optional editor instance directly, or falls back to retrieving\n * the editor from the Tiptap context if available. This allows components\n * to work both when given an editor directly and when used within a Tiptap\n * editor context.\n *\n * @param providedEditor - Optional editor instance to use instead of the context editor\n * @returns The provided editor or the editor from context, whichever is available\n */\nexport function useTiptapEditor(providedEditor?: Editor | null): {\n  editor: Editor | null\n  editorState?: Editor[\"state\"]\n  canCommand?: Editor[\"can\"]\n} {\n  const { editor: coreEditor } = useCurrentEditor()\n  const mainEditor = React.useMemo(\n    () => providedEditor || coreEditor,\n    [providedEditor, coreEditor]\n  )\n\n  const editorState = useEditorState({\n    editor: mainEditor,\n    selector(context) {\n      if (!context.editor) {\n        return {\n          editor: null,\n          editorState: undefined,\n          canCommand: undefined,\n        }\n      }\n\n      return {\n        editor: context.editor,\n        editorState: context.editor.state,\n        canCommand: context.editor.can,\n      }\n    },\n  })\n\n  return editorState || { editor: null }\n}\n"],"names":[],"mappings":";;;AAEA;AAEA;;AAJA;;;AAiBO,SAAS,gBAAgB,cAA8B;;IAK5D,MAAM,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,+QAAA,CAAA,mBAAgB,AAAD;IAC9C,MAAM,aAAa,4QAAA,CAAA,UAAa;+CAC9B,IAAM,kBAAkB;8CACxB;QAAC;QAAgB;KAAW;IAG9B,MAAM,cAAc,CAAA,GAAA,+QAAA,CAAA,iBAAc,AAAD,EAAE;QACjC,QAAQ;QACR,UAAS,OAAO;YACd,IAAI,CAAC,QAAQ,MAAM,EAAE;gBACnB,OAAO;oBACL,QAAQ;oBACR,aAAa;oBACb,YAAY;gBACd;YACF;YAEA,OAAO;gBACL,QAAQ,QAAQ,MAAM;gBACtB,aAAa,QAAQ,MAAM,CAAC,KAAK;gBACjC,YAAY,QAAQ,MAAM,CAAC,GAAG;YAChC;QACF;IACF;IAEA,OAAO,eAAe;QAAE,QAAQ;IAAK;AACvC;GA/BgB;;QAKiB,+QAAA,CAAA,mBAAgB;QAM3B,+QAAA,CAAA,iBAAc","debugId":null}},
    {"offset": {"line": 2125, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-one-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingOneIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M5 6C5 5.44772 4.55228 5 4 5C3.44772 5 3 5.44772 3 6V18C3 18.5523 3.44772 19 4 19C4.55228 19 5 18.5523 5 18V13H11V18C11 18.5523 11.4477 19 12 19C12.5523 19 13 18.5523 13 18V6C13 5.44772 12.5523 5 12 5C11.4477 5 11 5.44772 11 6V11H5V6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M21.0001 10C21.0001 9.63121 20.7971 9.29235 20.472 9.11833C20.1468 8.94431 19.7523 8.96338 19.4454 9.16795L16.4454 11.168C15.9859 11.4743 15.8617 12.0952 16.1681 12.5547C16.4744 13.0142 17.0953 13.1384 17.5548 12.8321L19.0001 11.8685V18C19.0001 18.5523 19.4478 19 20.0001 19C20.5524 19 21.0001 18.5523 21.0001 18V10Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingOneIcon.displayName = \"HeadingOneIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,+BAAiB,4QAAA,CAAA,OAAU,MACtC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2180, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-two-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingTwoIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M5 6C5 5.44772 4.55228 5 4 5C3.44772 5 3 5.44772 3 6V18C3 18.5523 3.44772 19 4 19C4.55228 19 5 18.5523 5 18V13H11V18C11 18.5523 11.4477 19 12 19C12.5523 19 13 18.5523 13 18V6C13 5.44772 12.5523 5 12 5C11.4477 5 11 5.44772 11 6V11H5V6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M22.0001 12C22.0001 10.7611 21.1663 9.79297 20.0663 9.42632C18.9547 9.05578 17.6171 9.28724 16.4001 10.2C15.9582 10.5314 15.8687 11.1582 16.2001 11.6C16.5314 12.0418 17.1582 12.1314 17.6001 11.8C18.383 11.2128 19.0455 11.1942 19.4338 11.3237C19.8339 11.457 20.0001 11.7389 20.0001 12C20.0001 12.4839 19.8554 12.7379 19.6537 12.9481C19.4275 13.1837 19.1378 13.363 18.7055 13.6307C18.6313 13.6767 18.553 13.7252 18.4701 13.777C17.9572 14.0975 17.3128 14.5261 16.8163 15.2087C16.3007 15.9177 16.0001 16.8183 16.0001 18C16.0001 18.5523 16.4478 19 17.0001 19H21.0001C21.5523 19 22.0001 18.5523 22.0001 18C22.0001 17.4477 21.5523 17 21.0001 17H18.131C18.21 16.742 18.3176 16.5448 18.4338 16.385C18.6873 16.0364 19.0429 15.7775 19.5301 15.473C19.5898 15.4357 19.6536 15.3966 19.7205 15.3556C20.139 15.0992 20.6783 14.7687 21.0964 14.3332C21.6447 13.7621 22.0001 13.0161 22.0001 12Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingTwoIcon.displayName = \"HeadingTwoIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,+BAAiB,4QAAA,CAAA,OAAU,MACtC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2235, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-three-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingThreeIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M4 5C4.55228 5 5 5.44772 5 6V11H11V6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6V18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18V13H5V18C5 18.5523 4.55228 19 4 19C3.44772 19 3 18.5523 3 18V6C3 5.44772 3.44772 5 4 5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M19.4608 11.2169C19.1135 11.0531 18.5876 11.0204 18.0069 11.3619C17.5309 11.642 16.918 11.4831 16.638 11.007C16.358 10.531 16.5169 9.91809 16.9929 9.63807C18.1123 8.97962 19.3364 8.94691 20.314 9.40808C21.2839 9.86558 21.9999 10.818 21.9999 12C21.9999 12.7957 21.6838 13.5587 21.1212 14.1213C20.5586 14.6839 19.7956 15 18.9999 15C18.4476 15 17.9999 14.5523 17.9999 14C17.9999 13.4477 18.4476 13 18.9999 13C19.2651 13 19.5195 12.8947 19.707 12.7071C19.8946 12.5196 19.9999 12.2652 19.9999 12C19.9999 11.6821 19.8159 11.3844 19.4608 11.2169Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M18.0001 14C18.0001 13.4477 18.4478 13 19.0001 13C19.7957 13 20.5588 13.3161 21.1214 13.8787C21.684 14.4413 22.0001 15.2043 22.0001 16C22.0001 17.2853 21.2767 18.3971 20.1604 18.8994C19.0257 19.41 17.642 19.2315 16.4001 18.3C15.9582 17.9686 15.8687 17.3418 16.2001 16.9C16.5314 16.4582 17.1582 16.3686 17.6001 16.7C18.3581 17.2685 18.9744 17.24 19.3397 17.0756C19.7234 16.9029 20.0001 16.5147 20.0001 16C20.0001 15.7348 19.8947 15.4804 19.7072 15.2929C19.5196 15.1054 19.2653 15 19.0001 15C18.4478 15 18.0001 14.5523 18.0001 14Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingThreeIcon.displayName = \"HeadingThreeIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,iCAAmB,4QAAA,CAAA,OAAU,MACxC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2302, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-four-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingFourIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M4 5C4.55228 5 5 5.44772 5 6V11H11V6C11 5.44772 11.4477 5 12 5C12.5523 5 13 5.44772 13 6V18C13 18.5523 12.5523 19 12 19C11.4477 19 11 18.5523 11 18V13H5V18C5 18.5523 4.55228 19 4 19C3.44772 19 3 18.5523 3 18V6C3 5.44772 3.44772 5 4 5Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M17 9C17.5523 9 18 9.44772 18 10V13H20V10C20 9.44772 20.4477 9 21 9C21.5523 9 22 9.44772 22 10V18C22 18.5523 21.5523 19 21 19C20.4477 19 20 18.5523 20 18V15H17C16.4477 15 16 14.5523 16 14V10C16 9.44772 16.4477 9 17 9Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingFourIcon.displayName = \"HeadingFourIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2357, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-five-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingFiveIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M5 6C5 5.44772 4.55228 5 4 5C3.44772 5 3 5.44772 3 6V18C3 18.5523 3.44772 19 4 19C4.55228 19 5 18.5523 5 18V13H11V18C11 18.5523 11.4477 19 12 19C12.5523 19 13 18.5523 13 18V6C13 5.44772 12.5523 5 12 5C11.4477 5 11 5.44772 11 6V11H5V6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M16 10C16 9.44772 16.4477 9 17 9H21C21.5523 9 22 9.44772 22 10C22 10.5523 21.5523 11 21 11H18V12H18.3C20.2754 12 22 13.4739 22 15.5C22 17.5261 20.2754 19 18.3 19C17.6457 19 17.0925 18.8643 16.5528 18.5944C16.0588 18.3474 15.8586 17.7468 16.1055 17.2528C16.3525 16.7588 16.9532 16.5586 17.4472 16.8056C17.7074 16.9357 17.9542 17 18.3 17C19.3246 17 20 16.2739 20 15.5C20 14.7261 19.3246 14 18.3 14H17C16.4477 14 16 13.5523 16 13L16 12.9928V10Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingFiveIcon.displayName = \"HeadingFiveIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2412, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-six-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingSixIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M5 6C5 5.44772 4.55228 5 4 5C3.44772 5 3 5.44772 3 6V18C3 18.5523 3.44772 19 4 19C4.55228 19 5 18.5523 5 18V13H11V18C11 18.5523 11.4477 19 12 19C12.5523 19 13 18.5523 13 18V6C13 5.44772 12.5523 5 12 5C11.4477 5 11 5.44772 11 6V11H5V6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M20.7071 9.29289C21.0976 9.68342 21.0976 10.3166 20.7071 10.7071C19.8392 11.575 19.2179 12.2949 18.7889 13.0073C18.8587 13.0025 18.929 13 19 13C20.6569 13 22 14.3431 22 16C22 17.6569 20.6569 19 19 19C17.3431 19 16 17.6569 16 16C16 14.6007 16.2837 13.4368 16.8676 12.3419C17.4384 11.2717 18.2728 10.3129 19.2929 9.29289C19.6834 8.90237 20.3166 8.90237 20.7071 9.29289ZM19 17C18.4477 17 18 16.5523 18 16C18 15.4477 18.4477 15 19 15C19.5523 15 20 15.4477 20 16C20 16.5523 19.5523 17 19 17Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingSixIcon.displayName = \"HeadingSixIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,+BAAiB,4QAAA,CAAA,OAAU,MACtC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2469, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/heading-button/use-heading.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { type Editor } from \"@tiptap/react\"\nimport { NodeSelection, TextSelection } from \"@tiptap/pm/state\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport {\n  findNodePosition,\n  isNodeInSchema,\n  isNodeTypeSelected,\n  isValidPosition,\n} from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { HeadingOneIcon } from \"@/components/tiptap-icons/heading-one-icon\"\nimport { HeadingTwoIcon } from \"@/components/tiptap-icons/heading-two-icon\"\nimport { HeadingThreeIcon } from \"@/components/tiptap-icons/heading-three-icon\"\nimport { HeadingFourIcon } from \"@/components/tiptap-icons/heading-four-icon\"\nimport { HeadingFiveIcon } from \"@/components/tiptap-icons/heading-five-icon\"\nimport { HeadingSixIcon } from \"@/components/tiptap-icons/heading-six-icon\"\n\nexport type Level = 1 | 2 | 3 | 4 | 5 | 6\n\n/**\n * Configuration for the heading functionality\n */\nexport interface UseHeadingConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The heading level.\n   */\n  level: Level\n  /**\n   * Whether the button should hide when heading is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful heading toggle.\n   */\n  onToggled?: () => void\n}\n\nexport const headingIcons = {\n  1: HeadingOneIcon,\n  2: HeadingTwoIcon,\n  3: HeadingThreeIcon,\n  4: HeadingFourIcon,\n  5: HeadingFiveIcon,\n  6: HeadingSixIcon,\n}\n\nexport const HEADING_SHORTCUT_KEYS: Record<Level, string> = {\n  1: \"ctrl+alt+1\",\n  2: \"ctrl+alt+2\",\n  3: \"ctrl+alt+3\",\n  4: \"ctrl+alt+4\",\n  5: \"ctrl+alt+5\",\n  6: \"ctrl+alt+6\",\n}\n\n/**\n * Checks if heading can be toggled in the current editor state\n */\nexport function canToggle(\n  editor: Editor | null,\n  level?: Level,\n  turnInto: boolean = true\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (\n    !isNodeInSchema(\"heading\", editor) ||\n    isNodeTypeSelected(editor, [\"image\"])\n  )\n    return false\n\n  if (!turnInto) {\n    return level\n      ? editor.can().setNode(\"heading\", { level })\n      : editor.can().setNode(\"heading\")\n  }\n\n  try {\n    const view = editor.view\n    const state = view.state\n    const selection = state.selection\n\n    if (selection.empty || selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n    }\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Checks if heading is currently active\n */\nexport function isHeadingActive(\n  editor: Editor | null,\n  level?: Level | Level[]\n): boolean {\n  if (!editor || !editor.isEditable) return false\n\n  if (Array.isArray(level)) {\n    return level.some((l) => editor.isActive(\"heading\", { level: l }))\n  }\n\n  return level\n    ? editor.isActive(\"heading\", { level })\n    : editor.isActive(\"heading\")\n}\n\n/**\n * Toggles heading in the editor\n */\nexport function toggleHeading(\n  editor: Editor | null,\n  level: Level | Level[]\n): boolean {\n  if (!editor || !editor.isEditable) return false\n\n  const levels = Array.isArray(level) ? level : [level]\n  const toggleLevel = levels.find((l) => canToggle(editor, l))\n\n  if (!toggleLevel) return false\n\n  try {\n    const view = editor.view\n    let state = view.state\n    let tr = state.tr\n\n    // No selection, find the cursor position\n    if (state.selection.empty || state.selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n\n      tr = tr.setSelection(NodeSelection.create(state.doc, pos))\n      view.dispatch(tr)\n      state = view.state\n    }\n\n    const selection = state.selection\n    let chain = editor.chain().focus()\n\n    // Handle NodeSelection\n    if (selection instanceof NodeSelection) {\n      const firstChild = selection.node.firstChild?.firstChild\n      const lastChild = selection.node.lastChild?.lastChild\n\n      const from = firstChild\n        ? selection.from + firstChild.nodeSize\n        : selection.from + 1\n\n      const to = lastChild\n        ? selection.to - lastChild.nodeSize\n        : selection.to - 1\n\n      chain = chain.setTextSelection({ from, to }).clearNodes()\n    }\n\n    const isActive = levels.some((l) =>\n      editor.isActive(\"heading\", { level: l })\n    )\n\n    const toggle = isActive\n      ? chain.setNode(\"paragraph\")\n      : chain.setNode(\"heading\", { level: toggleLevel })\n\n    toggle.run()\n\n    editor.chain().focus().selectTextblockEnd().run()\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Determines if the heading button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  level?: Level | Level[]\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, level, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isNodeInSchema(\"heading\", editor)) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    if (Array.isArray(level)) {\n      return level.some((l) => canToggle(editor, l))\n    }\n    return canToggle(editor, level)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides heading functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MySimpleHeadingButton() {\n *   const { isVisible, isActive, handleToggle, Icon } = useHeading({ level: 1 })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <button\n *       onClick={handleToggle}\n *       aria-pressed={isActive}\n *     >\n *       <Icon />\n *       Heading 1\n *     </button>\n *   )\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedHeadingButton() {\n *   const { isVisible, isActive, handleToggle, label, Icon } = useHeading({\n *     level: 2,\n *     editor: myEditor,\n *     hideWhenUnavailable: true,\n *     onToggled: (isActive) => console.log('Heading toggled:', isActive)\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleToggle}\n *       aria-label={label}\n *       aria-pressed={isActive}\n *     >\n *       <Icon />\n *       Toggle Heading 2\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useHeading(config: UseHeadingConfig) {\n  const {\n    editor: providedEditor,\n    level,\n    hideWhenUnavailable = false,\n    onToggled,\n  } = config\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canToggleState = canToggle(editor, level)\n  const isActive = isHeadingActive(editor, level)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, level, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, level, hideWhenUnavailable])\n\n  const handleToggle = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = toggleHeading(editor, level)\n    if (success) {\n      onToggled?.()\n    }\n    return success\n  }, [editor, level, onToggled])\n\n  useHotkeys(\n    HEADING_SHORTCUT_KEYS[level],\n    (event) => {\n      event.preventDefault()\n      handleToggle()\n    },\n    {\n      enabled: isVisible && canToggleState,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleToggle,\n    canToggle: canToggleState,\n    label: `Heading ${level}`,\n    shortcutKeys: HEADING_SHORTCUT_KEYS[level],\n    Icon: headingIcons[level],\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2708, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/badge/badge.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport \"@/components/tiptap-ui-primitive/badge/badge-colors.scss\"\nimport \"@/components/tiptap-ui-primitive/badge/badge-group.scss\"\nimport \"@/components/tiptap-ui-primitive/badge/badge.scss\"\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: \"ghost\" | \"white\" | \"gray\" | \"green\" | \"default\"\n  size?: \"default\" | \"small\"\n  appearance?: \"default\" | \"subdued\" | \"emphasized\"\n  trimText?: boolean\n}\n\nexport const Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\n  (\n    {\n      variant,\n      size = \"default\",\n      appearance = \"default\",\n      trimText = false,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={`tiptap-badge ${className || \"\"}`}\n        data-style={variant}\n        data-size={size}\n        data-appearance={appearance}\n        data-text-trim={trimText ? \"on\" : \"off\"}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nBadge.displayName = \"Badge\"\n\nexport default Badge\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;;;;AAcO,MAAM,sBAAQ,4QAAA,CAAA,aAAgB,MACnC,QAUE;QATA,EACE,OAAO,EACP,OAAO,SAAS,EAChB,aAAa,SAAS,EACtB,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,EACR,GAAG,OACJ;IAGD,qBACE,4SAAC;QACC,KAAK;QACL,WAAW,AAAC,gBAA+B,OAAhB,aAAa;QACxC,cAAY;QACZ,aAAW;QACX,mBAAiB;QACjB,kBAAgB,WAAW,OAAO;QACjC,GAAG,KAAK;kBAER;;;;;;AAGP;;AAGF,MAAM,WAAW,GAAG;uCAEL","debugId":null}},
    {"offset": {"line": 2752, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/badge/index.tsx"],"sourcesContent":["export * from \"./badge\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 2771, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/heading-button/heading-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Tiptap UI ---\nimport type {\n  Level,\n  UseHeadingConfig,\n} from \"@/components/tiptap-ui/heading-button\"\nimport {\n  HEADING_SHORTCUT_KEYS,\n  useHeading,\n} from \"@/components/tiptap-ui/heading-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\nexport interface HeadingButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseHeadingConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function HeadingShortcutBadge({\n  level,\n  shortcutKeys = HEADING_SHORTCUT_KEYS[level],\n}: {\n  level: Level\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for toggling heading in a Tiptap editor.\n *\n * For custom button implementations, use the `useHeading` hook instead.\n */\nexport const HeadingButton = React.forwardRef<\n  HTMLButtonElement,\n  HeadingButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      level,\n      text,\n      hideWhenUnavailable = false,\n      onToggled,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      canToggle,\n      isActive,\n      handleToggle,\n      label,\n      Icon,\n      shortcutKeys,\n    } = useHeading({\n      editor,\n      level,\n      hideWhenUnavailable,\n      onToggled,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleToggle()\n      },\n      [handleToggle, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        role=\"button\"\n        tabIndex={-1}\n        disabled={!canToggle}\n        data-disabled={!canToggle}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip={label}\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <HeadingShortcutBadge level={level} shortcutKeys={shortcutKeys} />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nHeadingButton.displayName = \"HeadingButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAOA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;;;AArBA;;;;;;;AAqCO,SAAS,qBAAqB,KAMpC;QANoC,EACnC,KAAK,EACL,eAAe,oKAAA,CAAA,wBAAqB,CAAC,MAAM,EAI5C,GANoC;IAOnC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KARgB;AAeT,MAAM,8BAAgB,GAAA,4QAAA,CAAA,aAAgB,UAI3C,QAYE;QAXA,EACE,QAAQ,cAAc,EACtB,KAAK,EACL,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,IAAI,EACJ,YAAY,EACb,GAAG,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;QACb;QACA;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;kDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;iDACA;QAAC;QAAc;KAAQ;IAGzB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,MAAK;QACL,UAAU,CAAC;QACX,UAAU,CAAC;QACX,iBAAe,CAAC;QAChB,cAAY;QACZ,gBAAc;QACd,SAAS;QACT,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBAAqB,OAAO;oBAAO,cAAc;;;;;;;;;;;;;AAM9D;;QAxDqB,mIAAA,CAAA,kBAAe;QAS9B,oKAAA,CAAA,aAAU;;;;QATK,mIAAA,CAAA,kBAAe;QAS9B,oKAAA,CAAA,aAAU;;;;AAkDlB,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2903, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/heading-button/index.tsx"],"sourcesContent":["export * from \"./heading-button\"\nexport * from \"./use-heading\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 2925, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/heading-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HeadingIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M6 3C6.55228 3 7 3.44772 7 4V11H17V4C17 3.44772 17.4477 3 18 3C18.5523 3 19 3.44772 19 4V20C19 20.5523 18.5523 21 18 21C17.4477 21 17 20.5523 17 20V13H7V20C7 20.5523 6.55228 21 6 21C5.44772 21 5 20.5523 5 20V4C5 3.44772 5.44772 3 6 3Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHeadingIcon.displayName = \"HeadingIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,4BAAc,4QAAA,CAAA,OAAU,MACnC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2970, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/heading-dropdown-menu/use-heading-dropdown-menu.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Icons ---\nimport { HeadingIcon } from \"@/components/tiptap-icons/heading-icon\"\n\n// --- Tiptap UI ---\nimport {\n  headingIcons,\n  type Level,\n  isHeadingActive,\n  canToggle,\n  shouldShowButton,\n} from \"@/components/tiptap-ui/heading-button\"\n\n/**\n * Configuration for the heading dropdown menu functionality\n */\nexport interface UseHeadingDropdownMenuConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * Available heading levels to show in the dropdown\n   * @default [1, 2, 3, 4, 5, 6]\n   */\n  levels?: Level[]\n  /**\n   * Whether the dropdown should hide when headings are not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n}\n\n/**\n * Gets the currently active heading level from the available levels\n */\nexport function getActiveHeadingLevel(\n  editor: Editor | null,\n  levels: Level[] = [1, 2, 3, 4, 5, 6]\n): Level | undefined {\n  if (!editor || !editor.isEditable) return undefined\n  return levels.find((level) => isHeadingActive(editor, level))\n}\n\n/**\n * Custom hook that provides heading dropdown menu functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MyHeadingDropdown() {\n *   const {\n *     isVisible,\n *     activeLevel,\n *     isAnyHeadingActive,\n *     canToggle,\n *     levels,\n *   } = useHeadingDropdownMenu()\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <DropdownMenu>\n *       // dropdown content\n *     </DropdownMenu>\n *   )\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedHeadingDropdown() {\n *   const {\n *     isVisible,\n *     activeLevel,\n *   } = useHeadingDropdownMenu({\n *     editor: myEditor,\n *     levels: [1, 2, 3],\n *     hideWhenUnavailable: true,\n *   })\n *\n *   // component implementation\n * }\n * ```\n */\nexport function useHeadingDropdownMenu(config?: UseHeadingDropdownMenuConfig) {\n  const {\n    editor: providedEditor,\n    levels = [1, 2, 3, 4, 5, 6],\n    hideWhenUnavailable = false,\n  } = config || {}\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const [isVisible, setIsVisible] = React.useState(true)\n\n  const activeLevel = getActiveHeadingLevel(editor, levels)\n  const isActive = isHeadingActive(editor)\n  const canToggleState = canToggle(editor)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(\n        shouldShowButton({ editor, hideWhenUnavailable, level: levels })\n      )\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable, levels])\n\n  return {\n    isVisible,\n    activeLevel,\n    isActive,\n    canToggle: canToggleState,\n    levels,\n    label: \"Heading\",\n    Icon: activeLevel ? headingIcons[activeLevel] : HeadingIcon,\n  }\n}\n"],"names":[],"mappings":";;;;AAEA;AAGA,gBAAgB;AAChB;AAEA,gBAAgB;AAChB;AAEA,oBAAoB;AACpB;AAAA;;AAZA;;;;;AA2CO,SAAS,sBACd,MAAqB;QACrB,SAAA,iEAAkB;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE;IAEpC,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,OAAO,OAAO,IAAI,CAAC,CAAC,QAAU,CAAA,GAAA,oKAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ;AACxD;AAyCO,SAAS,uBAAuB,MAAqC;;IAC1E,MAAM,EACJ,QAAQ,cAAc,EACtB,SAAS;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE,EAC3B,sBAAsB,KAAK,EAC5B,GAAG,UAAU,CAAC;IAEf,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,4QAAA,CAAA,WAAc,CAAC;IAEjD,MAAM,cAAc,sBAAsB,QAAQ;IAClD,MAAM,WAAW,CAAA,GAAA,oKAAA,CAAA,kBAAe,AAAD,EAAE;IACjC,MAAM,iBAAiB,CAAA,GAAA,oKAAA,CAAA,YAAS,AAAD,EAAE;IAEjC,4QAAA,CAAA,YAAe;4CAAC;YACd,IAAI,CAAC,QAAQ;YAEb,MAAM;0EAAwB;oBAC5B,aACE,CAAA,GAAA,oKAAA,CAAA,mBAAgB,AAAD,EAAE;wBAAE;wBAAQ;wBAAqB,OAAO;oBAAO;gBAElE;;YAEA;YAEA,OAAO,EAAE,CAAC,mBAAmB;YAE7B;oDAAO;oBACL,OAAO,GAAG,CAAC,mBAAmB;gBAChC;;QACF;2CAAG;QAAC;QAAQ;QAAqB;KAAO;IAExC,OAAO;QACL;QACA;QACA;QACA,WAAW;QACX;QACA,OAAO;QACP,MAAM,cAAc,oKAAA,CAAA,eAAY,CAAC,YAAY,GAAG,oJAAA,CAAA,cAAW;IAC7D;AACF;GAzCgB;;QAOK,mIAAA,CAAA,kBAAe","debugId":null}},
    {"offset": {"line": 3064, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/dropdown-menu/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { cn } from \"@/lib/tiptap-utils\"\nimport \"@/components/tiptap-ui-primitive/dropdown-menu/dropdown-menu.scss\"\n\nfunction DropdownMenu({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {\n  return <DropdownMenuPrimitive.Root modal={false} {...props} />\n}\n\nfunction DropdownMenuPortal({\n  ...props\n}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {\n  return <DropdownMenuPrimitive.Portal {...props} />\n}\n\nconst DropdownMenuTrigger = React.forwardRef<\n  React.ComponentRef<typeof DropdownMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Trigger>\n>(({ ...props }, ref) => <DropdownMenuPrimitive.Trigger ref={ref} {...props} />)\nDropdownMenuTrigger.displayName = DropdownMenuPrimitive.Trigger.displayName\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuItem = DropdownMenuPrimitive.Item\n\nconst DropdownMenuSubTrigger = DropdownMenuPrimitive.SubTrigger\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ComponentRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent> & {\n    portal?: boolean | React.ComponentProps<typeof DropdownMenuPortal>\n  }\n>(({ className, portal = true, ...props }, ref) => {\n  const content = (\n    <DropdownMenuPrimitive.SubContent\n      ref={ref}\n      className={cn(\"tiptap-dropdown-menu\", className)}\n      {...props}\n    />\n  )\n\n  return portal ? (\n    <DropdownMenuPortal {...(typeof portal === \"object\" ? portal : {})}>\n      {content}\n    </DropdownMenuPortal>\n  ) : (\n    content\n  )\n})\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ComponentRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content> & {\n    portal?: boolean\n  }\n>(({ className, sideOffset = 4, portal = false, ...props }, ref) => {\n  const content = (\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      onCloseAutoFocus={(e) => e.preventDefault()}\n      className={cn(\"tiptap-dropdown-menu\", className)}\n      {...props}\n    />\n  )\n\n  return portal ? (\n    <DropdownMenuPortal {...(typeof portal === \"object\" ? portal : {})}>\n      {content}\n    </DropdownMenuPortal>\n  ) : (\n    content\n  )\n})\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuGroup,\n  DropdownMenuSub,\n  DropdownMenuPortal,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAJA;;;;;;AAOA,SAAS,aAAa,KAEoC;QAFpC,EACpB,GAAG,OACqD,GAFpC;IAGpB,qBAAO,4SAAC,sRAAA,CAAA,OAA0B;QAAC,OAAO;QAAQ,GAAG,KAAK;;;;;;AAC5D;KAJS;AAMT,SAAS,mBAAmB,KAEgC;QAFhC,EAC1B,GAAG,OACuD,GAFhC;IAG1B,qBAAO,4SAAC,sRAAA,CAAA,SAA4B;QAAE,GAAG,KAAK;;;;;;AAChD;MAJS;AAMT,MAAM,oCAAsB,4QAAA,CAAA,aAAgB,OAG1C,QAAe;QAAd,EAAE,GAAG,OAAO;yBAAU,4SAAC,sRAAA,CAAA,UAA6B;QAAC,KAAK;QAAM,GAAG,KAAK;;;;;;;;AAC3E,oBAAoB,WAAW,GAAG,sRAAA,CAAA,UAA6B,CAAC,WAAW;AAE3E,MAAM,oBAAoB,sRAAA,CAAA,QAA2B;AAErD,MAAM,kBAAkB,sRAAA,CAAA,MAAyB;AAEjD,MAAM,yBAAyB,sRAAA,CAAA,aAAgC;AAE/D,MAAM,mBAAmB,sRAAA,CAAA,OAA0B;AAEnD,MAAM,yBAAyB,sRAAA,CAAA,aAAgC;AAE/D,MAAM,uCAAyB,4QAAA,CAAA,aAAgB,OAK7C,QAAyC;QAAxC,EAAE,SAAS,EAAE,SAAS,IAAI,EAAE,GAAG,OAAO;IACvC,MAAM,wBACJ,4SAAC,sRAAA,CAAA,aAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;IAIb,OAAO,uBACL,4SAAC;QAAoB,GAAI,OAAO,WAAW,WAAW,SAAS,CAAC,CAAC;kBAC9D;;;;;mDAGH;AAEJ;;AACA,uBAAuB,WAAW,GAChC,sRAAA,CAAA,aAAgC,CAAC,WAAW;AAE9C,MAAM,oCAAsB,4QAAA,CAAA,aAAgB,OAK1C,QAA0D;QAAzD,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,SAAS,KAAK,EAAE,GAAG,OAAO;IACxD,MAAM,wBACJ,4SAAC,sRAAA,CAAA,UAA6B;QAC5B,KAAK;QACL,YAAY;QACZ,kBAAkB,CAAC,IAAM,EAAE,cAAc;QACzC,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,wBAAwB;QACrC,GAAG,KAAK;;;;;;IAIb,OAAO,uBACL,4SAAC;QAAoB,GAAI,OAAO,WAAW,WAAW,SAAS,CAAC,CAAC;kBAC9D;;;;;mDAGH;AAEJ;;AACA,oBAAoB,WAAW,GAAG,sRAAA,CAAA,UAA6B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3192, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/dropdown-menu/index.tsx"],"sourcesContent":["export * from \"./dropdown-menu\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 3211, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/card/card.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/tiptap-utils\"\nimport \"@/components/tiptap-ui-primitive/card/card.scss\"\n\nconst Card = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\n  ({ className, ...props }, ref) => {\n    return <div ref={ref} className={cn(\"tiptap-card\", className)} {...props} />\n  }\n)\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"tiptap-card-header\", className)} {...props} />\n  )\n})\nCardHeader.displayName = \"CardHeader\"\n\nconst CardBody = React.forwardRef<HTMLDivElement, React.ComponentProps<\"div\">>(\n  ({ className, ...props }, ref) => {\n    return (\n      <div ref={ref} className={cn(\"tiptap-card-body\", className)} {...props} />\n    )\n  }\n)\nCardBody.displayName = \"CardBody\"\n\nconst CardItemGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    orientation?: \"horizontal\" | \"vertical\"\n  }\n>(({ className, orientation = \"vertical\", ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-orientation={orientation}\n      className={cn(\"tiptap-card-item-group\", className)}\n      {...props}\n    />\n  )\n})\nCardItemGroup.displayName = \"CardItemGroup\"\n\nconst CardGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn(\"tiptap-card-group-label\", className)}\n      {...props}\n    />\n  )\n})\nCardGroupLabel.displayName = \"CardGroupLabel\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"tiptap-card-footer\", className)} {...props} />\n  )\n})\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardBody, CardItemGroup, CardGroupLabel }\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAHA;;;;;AAMA,MAAM,qBAAO,4QAAA,CAAA,aAAgB,MAC3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACtB,qBAAO,4SAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;QAAa,GAAG,KAAK;;;;;;AAC1E;;AAEF,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,4QAAA,CAAA,aAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,4SAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QAAa,GAAG,KAAK;;;;;;AAE5E;;AACA,WAAW,WAAW,GAAG;AAEzB,MAAM,yBAAW,4QAAA,CAAA,aAAgB,OAC/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACtB,qBACE,4SAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,oBAAoB;QAAa,GAAG,KAAK;;;;;;AAE1E;;AAEF,SAAS,WAAW,GAAG;AAEvB,MAAM,8BAAgB,4QAAA,CAAA,aAAgB,OAKpC,QAAoD;QAAnD,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO;IAClD,qBACE,4SAAC;QACC,KAAK;QACL,oBAAkB;QAClB,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf;;AACA,cAAc,WAAW,GAAG;AAE5B,MAAM,+BAAiB,4QAAA,CAAA,aAAgB,OAGrC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,4SAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;QACxC,GAAG,KAAK;;;;;;AAGf;;AACA,eAAe,WAAW,GAAG;AAE7B,MAAM,2BAAa,4QAAA,CAAA,aAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;IACxB,qBACE,4SAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QAAa,GAAG,KAAK;;;;;;AAE5E;;AACA,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3335, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/card/index.tsx"],"sourcesContent":["export * from \"./card\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 3354, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/heading-dropdown-menu/heading-dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Icons ---\nimport { ChevronDownIcon } from \"@/components/tiptap-icons/chevron-down-icon\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Tiptap UI ---\nimport { HeadingButton } from \"@/components/tiptap-ui/heading-button\"\nimport type { UseHeadingDropdownMenuConfig } from \"@/components/tiptap-ui/heading-dropdown-menu\"\nimport { useHeadingDropdownMenu } from \"@/components/tiptap-ui/heading-dropdown-menu\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button, ButtonGroup } from \"@/components/tiptap-ui-primitive/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n} from \"@/components/tiptap-ui-primitive/dropdown-menu\"\nimport { Card, CardBody } from \"@/components/tiptap-ui-primitive/card\"\n\nexport interface HeadingDropdownMenuProps\n  extends Omit<ButtonProps, \"type\">,\n    UseHeadingDropdownMenuConfig {\n  /**\n   * Whether to render the dropdown menu in a portal\n   * @default false\n   */\n  portal?: boolean\n  /**\n   * Callback for when the dropdown opens or closes\n   */\n  onOpenChange?: (isOpen: boolean) => void\n}\n\n/**\n * Dropdown menu component for selecting heading levels in a Tiptap editor.\n *\n * For custom dropdown implementations, use the `useHeadingDropdownMenu` hook instead.\n */\nexport const HeadingDropdownMenu = React.forwardRef<\n  HTMLButtonElement,\n  HeadingDropdownMenuProps\n>(\n  (\n    {\n      editor: providedEditor,\n      levels = [1, 2, 3, 4, 5, 6],\n      hideWhenUnavailable = false,\n      portal = false,\n      onOpenChange,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const [isOpen, setIsOpen] = React.useState(false)\n    const { isVisible, isActive, canToggle, Icon } = useHeadingDropdownMenu({\n      editor,\n      levels,\n      hideWhenUnavailable,\n    })\n\n    const handleOpenChange = React.useCallback(\n      (open: boolean) => {\n        if (!editor || !canToggle) return\n        setIsOpen(open)\n        onOpenChange?.(open)\n      },\n      [canToggle, editor, onOpenChange]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <DropdownMenu modal open={isOpen} onOpenChange={handleOpenChange}>\n        <DropdownMenuTrigger asChild>\n          <Button\n            type=\"button\"\n            data-style=\"ghost\"\n            data-active-state={isActive ? \"on\" : \"off\"}\n            role=\"button\"\n            tabIndex={-1}\n            disabled={!canToggle}\n            data-disabled={!canToggle}\n            aria-label=\"Format text as heading\"\n            aria-pressed={isActive}\n            tooltip=\"Heading\"\n            {...buttonProps}\n            ref={ref}\n          >\n            <Icon className=\"tiptap-button-icon\" />\n            <ChevronDownIcon className=\"tiptap-button-dropdown-small\" />\n          </Button>\n        </DropdownMenuTrigger>\n\n        <DropdownMenuContent align=\"start\" portal={portal}>\n          <Card>\n            <CardBody>\n              <ButtonGroup>\n                {levels.map((level) => (\n                  <DropdownMenuItem key={`heading-${level}`} asChild>\n                    <HeadingButton\n                      editor={editor}\n                      level={level}\n                      text={`Heading ${level}`}\n                      showTooltip={false}\n                    />\n                  </DropdownMenuItem>\n                ))}\n              </ButtonGroup>\n            </CardBody>\n          </Card>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    )\n  }\n)\n\nHeadingDropdownMenu.displayName = \"HeadingDropdownMenu\"\n\nexport default HeadingDropdownMenu\n"],"names":[],"mappings":";;;;;AAEA;AAEA,gBAAgB;AAChB;AAEA,gBAAgB;AAChB;AAEA,oBAAoB;AACpB;AAAA;AAEA;AAAA;AAIA;AAAA;AACA;AAAA;AAMA;AAAA;;;AAxBA;;;;;;;;;AA6CO,MAAM,oCAAsB,GAAA,4QAAA,CAAA,aAAgB,SAIjD,QASE;QARA,EACE,QAAQ,cAAc,EACtB,SAAS;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAE,EAC3B,sBAAsB,KAAK,EAC3B,SAAS,KAAK,EACd,YAAY,EACZ,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,4QAAA,CAAA,WAAc,CAAC;IAC3C,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,kMAAA,CAAA,yBAAsB,AAAD,EAAE;QACtE;QACA;QACA;IACF;IAEA,MAAM,mBAAmB,4QAAA,CAAA,cAAiB;6DACxC,CAAC;YACC,IAAI,CAAC,UAAU,CAAC,WAAW;YAC3B,UAAU;YACV,yBAAA,mCAAA,aAAe;QACjB;4DACA;QAAC;QAAW;QAAQ;KAAa;IAGnC,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,mLAAA,CAAA,eAAY;QAAC,KAAK;QAAC,MAAM;QAAQ,cAAc;;0BAC9C,4SAAC,mLAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,4SAAC,+JAAA,CAAA,SAAM;oBACL,MAAK;oBACL,cAAW;oBACX,qBAAmB,WAAW,OAAO;oBACrC,MAAK;oBACL,UAAU,CAAC;oBACX,UAAU,CAAC;oBACX,iBAAe,CAAC;oBAChB,cAAW;oBACX,gBAAc;oBACd,SAAQ;oBACP,GAAG,WAAW;oBACf,KAAK;;sCAEL,4SAAC;4BAAK,WAAU;;;;;;sCAChB,4SAAC,4JAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAI/B,4SAAC,mLAAA,CAAA,sBAAmB;gBAAC,OAAM;gBAAQ,QAAQ;0BACzC,cAAA,4SAAC,2JAAA,CAAA,OAAI;8BACH,cAAA,4SAAC,2JAAA,CAAA,WAAQ;kCACP,cAAA,4SAAC,+JAAA,CAAA,cAAW;sCACT,OAAO,GAAG,CAAC,CAAC,sBACX,4SAAC,mLAAA,CAAA,mBAAgB;oCAA0B,OAAO;8CAChD,cAAA,4SAAC,wKAAA,CAAA,gBAAa;wCACZ,QAAQ;wCACR,OAAO;wCACP,MAAM,AAAC,WAAgB,OAAN;wCACjB,aAAa;;;;;;mCALM,AAAC,WAAgB,OAAN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAelD;;QA/DqB,mIAAA,CAAA,kBAAe;QAEe,kMAAA,CAAA,yBAAsB;;;;QAFpD,mIAAA,CAAA,kBAAe;QAEe,kMAAA,CAAA,yBAAsB;;;;AAgE3E,oBAAoB,WAAW,GAAG;uCAEnB","debugId":null}},
    {"offset": {"line": 3538, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/heading-dropdown-menu/index.tsx"],"sourcesContent":["export * from \"./heading-dropdown-menu\"\nexport * from \"./use-heading-dropdown-menu\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 3560, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/image-plus-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ImagePlusIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M20 2C20 1.44772 19.5523 1 19 1C18.4477 1 18 1.44772 18 2V4H16C15.4477 4 15 4.44772 15 5C15 5.55228 15.4477 6 16 6H18V8C18 8.55228 18.4477 9 19 9C19.5523 9 20 8.55228 20 8V6H22C22.5523 6 23 5.55228 23 5C23 4.44772 22.5523 4 22 4H20V2ZM5 4C4.73478 4 4.48043 4.10536 4.29289 4.29289C4.10536 4.48043 4 4.73478 4 5V19C4 19.2652 4.10536 19.5196 4.29289 19.7071C4.48043 19.8946 4.73478 20 5 20H5.58579L14.379 11.2068C14.9416 10.6444 15.7045 10.3284 16.5 10.3284C17.2955 10.3284 18.0584 10.6444 18.621 11.2068L20 12.5858V12C20 11.4477 20.4477 11 21 11C21.5523 11 22 11.4477 22 12V14.998C22 14.9994 22 15.0007 22 15.002V19C22 19.7957 21.6839 20.5587 21.1213 21.1213C20.5587 21.6839 19.7957 22 19 22H6.00219C6.00073 22 5.99927 22 5.99781 22H5C4.20435 22 3.44129 21.6839 2.87868 21.1213C2.31607 20.5587 2 19.7957 2 19V5C2 4.20435 2.31607 3.44129 2.87868 2.87868C3.44129 2.31607 4.20435 2 5 2H12C12.5523 2 13 2.44772 13 3C13 3.55228 12.5523 4 12 4H5ZM8.41422 20H19C19.2652 20 19.5196 19.8946 19.7071 19.7071C19.8946 19.5196 20 19.2652 20 19V15.4142L17.207 12.6212C17.0195 12.4338 16.7651 12.3284 16.5 12.3284C16.2349 12.3284 15.9806 12.4337 15.7931 12.6211L8.41422 20ZM6.87868 6.87868C7.44129 6.31607 8.20435 6 9 6C9.79565 6 10.5587 6.31607 11.1213 6.87868C11.6839 7.44129 12 8.20435 12 9C12 9.79565 11.6839 10.5587 11.1213 11.1213C10.5587 11.6839 9.79565 12 9 12C8.20435 12 7.44129 11.6839 6.87868 11.1213C6.31607 10.5587 6 9.79565 6 9C6 8.20435 6.31607 7.44129 6.87868 6.87868ZM9 8C8.73478 8 8.48043 8.10536 8.29289 8.29289C8.10536 8.48043 8 8.73478 8 9C8 9.26522 8.10536 9.51957 8.29289 9.70711C8.48043 9.89464 8.73478 10 9 10C9.26522 10 9.51957 9.89464 9.70711 9.70711C9.89464 9.51957 10 9.26522 10 9C10 8.73478 9.89464 8.48043 9.70711 8.29289C9.51957 8.10536 9.26522 8 9 8Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nImagePlusIcon.displayName = \"ImagePlusIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,8BAAgB,4QAAA,CAAA,OAAU,MACrC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3607, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/image-upload-button/use-image-upload.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { type Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport {\n  isExtensionAvailable,\n  isNodeTypeSelected,\n} from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { ImagePlusIcon } from \"@/components/tiptap-icons/image-plus-icon\"\n\nexport const IMAGE_UPLOAD_SHORTCUT_KEY = \"mod+shift+i\"\n\n/**\n * Configuration for the image upload functionality\n */\nexport interface UseImageUploadConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * Whether the button should hide when insertion is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful image insertion.\n   */\n  onInserted?: () => void\n}\n\n/**\n * Checks if image can be inserted in the current editor state\n */\nexport function canInsertImage(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (\n    !isExtensionAvailable(editor, \"imageUpload\") ||\n    isNodeTypeSelected(editor, [\"image\"])\n  )\n    return false\n\n  return editor.can().insertContent({ type: \"imageUpload\" })\n}\n\n/**\n * Checks if image is currently active\n */\nexport function isImageActive(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  return editor.isActive(\"imageUpload\")\n}\n\n/**\n * Inserts an image in the editor\n */\nexport function insertImage(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canInsertImage(editor)) return false\n\n  try {\n    return editor\n      .chain()\n      .focus()\n      .insertContent({\n        type: \"imageUpload\",\n      })\n      .run()\n  } catch {\n    return false\n  }\n}\n\n/**\n * Determines if the image button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isExtensionAvailable(editor, \"imageUpload\")) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canInsertImage(editor)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides image functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage - no params needed\n * function MySimpleImageButton() {\n *   const { isVisible, handleImage } = useImage()\n *\n *   if (!isVisible) return null\n *\n *   return <button onClick={handleImage}>Add Image</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedImageButton() {\n *   const { isVisible, handleImage, label, isActive } = useImage({\n *     editor: myEditor,\n *     hideWhenUnavailable: true,\n *     onInserted: () => console.log('Image inserted!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleImage}\n *       aria-pressed={isActive}\n *       aria-label={label}\n *     >\n *       Add Image\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useImageUpload(config?: UseImageUploadConfig) {\n  const {\n    editor: providedEditor,\n    hideWhenUnavailable = false,\n    onInserted,\n  } = config || {}\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canInsert = canInsertImage(editor)\n  const isActive = isImageActive(editor)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable])\n\n  const handleImage = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = insertImage(editor)\n    if (success) {\n      onInserted?.()\n    }\n    return success\n  }, [editor, onInserted])\n\n  useHotkeys(\n    IMAGE_UPLOAD_SHORTCUT_KEY,\n    (event) => {\n      event.preventDefault()\n      handleImage()\n    },\n    {\n      enabled: isVisible && canInsert,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleImage,\n    canInsert,\n    label: \"Add image\",\n    shortcutKeys: IMAGE_UPLOAD_SHORTCUT_KEY,\n    Icon: ImagePlusIcon,\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AAGA,gBAAgB;AAChB;AACA;AAEA,cAAc;AACd;AAKA,gBAAgB;AAChB;;AAjBA;;;;;;;AAmBO,MAAM,4BAA4B;AAwBlC,SAAS,eAAe,MAAqB;IAClD,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IACE,CAAC,CAAA,GAAA,yHAAA,CAAA,uBAAoB,AAAD,EAAE,QAAQ,kBAC9B,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;QAAC;KAAQ,GAEpC,OAAO;IAET,OAAO,OAAO,GAAG,GAAG,aAAa,CAAC;QAAE,MAAM;IAAc;AAC1D;AAKO,SAAS,cAAc,MAAqB;IACjD,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,OAAO,OAAO,QAAQ,CAAC;AACzB;AAKO,SAAS,YAAY,MAAqB;IAC/C,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,eAAe,SAAS,OAAO;IAEpC,IAAI;QACF,OAAO,OACJ,KAAK,GACL,KAAK,GACL,aAAa,CAAC;YACb,MAAM;QACR,GACC,GAAG;IACR,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAKO,SAAS,iBAAiB,KAGhC;IACC,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,GAAG;IAExC,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,uBAAoB,AAAD,EAAE,QAAQ,gBAAgB,OAAO;IAEzD,IAAI,uBAAuB,CAAC,OAAO,QAAQ,CAAC,SAAS;QACnD,OAAO,eAAe;IACxB;IAEA,OAAO;AACT;AAsCO,SAAS,eAAe,MAA6B;;IAC1D,MAAM,EACJ,QAAQ,cAAc,EACtB,sBAAsB,KAAK,EAC3B,UAAU,EACX,GAAG,UAAU,CAAC;IAEf,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,4QAAA,CAAA,WAAc,CAAU;IAC1D,MAAM,YAAY,eAAe;IACjC,MAAM,WAAW,cAAc;IAE/B,4QAAA,CAAA,YAAe;oCAAC;YACd,IAAI,CAAC,QAAQ;YAEb,MAAM;kEAAwB;oBAC5B,aAAa,iBAAiB;wBAAE;wBAAQ;oBAAoB;gBAC9D;;YAEA;YAEA,OAAO,EAAE,CAAC,mBAAmB;YAE7B;4CAAO;oBACL,OAAO,GAAG,CAAC,mBAAmB;gBAChC;;QACF;mCAAG;QAAC;QAAQ;KAAoB;IAEhC,MAAM,cAAc,4QAAA,CAAA,cAAiB;mDAAC;YACpC,IAAI,CAAC,QAAQ,OAAO;YAEpB,MAAM,UAAU,YAAY;YAC5B,IAAI,SAAS;gBACX,uBAAA,iCAAA;YACF;YACA,OAAO;QACT;kDAAG;QAAC;QAAQ;KAAW;IAEvB,CAAA,GAAA,6SAAA,CAAA,aAAU,AAAD,EACP;qCACA,CAAC;YACC,MAAM,cAAc;YACpB;QACF;oCACA;QACE,SAAS,aAAa;QACtB,yBAAyB,CAAC;QAC1B,kBAAkB;IACpB;IAGF,OAAO;QACL;QACA;QACA;QACA;QACA,OAAO;QACP,cAAc;QACd,MAAM,0JAAA,CAAA,gBAAa;IACrB;AACF;GA7DgB;;QAOK,mIAAA,CAAA,kBAAe;QACjB,yHAAA,CAAA,cAAW;QA+B5B,6SAAA,CAAA,aAAU","debugId":null}},
    {"offset": {"line": 3746, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/image-upload-button/image-upload-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Tiptap UI ---\nimport type { UseImageUploadConfig } from \"@/components/tiptap-ui/image-upload-button\"\nimport {\n  IMAGE_UPLOAD_SHORTCUT_KEY,\n  useImageUpload,\n} from \"@/components/tiptap-ui/image-upload-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\nexport interface ImageUploadButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseImageUploadConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function ImageShortcutBadge({\n  shortcutKeys = IMAGE_UPLOAD_SHORTCUT_KEY,\n}: {\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for uploading/inserting images in a Tiptap editor.\n *\n * For custom button implementations, use the `useImage` hook instead.\n */\nexport const ImageUploadButton = React.forwardRef<\n  HTMLButtonElement,\n  ImageUploadButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      text,\n      hideWhenUnavailable = false,\n      onInserted,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      canInsert,\n      handleImage,\n      label,\n      isActive,\n      shortcutKeys,\n      Icon,\n    } = useImageUpload({\n      editor,\n      hideWhenUnavailable,\n      onInserted,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleImage()\n      },\n      [handleImage, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        role=\"button\"\n        tabIndex={-1}\n        disabled={!canInsert}\n        data-disabled={!canInsert}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip={label}\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && <ImageShortcutBadge shortcutKeys={shortcutKeys} />}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nImageUploadButton.displayName = \"ImageUploadButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AAIA;AAAA;AAOA;AAAA;AACA;AAAA;;;AApBA;;;;;;;AAoCO,SAAS,mBAAmB,KAIlC;QAJkC,EACjC,eAAe,oLAAA,CAAA,4BAAyB,EAGzC,GAJkC;IAKjC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KANgB;AAaT,MAAM,kCAAoB,GAAA,4QAAA,CAAA,aAAgB,UAI/C,QAWE;QAVA,EACE,QAAQ,cAAc,EACtB,IAAI,EACJ,sBAAsB,KAAK,EAC3B,UAAU,EACV,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,SAAS,EACT,WAAW,EACX,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,IAAI,EACL,GAAG,CAAA,GAAA,oLAAA,CAAA,iBAAc,AAAD,EAAE;QACjB;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;sDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;qDACA;QAAC;QAAa;KAAQ;IAGxB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,MAAK;QACL,UAAU,CAAC;QACX,UAAU,CAAC;QACX,iBAAe,CAAC;QAChB,cAAY;QACZ,gBAAc;QACd,SAAS;QACT,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BAAgB,4SAAC;oBAAmB,cAAc;;;;;;;;;;;;;AAK7D;;QArDqB,mIAAA,CAAA,kBAAe;QAS9B,oLAAA,CAAA,iBAAc;;;;QATC,mIAAA,CAAA,kBAAe;QAS9B,oLAAA,CAAA,iBAAc;;;;AA+CtB,kBAAkB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3877, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/image-upload-button/index.tsx"],"sourcesContent":["export * from \"./image-upload-button\"\nexport * from \"./use-image-upload\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 3899, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/list-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ListIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 6C7 5.44772 7.44772 5 8 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H8C7.44772 7 7 6.55228 7 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 12C7 11.4477 7.44772 11 8 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H8C7.44772 13 7 12.5523 7 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 18C7 17.4477 7.44772 17 8 17H21C21.5523 17 22 17.4477 22 18C22 18.5523 21.5523 19 21 19H8C7.44772 19 7 18.5523 7 18Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 6C2 5.44772 2.44772 5 3 5H3.01C3.56228 5 4.01 5.44772 4.01 6C4.01 6.55228 3.56228 7 3.01 7H3C2.44772 7 2 6.55228 2 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.4477 2.44772 11 3 11H3.01C3.56228 11 4.01 11.4477 4.01 12C4.01 12.5523 3.56228 13 3.01 13H3C2.44772 13 2 12.5523 2 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 18C2 17.4477 2.44772 17 3 17H3.01C3.56228 17 4.01 17.4477 4.01 18C4.01 18.5523 3.56228 19 3.01 19H3C2.44772 19 2 18.5523 2 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nListIcon.displayName = \"ListIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,yBAAW,4QAAA,CAAA,OAAU,MAChC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3998, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/list-ordered-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ListOrderedIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9 6C9 5.44772 9.44772 5 10 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H10C9.44772 7 9 6.55228 9 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9 12C9 11.4477 9.44772 11 10 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H10C9.44772 13 9 12.5523 9 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9 18C9 17.4477 9.44772 17 10 17H21C21.5523 17 22 17.4477 22 18C22 18.5523 21.5523 19 21 19H10C9.44772 19 9 18.5523 9 18Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3 6C3 5.44772 3.44772 5 4 5H5C5.55228 5 6 5.44772 6 6V10C6 10.5523 5.55228 11 5 11C4.44772 11 4 10.5523 4 10V7C3.44772 7 3 6.55228 3 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3 10C3 9.44772 3.44772 9 4 9H6C6.55228 9 7 9.44772 7 10C7 10.5523 6.55228 11 6 11H4C3.44772 11 3 10.5523 3 10Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.82219 13.0431C6.54543 13.4047 6.99997 14.1319 6.99997 15C6.99997 15.5763 6.71806 16.0426 6.48747 16.35C6.31395 16.5814 6.1052 16.8044 5.91309 17H5.99997C6.55226 17 6.99997 17.4477 6.99997 18C6.99997 18.5523 6.55226 19 5.99997 19H3.99997C3.44769 19 2.99997 18.5523 2.99997 18C2.99997 17.4237 3.28189 16.9575 3.51247 16.65C3.74323 16.3424 4.03626 16.0494 4.26965 15.8161C4.27745 15.8083 4.2852 15.8006 4.29287 15.7929C4.55594 15.5298 4.75095 15.3321 4.88748 15.15C4.96287 15.0495 4.99021 14.9922 4.99911 14.9714C4.99535 14.9112 4.9803 14.882 4.9739 14.8715C4.96613 14.8588 4.95382 14.845 4.92776 14.8319C4.87723 14.8067 4.71156 14.7623 4.44719 14.8944C3.95321 15.1414 3.35254 14.9412 3.10555 14.4472C2.85856 13.9533 3.05878 13.3526 3.55276 13.1056C4.28839 12.7378 5.12272 12.6934 5.82219 13.0431Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nListOrderedIcon.displayName = \"ListOrderedIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4097, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/list-todo-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ListTodoIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 6C2 4.89543 2.89543 4 4 4H8C9.10457 4 10 4.89543 10 6V10C10 11.1046 9.10457 12 8 12H4C2.89543 12 2 11.1046 2 10V6ZM8 6H4V10H8V6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9.70711 14.2929C10.0976 14.6834 10.0976 15.3166 9.70711 15.7071L5.70711 19.7071C5.31658 20.0976 4.68342 20.0976 4.29289 19.7071L2.29289 17.7071C1.90237 17.3166 1.90237 16.6834 2.29289 16.2929C2.68342 15.9024 3.31658 15.9024 3.70711 16.2929L5 17.5858L8.29289 14.2929C8.68342 13.9024 9.31658 13.9024 9.70711 14.2929Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12 6C12 5.44772 12.4477 5 13 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H13C12.4477 7 12 6.55228 12 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12 12C12 11.4477 12.4477 11 13 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H13C12.4477 13 12 12.5523 12 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12 18C12 17.4477 12.4477 17 13 17H21C21.5523 17 22 17.4477 22 18C22 18.5523 21.5523 19 21 19H13C12.4477 19 12 18.5523 12 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nListTodoIcon.displayName = \"ListTodoIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,6BAAe,4QAAA,CAAA,OAAU,MACpC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4186, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/list-button/use-list.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type Editor } from \"@tiptap/react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { NodeSelection, TextSelection } from \"@tiptap/pm/state\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Icons ---\nimport { ListIcon } from \"@/components/tiptap-icons/list-icon\"\nimport { ListOrderedIcon } from \"@/components/tiptap-icons/list-ordered-icon\"\nimport { ListTodoIcon } from \"@/components/tiptap-icons/list-todo-icon\"\n\n// --- Lib ---\nimport {\n  findNodePosition,\n  isNodeInSchema,\n  isNodeTypeSelected,\n  isValidPosition,\n} from \"@/lib/tiptap-utils\"\n\nexport type ListType = \"bulletList\" | \"orderedList\" | \"taskList\"\n\n/**\n * Configuration for the list functionality\n */\nexport interface UseListConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The type of list to toggle.\n   */\n  type: ListType\n  /**\n   * Whether the button should hide when list is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful toggle.\n   */\n  onToggled?: () => void\n}\n\nexport const listIcons = {\n  bulletList: ListIcon,\n  orderedList: ListOrderedIcon,\n  taskList: ListTodoIcon,\n}\n\nexport const listLabels: Record<ListType, string> = {\n  bulletList: \"Bullet List\",\n  orderedList: \"Ordered List\",\n  taskList: \"Task List\",\n}\n\nexport const LIST_SHORTCUT_KEYS: Record<ListType, string> = {\n  bulletList: \"mod+shift+8\",\n  orderedList: \"mod+shift+7\",\n  taskList: \"mod+shift+9\",\n}\n\n/**\n * Checks if a list can be toggled in the current editor state\n */\nexport function canToggleList(\n  editor: Editor | null,\n  type: ListType,\n  turnInto: boolean = true\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!isNodeInSchema(type, editor) || isNodeTypeSelected(editor, [\"image\"]))\n    return false\n\n  if (!turnInto) {\n    switch (type) {\n      case \"bulletList\":\n        return editor.can().toggleBulletList()\n      case \"orderedList\":\n        return editor.can().toggleOrderedList()\n      case \"taskList\":\n        return editor.can().toggleList(\"taskList\", \"taskItem\")\n      default:\n        return false\n    }\n  }\n\n  try {\n    const view = editor.view\n    const state = view.state\n    const selection = state.selection\n\n    if (selection.empty || selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n    }\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Checks if list is currently active\n */\nexport function isListActive(editor: Editor | null, type: ListType): boolean {\n  if (!editor || !editor.isEditable) return false\n\n  switch (type) {\n    case \"bulletList\":\n      return editor.isActive(\"bulletList\")\n    case \"orderedList\":\n      return editor.isActive(\"orderedList\")\n    case \"taskList\":\n      return editor.isActive(\"taskList\")\n    default:\n      return false\n  }\n}\n\n/**\n * Toggles list in the editor\n */\nexport function toggleList(editor: Editor | null, type: ListType): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canToggleList(editor, type)) return false\n\n  try {\n    const view = editor.view\n    let state = view.state\n    let tr = state.tr\n\n    // No selection, find the the cursor position\n    if (state.selection.empty || state.selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n\n      tr = tr.setSelection(NodeSelection.create(state.doc, pos))\n      view.dispatch(tr)\n      state = view.state\n    }\n\n    const selection = state.selection\n\n    let chain = editor.chain().focus()\n\n    // Handle NodeSelection\n    if (selection instanceof NodeSelection) {\n      const firstChild = selection.node.firstChild?.firstChild\n      const lastChild = selection.node.lastChild?.lastChild\n\n      const from = firstChild\n        ? selection.from + firstChild.nodeSize\n        : selection.from + 1\n\n      const to = lastChild\n        ? selection.to - lastChild.nodeSize\n        : selection.to - 1\n\n      chain = chain.setTextSelection({ from, to }).clearNodes()\n    }\n\n    if (editor.isActive(type)) {\n      // Unwrap list\n      chain\n        .liftListItem(\"listItem\")\n        .lift(\"bulletList\")\n        .lift(\"orderedList\")\n        .lift(\"taskList\")\n        .run()\n    } else {\n      // Wrap in specific list type\n      const toggleMap: Record<ListType, () => typeof chain> = {\n        bulletList: () => chain.toggleBulletList(),\n        orderedList: () => chain.toggleOrderedList(),\n        taskList: () => chain.toggleList(\"taskList\", \"taskItem\"),\n      }\n\n      const toggle = toggleMap[type]\n      if (!toggle) return false\n\n      toggle().run()\n    }\n\n    editor.chain().focus().selectTextblockEnd().run()\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Determines if the list button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  type: ListType\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, type, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isNodeInSchema(type, editor)) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canToggleList(editor, type)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides list functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MySimpleListButton() {\n *   const { isVisible, handleToggle, isActive } = useList({ type: \"bulletList\" })\n *\n *   if (!isVisible) return null\n *\n *   return <button onClick={handleToggle}>Bullet List</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedListButton() {\n *   const { isVisible, handleToggle, label, isActive } = useList({\n *     type: \"orderedList\",\n *     editor: myEditor,\n *     hideWhenUnavailable: true,\n *     onToggled: () => console.log('List toggled!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleToggle}\n *       aria-label={label}\n *       aria-pressed={isActive}\n *     >\n *       Toggle List\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useList(config: UseListConfig) {\n  const {\n    editor: providedEditor,\n    type,\n    hideWhenUnavailable = false,\n    onToggled,\n  } = config\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canToggle = canToggleList(editor, type)\n  const isActive = isListActive(editor, type)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, type, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, type, hideWhenUnavailable])\n\n  const handleToggle = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = toggleList(editor, type)\n    if (success) {\n      onToggled?.()\n    }\n    return success\n  }, [editor, type, onToggled])\n\n  useHotkeys(\n    LIST_SHORTCUT_KEYS[type],\n    (event) => {\n      event.preventDefault()\n      handleToggle()\n    },\n    {\n      enabled: isVisible && canToggle,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleToggle,\n    canToggle,\n    label: listLabels[type],\n    shortcutKeys: LIST_SHORTCUT_KEYS[type],\n    Icon: listIcons[type],\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AAEA;AACA;AAAA;AAEA,gBAAgB;AAChB;AACA;AAEA,gBAAgB;AAChB;AACA;AACA;AAEA,cAAc;AACd;;AAjBA;;;;;;;;;;AAiDO,MAAM,YAAY;IACvB,YAAY,iJAAA,CAAA,WAAQ;IACpB,aAAa,4JAAA,CAAA,kBAAe;IAC5B,UAAU,yJAAA,CAAA,eAAY;AACxB;AAEO,MAAM,aAAuC;IAClD,YAAY;IACZ,aAAa;IACb,UAAU;AACZ;AAEO,MAAM,qBAA+C;IAC1D,YAAY;IACZ,aAAa;IACb,UAAU;AACZ;AAKO,SAAS,cACd,MAAqB,EACrB,IAAc;QACd,WAAA,iEAAoB;IAEpB,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;QAAC;KAAQ,GACvE,OAAO;IAET,IAAI,CAAC,UAAU;QACb,OAAQ;YACN,KAAK;gBACH,OAAO,OAAO,GAAG,GAAG,gBAAgB;YACtC,KAAK;gBACH,OAAO,OAAO,GAAG,GAAG,iBAAiB;YACvC,KAAK;gBACH,OAAO,OAAO,GAAG,GAAG,UAAU,CAAC,YAAY;YAC7C;gBACE,OAAO;QACX;IACF;IAEA,IAAI;QACF,MAAM,OAAO,OAAO,IAAI;QACxB,MAAM,QAAQ,KAAK,KAAK;QACxB,MAAM,YAAY,MAAM,SAAS;QAEjC,IAAI,UAAU,KAAK,IAAI,qBAAqB,yNAAA,CAAA,gBAAa,EAAE;gBAC7C;YAAZ,MAAM,OAAM,oBAAA,CAAA,GAAA,yHAAA,CAAA,mBAAgB,AAAD,EAAE;gBAC3B;gBACA,MAAM,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;YACrC,gBAHY,wCAAA,kBAGR,GAAG;YACP,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,OAAO;QACpC;QAEA,OAAO;IACT,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAKO,SAAS,aAAa,MAAqB,EAAE,IAAc;IAChE,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAE1C,OAAQ;QACN,KAAK;YACH,OAAO,OAAO,QAAQ,CAAC;QACzB,KAAK;YACH,OAAO,OAAO,QAAQ,CAAC;QACzB,KAAK;YACH,OAAO,OAAO,QAAQ,CAAC;QACzB;YACE,OAAO;IACX;AACF;AAKO,SAAS,WAAW,MAAqB,EAAE,IAAc;IAC9D,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,cAAc,QAAQ,OAAO,OAAO;IAEzC,IAAI;QACF,MAAM,OAAO,OAAO,IAAI;QACxB,IAAI,QAAQ,KAAK,KAAK;QACtB,IAAI,KAAK,MAAM,EAAE;QAEjB,6CAA6C;QAC7C,IAAI,MAAM,SAAS,CAAC,KAAK,IAAI,MAAM,SAAS,YAAY,yNAAA,CAAA,gBAAa,EAAE;gBACzD;YAAZ,MAAM,OAAM,oBAAA,CAAA,GAAA,yHAAA,CAAA,mBAAgB,AAAD,EAAE;gBAC3B;gBACA,MAAM,MAAM,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;YACrC,gBAHY,wCAAA,kBAGR,GAAG;YACP,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,kBAAe,AAAD,EAAE,MAAM,OAAO;YAElC,KAAK,GAAG,YAAY,CAAC,yNAAA,CAAA,gBAAa,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE;YACrD,KAAK,QAAQ,CAAC;YACd,QAAQ,KAAK,KAAK;QACpB;QAEA,MAAM,YAAY,MAAM,SAAS;QAEjC,IAAI,QAAQ,OAAO,KAAK,GAAG,KAAK;QAEhC,uBAAuB;QACvB,IAAI,qBAAqB,yNAAA,CAAA,gBAAa,EAAE;gBACnB,4BACD;YADlB,MAAM,cAAa,6BAAA,UAAU,IAAI,CAAC,UAAU,cAAzB,iDAAA,2BAA2B,UAAU;YACxD,MAAM,aAAY,4BAAA,UAAU,IAAI,CAAC,SAAS,cAAxB,gDAAA,0BAA0B,SAAS;YAErD,MAAM,OAAO,aACT,UAAU,IAAI,GAAG,WAAW,QAAQ,GACpC,UAAU,IAAI,GAAG;YAErB,MAAM,KAAK,YACP,UAAU,EAAE,GAAG,UAAU,QAAQ,GACjC,UAAU,EAAE,GAAG;YAEnB,QAAQ,MAAM,gBAAgB,CAAC;gBAAE;gBAAM;YAAG,GAAG,UAAU;QACzD;QAEA,IAAI,OAAO,QAAQ,CAAC,OAAO;YACzB,cAAc;YACd,MACG,YAAY,CAAC,YACb,IAAI,CAAC,cACL,IAAI,CAAC,eACL,IAAI,CAAC,YACL,GAAG;QACR,OAAO;YACL,6BAA6B;YAC7B,MAAM,YAAkD;gBACtD,YAAY,IAAM,MAAM,gBAAgB;gBACxC,aAAa,IAAM,MAAM,iBAAiB;gBAC1C,UAAU,IAAM,MAAM,UAAU,CAAC,YAAY;YAC/C;YAEA,MAAM,SAAS,SAAS,CAAC,KAAK;YAC9B,IAAI,CAAC,QAAQ,OAAO;YAEpB,SAAS,GAAG;QACd;QAEA,OAAO,KAAK,GAAG,KAAK,GAAG,kBAAkB,GAAG,GAAG;QAE/C,OAAO;IACT,EAAE,UAAM;QACN,OAAO;IACT;AACF;AAKO,SAAS,iBAAiB,KAIhC;IACC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAmB,EAAE,GAAG;IAE9C,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,SAAS,OAAO;IAE1C,IAAI,uBAAuB,CAAC,OAAO,QAAQ,CAAC,SAAS;QACnD,OAAO,cAAc,QAAQ;IAC/B;IAEA,OAAO;AACT;AAuCO,SAAS,QAAQ,MAAqB;;IAC3C,MAAM,EACJ,QAAQ,cAAc,EACtB,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACV,GAAG;IAEJ,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,4QAAA,CAAA,WAAc,CAAU;IAC1D,MAAM,YAAY,cAAc,QAAQ;IACxC,MAAM,WAAW,aAAa,QAAQ;IAEtC,4QAAA,CAAA,YAAe;6BAAC;YACd,IAAI,CAAC,QAAQ;YAEb,MAAM;2DAAwB;oBAC5B,aAAa,iBAAiB;wBAAE;wBAAQ;wBAAM;oBAAoB;gBACpE;;YAEA;YAEA,OAAO,EAAE,CAAC,mBAAmB;YAE7B;qCAAO;oBACL,OAAO,GAAG,CAAC,mBAAmB;gBAChC;;QACF;4BAAG;QAAC;QAAQ;QAAM;KAAoB;IAEtC,MAAM,eAAe,4QAAA,CAAA,cAAiB;6CAAC;YACrC,IAAI,CAAC,QAAQ,OAAO;YAEpB,MAAM,UAAU,WAAW,QAAQ;YACnC,IAAI,SAAS;gBACX,sBAAA,gCAAA;YACF;YACA,OAAO;QACT;4CAAG;QAAC;QAAQ;QAAM;KAAU;IAE5B,CAAA,GAAA,6SAAA,CAAA,aAAU,AAAD,EACP,kBAAkB,CAAC,KAAK;8BACxB,CAAC;YACC,MAAM,cAAc;YACpB;QACF;6BACA;QACE,SAAS,aAAa;QACtB,yBAAyB,CAAC;QAC1B,kBAAkB;IACpB;IAGF,OAAO;QACL;QACA;QACA;QACA;QACA,OAAO,UAAU,CAAC,KAAK;QACvB,cAAc,kBAAkB,CAAC,KAAK;QACtC,MAAM,SAAS,CAAC,KAAK;IACvB;AACF;GA9DgB;;QAQK,mIAAA,CAAA,kBAAe;QACjB,yHAAA,CAAA,cAAW;QA+B5B,6SAAA,CAAA,aAAU","debugId":null}},
    {"offset": {"line": 4428, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/list-button/list-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\n// --- Tiptap UI ---\nimport type { ListType, UseListConfig } from \"@/components/tiptap-ui/list-button\"\nimport { LIST_SHORTCUT_KEYS, useList } from \"@/components/tiptap-ui/list-button\"\n\nexport interface ListButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseListConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function ListShortcutBadge({\n  type,\n  shortcutKeys = LIST_SHORTCUT_KEYS[type],\n}: {\n  type: ListType\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for toggling lists in a Tiptap editor.\n *\n * For custom button implementations, use the `useList` hook instead.\n */\nexport const ListButton = React.forwardRef<HTMLButtonElement, ListButtonProps>(\n  (\n    {\n      editor: providedEditor,\n      type,\n      text,\n      hideWhenUnavailable = false,\n      onToggled,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      canToggle,\n      isActive,\n      handleToggle,\n      label,\n      shortcutKeys,\n      Icon,\n    } = useList({\n      editor,\n      type,\n      hideWhenUnavailable,\n      onToggled,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleToggle()\n      },\n      [handleToggle, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        role=\"button\"\n        tabIndex={-1}\n        disabled={!canToggle}\n        data-disabled={!canToggle}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip={label}\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <ListShortcutBadge type={type} shortcutKeys={shortcutKeys} />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nListButton.displayName = \"ListButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AAIA;AAAA;AACA;AAAA;AAIA;AAAA;;;AAjBA;;;;;;;AAiCO,SAAS,kBAAkB,KAMjC;QANiC,EAChC,IAAI,EACJ,eAAe,8JAAA,CAAA,qBAAkB,CAAC,KAAK,EAIxC,GANiC;IAOhC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KARgB;AAeT,MAAM,2BAAa,GAAA,4QAAA,CAAA,aAAgB,UACxC,QAYE;QAXA,EACE,QAAQ,cAAc,EACtB,IAAI,EACJ,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,YAAY,EACZ,IAAI,EACL,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QACV;QACA;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;+CACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;8CACA;QAAC;QAAc;KAAQ;IAGzB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,MAAK;QACL,UAAU,CAAC;QACX,UAAU,CAAC;QACX,iBAAe,CAAC;QAChB,cAAY;QACZ,gBAAc;QACd,SAAS;QACT,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBAAkB,MAAM;oBAAM,cAAc;;;;;;;;;;;;;AAMzD;;QAxDqB,mIAAA,CAAA,kBAAe;QAS9B,8JAAA,CAAA,UAAO;;;;QATQ,mIAAA,CAAA,kBAAe;QAS9B,8JAAA,CAAA,UAAO;;;;AAkDf,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4561, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/list-button/index.tsx"],"sourcesContent":["export * from \"./list-button\"\nexport * from \"./use-list\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 4583, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/list-dropdown-menu/use-list-dropdown-menu.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Icons ---\nimport { ListIcon } from \"@/components/tiptap-icons/list-icon\"\nimport { ListOrderedIcon } from \"@/components/tiptap-icons/list-ordered-icon\"\nimport { ListTodoIcon } from \"@/components/tiptap-icons/list-todo-icon\"\n\n// --- Lib ---\nimport { isNodeInSchema } from \"@/lib/tiptap-utils\"\n\n// --- Tiptap UI ---\nimport {\n  canToggleList,\n  isListActive,\n  listIcons,\n  type ListType,\n} from \"@/components/tiptap-ui/list-button\"\n\n/**\n * Configuration for the list dropdown menu functionality\n */\nexport interface UseListDropdownMenuConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The list types to display in the dropdown.\n   * @default [\"bulletList\", \"orderedList\", \"taskList\"]\n   */\n  types?: ListType[]\n  /**\n   * Whether the dropdown should be hidden when no list types are available\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n}\n\nexport interface ListOption {\n  label: string\n  type: ListType\n  icon: React.ElementType\n}\n\nexport const listOptions: ListOption[] = [\n  {\n    label: \"Bullet List\",\n    type: \"bulletList\",\n    icon: ListIcon,\n  },\n  {\n    label: \"Ordered List\",\n    type: \"orderedList\",\n    icon: ListOrderedIcon,\n  },\n  {\n    label: \"Task List\",\n    type: \"taskList\",\n    icon: ListTodoIcon,\n  },\n]\n\nexport function canToggleAnyList(\n  editor: Editor | null,\n  listTypes: ListType[]\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  return listTypes.some((type) => canToggleList(editor, type))\n}\n\nexport function isAnyListActive(\n  editor: Editor | null,\n  listTypes: ListType[]\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  return listTypes.some((type) => isListActive(editor, type))\n}\n\nexport function getFilteredListOptions(\n  availableTypes: ListType[]\n): typeof listOptions {\n  return listOptions.filter(\n    (option) => !option.type || availableTypes.includes(option.type)\n  )\n}\n\nexport function shouldShowListDropdown(params: {\n  editor: Editor | null\n  listTypes: ListType[]\n  hideWhenUnavailable: boolean\n  listInSchema: boolean\n  canToggleAny: boolean\n}): boolean {\n  const { editor, hideWhenUnavailable, listInSchema, canToggleAny } = params\n\n  if (!listInSchema || !editor) {\n    return false\n  }\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canToggleAny\n  }\n\n  return true\n}\n\n/**\n * Gets the currently active list type from the available types\n */\nexport function getActiveListType(\n  editor: Editor | null,\n  availableTypes: ListType[]\n): ListType | undefined {\n  if (!editor || !editor.isEditable) return undefined\n  return availableTypes.find((type) => isListActive(editor, type))\n}\n\n/**\n * Custom hook that provides list dropdown menu functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MyListDropdown() {\n *   const {\n *     isVisible,\n *     activeType,\n *     isAnyActive,\n *     canToggleAny,\n *     filteredLists,\n *   } = useListDropdownMenu()\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <DropdownMenu>\n *       // dropdown content\n *     </DropdownMenu>\n *   )\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedListDropdown() {\n *   const {\n *     isVisible,\n *     activeType,\n *   } = useListDropdownMenu({\n *     editor: myEditor,\n *     types: [\"bulletList\", \"orderedList\"],\n *     hideWhenUnavailable: true,\n *   })\n *\n *   // component implementation\n * }\n * ```\n */\nexport function useListDropdownMenu(config?: UseListDropdownMenuConfig) {\n  const {\n    editor: providedEditor,\n    types = [\"bulletList\", \"orderedList\", \"taskList\"],\n    hideWhenUnavailable = false,\n  } = config || {}\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  const listInSchema = types.some((type) => isNodeInSchema(type, editor))\n\n  const filteredLists = React.useMemo(\n    () => getFilteredListOptions(types),\n    [types]\n  )\n\n  const canToggleAny = canToggleAnyList(editor, types)\n  const isAnyActive = isAnyListActive(editor, types)\n  const activeType = getActiveListType(editor, types)\n  const activeList = filteredLists.find((option) => option.type === activeType)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(\n        shouldShowListDropdown({\n          editor,\n          listTypes: types,\n          hideWhenUnavailable,\n          listInSchema,\n          canToggleAny,\n        })\n      )\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [canToggleAny, editor, hideWhenUnavailable, listInSchema, types])\n\n  return {\n    isVisible,\n    activeType,\n    isActive: isAnyActive,\n    canToggle: canToggleAny,\n    types,\n    filteredLists,\n    label: \"List\",\n    Icon: activeList ? listIcons[activeList.type] : ListIcon,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4728, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/list-dropdown-menu/list-dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Icons ---\nimport { ChevronDownIcon } from \"@/components/tiptap-icons/chevron-down-icon\"\n\n// --- Tiptap UI ---\nimport { ListButton, type ListType } from \"@/components/tiptap-ui/list-button\"\n\nimport { useListDropdownMenu } from \"./use-list-dropdown-menu\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button, ButtonGroup } from \"@/components/tiptap-ui-primitive/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n} from \"@/components/tiptap-ui-primitive/dropdown-menu\"\nimport { Card, CardBody } from \"@/components/tiptap-ui-primitive/card\"\n\nexport interface ListDropdownMenuProps extends Omit<ButtonProps, \"type\"> {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor\n  /**\n   * The list types to display in the dropdown.\n   */\n  types?: ListType[]\n  /**\n   * Whether the dropdown should be hidden when no list types are available\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback for when the dropdown opens or closes\n   */\n  onOpenChange?: (isOpen: boolean) => void\n  /**\n   * Whether to render the dropdown menu in a portal\n   * @default false\n   */\n  portal?: boolean\n}\n\nexport function ListDropdownMenu({\n  editor: providedEditor,\n  types = [\"bulletList\", \"orderedList\", \"taskList\"],\n  hideWhenUnavailable = false,\n  onOpenChange,\n  portal = false,\n  ...props\n}: ListDropdownMenuProps) {\n  const { editor } = useTiptapEditor(providedEditor)\n  const [isOpen, setIsOpen] = React.useState(false)\n\n  const { filteredLists, canToggle, isActive, isVisible, Icon } =\n    useListDropdownMenu({\n      editor,\n      types,\n      hideWhenUnavailable,\n    })\n\n  const handleOnOpenChange = React.useCallback(\n    (open: boolean) => {\n      setIsOpen(open)\n      onOpenChange?.(open)\n    },\n    [onOpenChange]\n  )\n\n  if (!isVisible || !editor || !editor.isEditable) {\n    return null\n  }\n\n  return (\n    <DropdownMenu open={isOpen} onOpenChange={handleOnOpenChange}>\n      <DropdownMenuTrigger asChild>\n        <Button\n          type=\"button\"\n          data-style=\"ghost\"\n          data-active-state={isActive ? \"on\" : \"off\"}\n          role=\"button\"\n          tabIndex={-1}\n          disabled={!canToggle}\n          data-disabled={!canToggle}\n          aria-label=\"List options\"\n          tooltip=\"List\"\n          {...props}\n        >\n          <Icon className=\"tiptap-button-icon\" />\n          <ChevronDownIcon className=\"tiptap-button-dropdown-small\" />\n        </Button>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent align=\"start\" portal={portal}>\n        <Card>\n          <CardBody>\n            <ButtonGroup>\n              {filteredLists.map((option) => (\n                <DropdownMenuItem key={option.type} asChild>\n                  <ListButton\n                    editor={editor}\n                    type={option.type}\n                    text={option.label}\n                    showTooltip={false}\n                  />\n                </DropdownMenuItem>\n              ))}\n            </ButtonGroup>\n          </CardBody>\n        </Card>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n\nexport default ListDropdownMenu\n"],"names":[],"mappings":";;;;;AAEA;AAGA,gBAAgB;AAChB;AAEA,gBAAgB;AAChB;AAEA,oBAAoB;AACpB;AAAA;AAEA;AAIA;AAAA;AACA;AAAA;AAMA;AAAA;;;AAzBA;;;;;;;;;AAoDO,SAAS,iBAAiB,KAOT;QAPS,EAC/B,QAAQ,cAAc,EACtB,QAAQ;QAAC;QAAc;QAAe;KAAW,EACjD,sBAAsB,KAAK,EAC3B,YAAY,EACZ,SAAS,KAAK,EACd,GAAG,OACmB,GAPS;;IAQ/B,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,CAAC,QAAQ,UAAU,GAAG,4QAAA,CAAA,WAAc,CAAC;IAE3C,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,GAC3D,CAAA,GAAA,4LAAA,CAAA,sBAAmB,AAAD,EAAE;QAClB;QACA;QACA;IACF;IAEF,MAAM,qBAAqB,4QAAA,CAAA,cAAiB;4DAC1C,CAAC;YACC,UAAU;YACV,yBAAA,mCAAA,aAAe;QACjB;2DACA;QAAC;KAAa;IAGhB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE;QAC/C,OAAO;IACT;IAEA,qBACE,4SAAC,mLAAA,CAAA,eAAY;QAAC,MAAM;QAAQ,cAAc;;0BACxC,4SAAC,mLAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,4SAAC,+JAAA,CAAA,SAAM;oBACL,MAAK;oBACL,cAAW;oBACX,qBAAmB,WAAW,OAAO;oBACrC,MAAK;oBACL,UAAU,CAAC;oBACX,UAAU,CAAC;oBACX,iBAAe,CAAC;oBAChB,cAAW;oBACX,SAAQ;oBACP,GAAG,KAAK;;sCAET,4SAAC;4BAAK,WAAU;;;;;;sCAChB,4SAAC,4JAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAI/B,4SAAC,mLAAA,CAAA,sBAAmB;gBAAC,OAAM;gBAAQ,QAAQ;0BACzC,cAAA,4SAAC,2JAAA,CAAA,OAAI;8BACH,cAAA,4SAAC,2JAAA,CAAA,WAAQ;kCACP,cAAA,4SAAC,+JAAA,CAAA,cAAW;sCACT,cAAc,GAAG,CAAC,CAAC,uBAClB,4SAAC,mLAAA,CAAA,mBAAgB;oCAAmB,OAAO;8CACzC,cAAA,4SAAC,kKAAA,CAAA,aAAU;wCACT,QAAQ;wCACR,MAAM,OAAO,IAAI;wCACjB,MAAM,OAAO,KAAK;wCAClB,aAAa;;;;;;mCALM,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAelD;GAtEgB;;QAQK,mIAAA,CAAA,kBAAe;QAIhC,4LAAA,CAAA,sBAAmB;;;KAZP;uCAwED","debugId":null}},
    {"offset": {"line": 4896, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/list-dropdown-menu/index.tsx"],"sourcesContent":["export * from \"./list-dropdown-menu\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 4915, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/blockquote-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const BlockquoteIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 6C8 5.44772 8.44772 5 9 5H16C16.5523 5 17 5.44772 17 6C17 6.55228 16.5523 7 16 7H9C8.44772 7 8 6.55228 8 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4 3C4.55228 3 5 3.44772 5 4L5 20C5 20.5523 4.55229 21 4 21C3.44772 21 3 20.5523 3 20L3 4C3 3.44772 3.44772 3 4 3Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 12C8 11.4477 8.44772 11 9 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H9C8.44772 13 8 12.5523 8 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 18C8 17.4477 8.44772 17 9 17H16C16.5523 17 17 17.4477 17 18C17 18.5523 16.5523 19 16 19H9C8.44772 19 8 18.5523 8 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nBlockquoteIcon.displayName = \"BlockquoteIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,+BAAiB,4QAAA,CAAA,OAAU,MACtC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4994, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/blockquote-button/use-blockquote.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\nimport { NodeSelection, TextSelection } from \"@tiptap/pm/state\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Icons ---\nimport { BlockquoteIcon } from \"@/components/tiptap-icons/blockquote-icon\"\n\n// --- UI Utils ---\nimport {\n  findNodePosition,\n  isNodeInSchema,\n  isNodeTypeSelected,\n  isValidPosition,\n} from \"@/lib/tiptap-utils\"\n\nexport const BLOCKQUOTE_SHORTCUT_KEY = \"mod+shift+b\"\n\n/**\n * Configuration for the blockquote functionality\n */\nexport interface UseBlockquoteConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * Whether the button should hide when blockquote is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful toggle.\n   */\n  onToggled?: () => void\n}\n\n/**\n * Checks if blockquote can be toggled in the current editor state\n */\nexport function canToggleBlockquote(\n  editor: Editor | null,\n  turnInto: boolean = true\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (\n    !isNodeInSchema(\"blockquote\", editor) ||\n    isNodeTypeSelected(editor, [\"image\"])\n  )\n    return false\n\n  if (!turnInto) {\n    return editor.can().toggleWrap(\"blockquote\")\n  }\n\n  try {\n    const view = editor.view\n    const state = view.state\n    const selection = state.selection\n\n    if (selection.empty || selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n    }\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Toggles blockquote formatting for a specific node or the current selection\n */\nexport function toggleBlockquote(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canToggleBlockquote(editor)) return false\n\n  try {\n    const view = editor.view\n    let state = view.state\n    let tr = state.tr\n\n    // No selection, find the the cursor position\n    if (state.selection.empty || state.selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n\n      tr = tr.setSelection(NodeSelection.create(state.doc, pos))\n      view.dispatch(tr)\n      state = view.state\n    }\n\n    const selection = state.selection\n\n    let chain = editor.chain().focus()\n\n    // Handle NodeSelection\n    if (selection instanceof NodeSelection) {\n      const firstChild = selection.node.firstChild?.firstChild\n      const lastChild = selection.node.lastChild?.lastChild\n\n      const from = firstChild\n        ? selection.from + firstChild.nodeSize\n        : selection.from + 1\n\n      const to = lastChild\n        ? selection.to - lastChild.nodeSize\n        : selection.to - 1\n\n      chain = chain.setTextSelection({ from, to }).clearNodes()\n    }\n\n    const toggle = editor.isActive(\"blockquote\")\n      ? chain.lift(\"blockquote\")\n      : chain.wrapIn(\"blockquote\")\n\n    toggle.run()\n\n    editor.chain().focus().selectTextblockEnd().run()\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Determines if the blockquote button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isNodeInSchema(\"blockquote\", editor)) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canToggleBlockquote(editor)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides blockquote functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage - no params needed\n * function MySimpleBlockquoteButton() {\n *   const { isVisible, handleToggle, isActive } = useBlockquote()\n *\n *   if (!isVisible) return null\n *\n *   return <button onClick={handleToggle}>Blockquote</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedBlockquoteButton() {\n *   const { isVisible, handleToggle, label, isActive } = useBlockquote({\n *     editor: myEditor,\n *     hideWhenUnavailable: true,\n *     onToggled: () => console.log('Blockquote toggled!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleToggle}\n *       aria-label={label}\n *       aria-pressed={isActive}\n *     >\n *       Toggle Blockquote\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useBlockquote(config?: UseBlockquoteConfig) {\n  const {\n    editor: providedEditor,\n    hideWhenUnavailable = false,\n    onToggled,\n  } = config || {}\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canToggle = canToggleBlockquote(editor)\n  const isActive = editor?.isActive(\"blockquote\") || false\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable])\n\n  const handleToggle = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = toggleBlockquote(editor)\n    if (success) {\n      onToggled?.()\n    }\n    return success\n  }, [editor, onToggled])\n\n  useHotkeys(\n    BLOCKQUOTE_SHORTCUT_KEY,\n    (event) => {\n      event.preventDefault()\n      handleToggle()\n    },\n    {\n      enabled: isVisible && canToggle,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleToggle,\n    canToggle,\n    label: \"Blockquote\",\n    shortcutKeys: BLOCKQUOTE_SHORTCUT_KEY,\n    Icon: BlockquoteIcon,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5178, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/blockquote-button/blockquote-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Tiptap UI ---\nimport type { UseBlockquoteConfig } from \"@/components/tiptap-ui/blockquote-button\"\nimport {\n  BLOCKQUOTE_SHORTCUT_KEY,\n  useBlockquote,\n} from \"@/components/tiptap-ui/blockquote-button\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\nexport interface BlockquoteButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseBlockquoteConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function BlockquoteShortcutBadge({\n  shortcutKeys = BLOCKQUOTE_SHORTCUT_KEY,\n}: {\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for toggling blockquote in a Tiptap editor.\n *\n * For custom button implementations, use the `useBlockquote` hook instead.\n */\nexport const BlockquoteButton = React.forwardRef<\n  HTMLButtonElement,\n  BlockquoteButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      text,\n      hideWhenUnavailable = false,\n      onToggled,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      canToggle,\n      isActive,\n      handleToggle,\n      label,\n      shortcutKeys,\n      Icon,\n    } = useBlockquote({\n      editor,\n      hideWhenUnavailable,\n      onToggled,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleToggle()\n      },\n      [handleToggle, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        role=\"button\"\n        tabIndex={-1}\n        disabled={!canToggle}\n        data-disabled={!canToggle}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip=\"Blockquote\"\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <BlockquoteShortcutBadge shortcutKeys={shortcutKeys} />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nBlockquoteButton.displayName = \"BlockquoteButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAIA;AAAA;AAKA,gBAAgB;AAChB;AAEA,cAAc;AACd;AAIA;AAAA;AACA;AAAA;;;AApBA;;;;;;;AAoCO,SAAS,wBAAwB,KAIvC;QAJuC,EACtC,eAAe,0KAAA,CAAA,0BAAuB,EAGvC,GAJuC;IAKtC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KANgB;AAaT,MAAM,iCAAmB,GAAA,4QAAA,CAAA,aAAgB,UAI9C,QAWE;QAVA,EACE,QAAQ,cAAc,EACtB,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,YAAY,EACZ,IAAI,EACL,GAAG,CAAA,GAAA,0KAAA,CAAA,gBAAa,AAAD,EAAE;QAChB;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;qDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;oDACA;QAAC;QAAc;KAAQ;IAGzB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,MAAK;QACL,UAAU,CAAC;QACX,UAAU,CAAC;QACX,iBAAe,CAAC;QAChB,cAAY;QACZ,gBAAc;QACd,SAAQ;QACR,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBAAwB,cAAc;;;;;;;;;;;;;AAMnD;;QAvDqB,mIAAA,CAAA,kBAAe;QAS9B,0KAAA,CAAA,gBAAa;;;;QATE,mIAAA,CAAA,kBAAe;QAS9B,0KAAA,CAAA,gBAAa;;;;AAiDrB,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5309, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/blockquote-button/index.tsx"],"sourcesContent":["export * from \"./blockquote-button\"\nexport * from \"./use-blockquote\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 5331, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/code-block-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const CodeBlockIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6.70711 2.29289C7.09763 2.68342 7.09763 3.31658 6.70711 3.70711L4.41421 6L6.70711 8.29289C7.09763 8.68342 7.09763 9.31658 6.70711 9.70711C6.31658 10.0976 5.68342 10.0976 5.29289 9.70711L2.29289 6.70711C1.90237 6.31658 1.90237 5.68342 2.29289 5.29289L5.29289 2.29289C5.68342 1.90237 6.31658 1.90237 6.70711 2.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10.2929 2.29289C10.6834 1.90237 11.3166 1.90237 11.7071 2.29289L14.7071 5.29289C15.0976 5.68342 15.0976 6.31658 14.7071 6.70711L11.7071 9.70711C11.3166 10.0976 10.6834 10.0976 10.2929 9.70711C9.90237 9.31658 9.90237 8.68342 10.2929 8.29289L12.5858 6L10.2929 3.70711C9.90237 3.31658 9.90237 2.68342 10.2929 2.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M17 4C17 3.44772 17.4477 3 18 3H19C20.6569 3 22 4.34315 22 6V18C22 19.6569 20.6569 21 19 21H5C3.34315 21 2 19.6569 2 18V12C2 11.4477 2.44772 11 3 11C3.55228 11 4 11.4477 4 12V18C4 18.5523 4.44772 19 5 19H19C19.5523 19 20 18.5523 20 18V6C20 5.44772 19.5523 5 19 5H18C17.4477 5 17 4.55228 17 4Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nCodeBlockIcon.displayName = \"CodeBlockIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,8BAAgB,4QAAA,CAAA,OAAU,MACrC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5400, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/code-block-button/use-code-block.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type Editor } from \"@tiptap/react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { NodeSelection, TextSelection } from \"@tiptap/pm/state\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport {\n  findNodePosition,\n  isNodeInSchema,\n  isNodeTypeSelected,\n  isValidPosition,\n} from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { CodeBlockIcon } from \"@/components/tiptap-icons/code-block-icon\"\n\nexport const CODE_BLOCK_SHORTCUT_KEY = \"mod+alt+c\"\n\n/**\n * Configuration for the code block functionality\n */\nexport interface UseCodeBlockConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * Whether the button should hide when code block is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful code block toggle.\n   */\n  onToggled?: () => void\n}\n\n/**\n * Checks if code block can be toggled in the current editor state\n */\nexport function canToggle(\n  editor: Editor | null,\n  turnInto: boolean = true\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (\n    !isNodeInSchema(\"codeBlock\", editor) ||\n    isNodeTypeSelected(editor, [\"image\"])\n  )\n    return false\n\n  if (!turnInto) {\n    return editor.can().toggleNode(\"codeBlock\", \"paragraph\")\n  }\n\n  try {\n    const view = editor.view\n    const state = view.state\n    const selection = state.selection\n\n    if (selection.empty || selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n    }\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Toggles code block in the editor\n */\nexport function toggleCodeBlock(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canToggle(editor)) return false\n\n  try {\n    const view = editor.view\n    let state = view.state\n    let tr = state.tr\n\n    // No selection, find the the cursor position\n    if (state.selection.empty || state.selection instanceof TextSelection) {\n      const pos = findNodePosition({\n        editor,\n        node: state.selection.$anchor.node(1),\n      })?.pos\n      if (!isValidPosition(pos)) return false\n\n      tr = tr.setSelection(NodeSelection.create(state.doc, pos))\n      view.dispatch(tr)\n      state = view.state\n    }\n\n    const selection = state.selection\n\n    let chain = editor.chain().focus()\n\n    // Handle NodeSelection\n    if (selection instanceof NodeSelection) {\n      const firstChild = selection.node.firstChild?.firstChild\n      const lastChild = selection.node.lastChild?.lastChild\n\n      const from = firstChild\n        ? selection.from + firstChild.nodeSize\n        : selection.from + 1\n\n      const to = lastChild\n        ? selection.to - lastChild.nodeSize\n        : selection.to - 1\n\n      chain = chain.setTextSelection({ from, to }).clearNodes()\n    }\n\n    const toggle = editor.isActive(\"codeBlock\")\n      ? chain.setNode(\"paragraph\")\n      : chain.toggleNode(\"codeBlock\", \"paragraph\")\n\n    toggle.run()\n\n    editor.chain().focus().selectTextblockEnd().run()\n\n    return true\n  } catch {\n    return false\n  }\n}\n\n/**\n * Determines if the code block button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isNodeInSchema(\"codeBlock\", editor)) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canToggle(editor)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides code block functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage - no params needed\n * function MySimpleCodeBlockButton() {\n *   const { isVisible, isActive, handleToggle } = useCodeBlock()\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <button\n *       onClick={handleToggle}\n *       aria-pressed={isActive}\n *     >\n *       Code Block\n *     </button>\n *   )\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedCodeBlockButton() {\n *   const { isVisible, isActive, handleToggle, label } = useCodeBlock({\n *     editor: myEditor,\n *     hideWhenUnavailable: true,\n *     onToggled: (isActive) => console.log('Code block toggled:', isActive)\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleToggle}\n *       aria-label={label}\n *       aria-pressed={isActive}\n *     >\n *       Toggle Code Block\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useCodeBlock(config?: UseCodeBlockConfig) {\n  const {\n    editor: providedEditor,\n    hideWhenUnavailable = false,\n    onToggled,\n  } = config || {}\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canToggleState = canToggle(editor)\n  const isActive = editor?.isActive(\"codeBlock\") || false\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable])\n\n  const handleToggle = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = toggleCodeBlock(editor)\n    if (success) {\n      onToggled?.()\n    }\n    return success\n  }, [editor, onToggled])\n\n  useHotkeys(\n    CODE_BLOCK_SHORTCUT_KEY,\n    (event) => {\n      event.preventDefault()\n      handleToggle()\n    },\n    {\n      enabled: isVisible && canToggleState,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleToggle,\n    canToggle: canToggleState,\n    label: \"Code Block\",\n    shortcutKeys: CODE_BLOCK_SHORTCUT_KEY,\n    Icon: CodeBlockIcon,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5584, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/code-block-button/code-block-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Tiptap UI ---\nimport type { UseCodeBlockConfig } from \"@/components/tiptap-ui/code-block-button\"\nimport {\n  CODE_BLOCK_SHORTCUT_KEY,\n  useCodeBlock,\n} from \"@/components/tiptap-ui/code-block-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\nexport interface CodeBlockButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseCodeBlockConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function CodeBlockShortcutBadge({\n  shortcutKeys = CODE_BLOCK_SHORTCUT_KEY,\n}: {\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for toggling code block in a Tiptap editor.\n *\n * For custom button implementations, use the `useCodeBlock` hook instead.\n */\nexport const CodeBlockButton = React.forwardRef<\n  HTMLButtonElement,\n  CodeBlockButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      text,\n      hideWhenUnavailable = false,\n      onToggled,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      canToggle,\n      isActive,\n      handleToggle,\n      label,\n      shortcutKeys,\n      Icon,\n    } = useCodeBlock({\n      editor,\n      hideWhenUnavailable,\n      onToggled,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleToggle()\n      },\n      [handleToggle, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        role=\"button\"\n        disabled={!canToggle}\n        data-disabled={!canToggle}\n        tabIndex={-1}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip=\"Code Block\"\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <CodeBlockShortcutBadge shortcutKeys={shortcutKeys} />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nCodeBlockButton.displayName = \"CodeBlockButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,gBAAgB;AAChB;AAEA,cAAc;AACd;AAIA;AAAA;AAOA;AAAA;AACA;AAAA;;;AApBA;;;;;;;AAoCO,SAAS,uBAAuB,KAItC;QAJsC,EACrC,eAAe,gLAAA,CAAA,0BAAuB,EAGvC,GAJsC;IAKrC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KANgB;AAaT,MAAM,gCAAkB,GAAA,4QAAA,CAAA,aAAgB,UAI7C,QAWE;QAVA,EACE,QAAQ,cAAc,EACtB,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,YAAY,EACZ,IAAI,EACL,GAAG,CAAA,GAAA,gLAAA,CAAA,eAAY,AAAD,EAAE;QACf;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;oDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;mDACA;QAAC;QAAc;KAAQ;IAGzB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,MAAK;QACL,UAAU,CAAC;QACX,iBAAe,CAAC;QAChB,UAAU,CAAC;QACX,cAAY;QACZ,gBAAc;QACd,SAAQ;QACR,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBAAuB,cAAc;;;;;;;;;;;;;AAMlD;;QAvDqB,mIAAA,CAAA,kBAAe;QAS9B,gLAAA,CAAA,eAAY;;;;QATG,mIAAA,CAAA,kBAAe;QAS9B,gLAAA,CAAA,eAAY;;;;AAiDpB,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5715, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/code-block-button/index.tsx"],"sourcesContent":["export * from \"./code-block-button\"\nexport * from \"./use-code-block\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 5737, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/ban-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const BanIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4.43471 4.01458C4.34773 4.06032 4.26607 4.11977 4.19292 4.19292C4.11977 4.26607 4.06032 4.34773 4.01458 4.43471C2.14611 6.40628 1 9.0693 1 12C1 18.0751 5.92487 23 12 23C14.9306 23 17.5936 21.854 19.5651 19.9856C19.6522 19.9398 19.7339 19.8803 19.8071 19.8071C19.8803 19.7339 19.9398 19.6522 19.9856 19.5651C21.854 17.5936 23 14.9306 23 12C23 5.92487 18.0751 1 12 1C9.0693 1 6.40628 2.14611 4.43471 4.01458ZM6.38231 4.9681C7.92199 3.73647 9.87499 3 12 3C16.9706 3 21 7.02944 21 12C21 14.125 20.2635 16.078 19.0319 17.6177L6.38231 4.9681ZM17.6177 19.0319C16.078 20.2635 14.125 21 12 21C7.02944 21 3 16.9706 3 12C3 9.87499 3.73647 7.92199 4.9681 6.38231L17.6177 19.0319Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nBanIcon.displayName = \"BanIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,wBAAU,4QAAA,CAAA,OAAU,MAC/B;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,QAAQ,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5784, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/highlighter-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const HighlighterIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M14.7072 4.70711C15.0977 4.31658 15.0977 3.68342 14.7072 3.29289C14.3167 2.90237 13.6835 2.90237 13.293 3.29289L8.69294 7.89286L8.68594 7.9C8.13626 8.46079 7.82837 9.21474 7.82837 10C7.82837 10.2306 7.85491 10.4584 7.90631 10.6795L2.29289 16.2929C2.10536 16.4804 2 16.7348 2 17V20C2 20.5523 2.44772 21 3 21H12C12.2652 21 12.5196 20.8946 12.7071 20.7071L15.3205 18.0937C15.5416 18.1452 15.7695 18.1717 16.0001 18.1717C16.7853 18.1717 17.5393 17.8639 18.1001 17.3142L22.7072 12.7071C23.0977 12.3166 23.0977 11.6834 22.7072 11.2929C22.3167 10.9024 21.6835 10.9024 21.293 11.2929L16.6971 15.8887C16.5105 16.0702 16.2605 16.1717 16.0001 16.1717C15.7397 16.1717 15.4897 16.0702 15.303 15.8887L10.1113 10.697C9.92992 10.5104 9.82837 10.2604 9.82837 10C9.82837 9.73963 9.92992 9.48958 10.1113 9.30297L14.7072 4.70711ZM13.5858 17L9.00004 12.4142L4 17.4142V19H11.5858L13.5858 17Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nHighlighterIcon.displayName = \"HighlighterIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5831, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/popover/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\nimport { cn } from \"@/lib/tiptap-utils\"\nimport \"@/components/tiptap-ui-primitive/popover/popover.scss\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\"tiptap-popover\", className)}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  )\n}\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AAJA;;;;;AAOA,SAAS,QAAQ,KAEoC;QAFpC,EACf,GAAG,OACgD,GAFpC;IAGf,qBAAO,4SAAC,gRAAA,CAAA,OAAqB;QAAE,GAAG,KAAK;;;;;;AACzC;KAJS;AAMT,SAAS,eAAe,KAEgC;QAFhC,EACtB,GAAG,OACmD,GAFhC;IAGtB,qBAAO,4SAAC,gRAAA,CAAA,UAAwB;QAAE,GAAG,KAAK;;;;;;AAC5C;MAJS;AAMT,SAAS,eAAe,KAKgC;QALhC,EACtB,SAAS,EACT,QAAQ,QAAQ,EAChB,aAAa,CAAC,EACd,GAAG,OACmD,GALhC;IAMtB,qBACE,4SAAC,gRAAA,CAAA,SAAuB;kBACtB,cAAA,4SAAC,gRAAA,CAAA,UAAwB;YACvB,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,kBAAkB;YAC/B,GAAG,KAAK;;;;;;;;;;;AAIjB;MAhBS","debugId":null}},
    {"offset": {"line": 5900, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/popover/index.tsx"],"sourcesContent":["export * from \"./popover\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 5919, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/color-highlight-button/use-color-highlight.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type Editor } from \"@tiptap/react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport { isMarkInSchema, isNodeTypeSelected } from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { HighlighterIcon } from \"@/components/tiptap-icons/highlighter-icon\"\n\nexport const COLOR_HIGHLIGHT_SHORTCUT_KEY = \"mod+shift+h\"\nexport const HIGHLIGHT_COLORS = [\n  {\n    label: \"Default background\",\n    value: \"var(--tt-bg-color)\",\n    border: \"var(--tt-bg-color-contrast)\",\n  },\n  {\n    label: \"Gray background\",\n    value: \"var(--tt-color-highlight-gray)\",\n    border: \"var(--tt-color-highlight-gray-contrast)\",\n  },\n  {\n    label: \"Brown background\",\n    value: \"var(--tt-color-highlight-brown)\",\n    border: \"var(--tt-color-highlight-brown-contrast)\",\n  },\n  {\n    label: \"Orange background\",\n    value: \"var(--tt-color-highlight-orange)\",\n    border: \"var(--tt-color-highlight-orange-contrast)\",\n  },\n  {\n    label: \"Yellow background\",\n    value: \"var(--tt-color-highlight-yellow)\",\n    border: \"var(--tt-color-highlight-yellow-contrast)\",\n  },\n  {\n    label: \"Green background\",\n    value: \"var(--tt-color-highlight-green)\",\n    border: \"var(--tt-color-highlight-green-contrast)\",\n  },\n  {\n    label: \"Blue background\",\n    value: \"var(--tt-color-highlight-blue)\",\n    border: \"var(--tt-color-highlight-blue-contrast)\",\n  },\n  {\n    label: \"Purple background\",\n    value: \"var(--tt-color-highlight-purple)\",\n    border: \"var(--tt-color-highlight-purple-contrast)\",\n  },\n  {\n    label: \"Pink background\",\n    value: \"var(--tt-color-highlight-pink)\",\n    border: \"var(--tt-color-highlight-pink-contrast)\",\n  },\n  {\n    label: \"Red background\",\n    value: \"var(--tt-color-highlight-red)\",\n    border: \"var(--tt-color-highlight-red-contrast)\",\n  },\n]\nexport type HighlightColor = (typeof HIGHLIGHT_COLORS)[number]\n\n/**\n * Configuration for the color highlight functionality\n */\nexport interface UseColorHighlightConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The color to apply when toggling the highlight.\n   */\n  highlightColor?: string\n  /**\n   * Optional label to display alongside the icon.\n   */\n  label?: string\n  /**\n   * Whether the button should hide when the mark is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Called when the highlight is applied.\n   */\n  onApplied?: ({ color, label }: { color: string; label: string }) => void\n}\n\nexport function pickHighlightColorsByValue(values: string[]) {\n  const colorMap = new Map(\n    HIGHLIGHT_COLORS.map((color) => [color.value, color])\n  )\n  return values\n    .map((value) => colorMap.get(value))\n    .filter((color): color is (typeof HIGHLIGHT_COLORS)[number] => !!color)\n}\n\nexport function canColorHighlight(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (\n    !isMarkInSchema(\"highlight\", editor) ||\n    isNodeTypeSelected(editor, [\"image\"])\n  )\n    return false\n\n  return editor.can().setMark(\"highlight\")\n}\n\nexport function isColorHighlightActive(\n  editor: Editor | null,\n  highlightColor?: string\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  return highlightColor\n    ? editor.isActive(\"highlight\", { color: highlightColor })\n    : editor.isActive(\"highlight\")\n}\n\nexport function removeHighlight(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canColorHighlight(editor)) return false\n\n  return editor.chain().focus().unsetMark(\"highlight\").run()\n}\n\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isMarkInSchema(\"highlight\", editor)) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canColorHighlight(editor)\n  }\n\n  return true\n}\n\nexport function useColorHighlight(config: UseColorHighlightConfig) {\n  const {\n    editor: providedEditor,\n    label,\n    highlightColor,\n    hideWhenUnavailable = false,\n    onApplied,\n  } = config\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canColorHighlightState = canColorHighlight(editor)\n  const isActive = isColorHighlightActive(editor, highlightColor)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable])\n\n  const handleColorHighlight = React.useCallback(() => {\n    if (!editor || !canColorHighlightState || !highlightColor || !label)\n      return false\n\n    if (editor.state.storedMarks) {\n      const highlightMarkType = editor.schema.marks.highlight\n      if (highlightMarkType) {\n        editor.view.dispatch(\n          editor.state.tr.removeStoredMark(highlightMarkType)\n        )\n      }\n    }\n\n    setTimeout(() => {\n      const success = editor\n        .chain()\n        .focus()\n        .toggleMark(\"highlight\", { color: highlightColor })\n        .run()\n      if (success) {\n        onApplied?.({ color: highlightColor, label })\n      }\n      return success\n    }, 0)\n  }, [canColorHighlightState, highlightColor, editor, label, onApplied])\n\n  const handleRemoveHighlight = React.useCallback(() => {\n    const success = removeHighlight(editor)\n    if (success) {\n      onApplied?.({ color: \"\", label: \"Remove highlight\" })\n    }\n    return success\n  }, [editor, onApplied])\n\n  useHotkeys(\n    COLOR_HIGHLIGHT_SHORTCUT_KEY,\n    (event) => {\n      event.preventDefault()\n      handleColorHighlight()\n    },\n    {\n      enabled: isVisible && canColorHighlightState,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleColorHighlight,\n    handleRemoveHighlight,\n    canColorHighlight: canColorHighlightState,\n    label: label || `Highlight`,\n    shortcutKeys: COLOR_HIGHLIGHT_SHORTCUT_KEY,\n    Icon: HighlighterIcon,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6147, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/color-highlight-button/color-highlight-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Tiptap UI ---\nimport type { UseColorHighlightConfig } from \"@/components/tiptap-ui/color-highlight-button\"\nimport {\n  COLOR_HIGHLIGHT_SHORTCUT_KEY,\n  useColorHighlight,\n} from \"@/components/tiptap-ui/color-highlight-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\n// --- Styles ---\nimport \"@/components/tiptap-ui/color-highlight-button/color-highlight-button.scss\"\n\nexport interface ColorHighlightButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseColorHighlightConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function ColorHighlightShortcutBadge({\n  shortcutKeys = COLOR_HIGHLIGHT_SHORTCUT_KEY,\n}: {\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for applying color highlights in a Tiptap editor.\n *\n * For custom button implementations, use the `useColorHighlight` hook instead.\n */\nexport const ColorHighlightButton = React.forwardRef<\n  HTMLButtonElement,\n  ColorHighlightButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      highlightColor,\n      text,\n      hideWhenUnavailable = false,\n      onApplied,\n      showShortcut = false,\n      onClick,\n      children,\n      style,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      canColorHighlight,\n      isActive,\n      handleColorHighlight,\n      label,\n      shortcutKeys,\n    } = useColorHighlight({\n      editor,\n      highlightColor,\n      label: text || `Toggle highlight (${highlightColor})`,\n      hideWhenUnavailable,\n      onApplied,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleColorHighlight()\n      },\n      [handleColorHighlight, onClick]\n    )\n\n    const buttonStyle = React.useMemo(\n      () =>\n        ({\n          ...style,\n          \"--highlight-color\": highlightColor,\n        }) as React.CSSProperties,\n      [highlightColor, style]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        role=\"button\"\n        tabIndex={-1}\n        disabled={!canColorHighlight}\n        data-disabled={!canColorHighlight}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip={label}\n        onClick={handleClick}\n        style={buttonStyle}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <span\n              className=\"tiptap-button-highlight\"\n              style={\n                { \"--highlight-color\": highlightColor } as React.CSSProperties\n              }\n            />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <ColorHighlightShortcutBadge shortcutKeys={shortcutKeys} />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nColorHighlightButton.displayName = \"ColorHighlightButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AAIA;AAAA;AAOA;AAAA;AACA;AAAA;;;AApBA;;;;;;;;AAuCO,SAAS,4BAA4B,KAI3C;QAJ2C,EAC1C,eAAe,0LAAA,CAAA,+BAA4B,EAG5C,GAJ2C;IAK1C,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KANgB;AAaT,MAAM,qCAAuB,GAAA,4QAAA,CAAA,aAAgB,UAIlD,QAaE;QAZA,EACE,QAAQ,cAAc,EACtB,cAAc,EACd,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,KAAK,EACL,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,iBAAiB,EACjB,QAAQ,EACR,oBAAoB,EACpB,KAAK,EACL,YAAY,EACb,GAAG,CAAA,GAAA,0LAAA,CAAA,oBAAiB,AAAD,EAAE;QACpB;QACA;QACA,OAAO,QAAQ,AAAC,qBAAmC,OAAf,gBAAe;QACnD;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;yDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;wDACA;QAAC;QAAsB;KAAQ;IAGjC,MAAM,cAAc,4QAAA,CAAA,UAAa;qDAC/B,IACE,CAAC;gBACC,GAAG,KAAK;gBACR,qBAAqB;YACvB,CAAC;oDACH;QAAC;QAAgB;KAAM;IAGzB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,MAAK;QACL,UAAU,CAAC;QACX,UAAU,CAAC;QACX,iBAAe,CAAC;QAChB,cAAY;QACZ,gBAAc;QACd,SAAS;QACT,SAAS;QACT,OAAO;QACN,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBACC,WAAU;oBACV,OACE;wBAAE,qBAAqB;oBAAe;;;;;;gBAGzC,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBAA4B,cAAc;;;;;;;;;;;;;AAMvD;;QAvEqB,mIAAA,CAAA,kBAAe;QAQ9B,0LAAA,CAAA,oBAAiB;;;;QARF,mIAAA,CAAA,kBAAe;QAQ9B,0LAAA,CAAA,oBAAiB;;;;AAkEzB,qBAAqB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6294, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/color-highlight-button/index.tsx"],"sourcesContent":["export * from \"./color-highlight-button\"\nexport * from \"./use-color-highlight\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 6316, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/color-highlight-popover/color-highlight-popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { type Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useMenuNavigation } from \"@/hooks/use-menu-navigation\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Icons ---\nimport { BanIcon } from \"@/components/tiptap-icons/ban-icon\"\nimport { HighlighterIcon } from \"@/components/tiptap-icons/highlighter-icon\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button, ButtonGroup } from \"@/components/tiptap-ui-primitive/button\"\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n} from \"@/components/tiptap-ui-primitive/popover\"\nimport { Separator } from \"@/components/tiptap-ui-primitive/separator\"\nimport {\n  Card,\n  CardBody,\n  CardItemGroup,\n} from \"@/components/tiptap-ui-primitive/card\"\n\n// --- Tiptap UI ---\nimport type {\n  HighlightColor,\n  UseColorHighlightConfig,\n} from \"@/components/tiptap-ui/color-highlight-button\"\nimport {\n  ColorHighlightButton,\n  pickHighlightColorsByValue,\n  useColorHighlight,\n} from \"@/components/tiptap-ui/color-highlight-button\"\n\nexport interface ColorHighlightPopoverContentProps {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * Optional colors to use in the highlight popover.\n   * If not provided, defaults to a predefined set of colors.\n   */\n  colors?: HighlightColor[]\n}\n\nexport interface ColorHighlightPopoverProps\n  extends Omit<ButtonProps, \"type\">,\n    Pick<\n      UseColorHighlightConfig,\n      \"editor\" | \"hideWhenUnavailable\" | \"onApplied\"\n    > {\n  /**\n   * Optional colors to use in the highlight popover.\n   * If not provided, defaults to a predefined set of colors.\n   */\n  colors?: HighlightColor[]\n}\n\nexport const ColorHighlightPopoverButton = React.forwardRef<\n  HTMLButtonElement,\n  ButtonProps\n>(({ className, children, ...props }, ref) => (\n  <Button\n    type=\"button\"\n    className={className}\n    data-style=\"ghost\"\n    data-appearance=\"default\"\n    role=\"button\"\n    tabIndex={-1}\n    aria-label=\"Highlight text\"\n    tooltip=\"Highlight\"\n    ref={ref}\n    {...props}\n  >\n    {children ?? <HighlighterIcon className=\"tiptap-button-icon\" />}\n  </Button>\n))\n\nColorHighlightPopoverButton.displayName = \"ColorHighlightPopoverButton\"\n\nexport function ColorHighlightPopoverContent({\n  editor,\n  colors = pickHighlightColorsByValue([\n    \"var(--tt-color-highlight-green)\",\n    \"var(--tt-color-highlight-blue)\",\n    \"var(--tt-color-highlight-red)\",\n    \"var(--tt-color-highlight-purple)\",\n    \"var(--tt-color-highlight-yellow)\",\n  ]),\n}: ColorHighlightPopoverContentProps) {\n  const { handleRemoveHighlight } = useColorHighlight({ editor })\n  const isMobile = useIsMobile()\n  const containerRef = React.useRef<HTMLDivElement>(null)\n\n  const menuItems = React.useMemo(\n    () => [...colors, { label: \"Remove highlight\", value: \"none\" }],\n    [colors]\n  )\n\n  const { selectedIndex } = useMenuNavigation({\n    containerRef,\n    items: menuItems,\n    orientation: \"both\",\n    onSelect: (item) => {\n      if (!containerRef.current) return false\n      const highlightedElement = containerRef.current.querySelector(\n        '[data-highlighted=\"true\"]'\n      ) as HTMLElement\n      if (highlightedElement) highlightedElement.click()\n      if (item.value === \"none\") handleRemoveHighlight()\n    },\n    autoSelectFirstItem: false,\n  })\n\n  return (\n    <Card\n      ref={containerRef}\n      tabIndex={0}\n      style={isMobile ? { boxShadow: \"none\", border: 0 } : {}}\n    >\n      <CardBody style={isMobile ? { padding: 0 } : {}}>\n        <CardItemGroup orientation=\"horizontal\">\n          <ButtonGroup orientation=\"horizontal\">\n            {colors.map((color, index) => (\n              <ColorHighlightButton\n                key={color.value}\n                editor={editor}\n                highlightColor={color.value}\n                tooltip={color.label}\n                aria-label={`${color.label} highlight color`}\n                tabIndex={index === selectedIndex ? 0 : -1}\n                data-highlighted={selectedIndex === index}\n              />\n            ))}\n          </ButtonGroup>\n          <Separator />\n          <ButtonGroup orientation=\"horizontal\">\n            <Button\n              onClick={handleRemoveHighlight}\n              aria-label=\"Remove highlight\"\n              tooltip=\"Remove highlight\"\n              tabIndex={selectedIndex === colors.length ? 0 : -1}\n              type=\"button\"\n              role=\"menuitem\"\n              data-style=\"ghost\"\n              data-highlighted={selectedIndex === colors.length}\n            >\n              <BanIcon className=\"tiptap-button-icon\" />\n            </Button>\n          </ButtonGroup>\n        </CardItemGroup>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport function ColorHighlightPopover({\n  editor: providedEditor,\n  colors = pickHighlightColorsByValue([\n    \"var(--tt-color-highlight-green)\",\n    \"var(--tt-color-highlight-blue)\",\n    \"var(--tt-color-highlight-red)\",\n    \"var(--tt-color-highlight-purple)\",\n    \"var(--tt-color-highlight-yellow)\",\n  ]),\n  hideWhenUnavailable = false,\n  onApplied,\n  ...props\n}: ColorHighlightPopoverProps) {\n  const { editor } = useTiptapEditor(providedEditor)\n  const [isOpen, setIsOpen] = React.useState(false)\n  const { isVisible, canColorHighlight, isActive, label, Icon } =\n    useColorHighlight({\n      editor,\n      hideWhenUnavailable,\n      onApplied,\n    })\n\n  if (!isVisible) return null\n\n  return (\n    <Popover open={isOpen} onOpenChange={setIsOpen}>\n      <PopoverTrigger asChild>\n        <ColorHighlightPopoverButton\n          disabled={!canColorHighlight}\n          data-active-state={isActive ? \"on\" : \"off\"}\n          data-disabled={!canColorHighlight}\n          aria-pressed={isActive}\n          aria-label={label}\n          tooltip={label}\n          {...props}\n        >\n          <Icon className=\"tiptap-button-icon\" />\n        </ColorHighlightPopoverButton>\n      </PopoverTrigger>\n      <PopoverContent aria-label=\"Highlight colors\">\n        <ColorHighlightPopoverContent editor={editor} colors={colors} />\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nexport default ColorHighlightPopover\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6605, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/color-highlight-popover/index.tsx"],"sourcesContent":["export * from \"./color-highlight-popover\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 6624, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/corner-down-left-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const CornerDownLeftIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M21 4C21 3.44772 20.5523 3 20 3C19.4477 3 19 3.44772 19 4V11C19 11.7956 18.6839 12.5587 18.1213 13.1213C17.5587 13.6839 16.7956 14 16 14H6.41421L9.70711 10.7071C10.0976 10.3166 10.0976 9.68342 9.70711 9.29289C9.31658 8.90237 8.68342 8.90237 8.29289 9.29289L3.29289 14.2929C2.90237 14.6834 2.90237 15.3166 3.29289 15.7071L8.29289 20.7071C8.68342 21.0976 9.31658 21.0976 9.70711 20.7071C10.0976 20.3166 10.0976 19.6834 9.70711 19.2929L6.41421 16H16C17.3261 16 18.5979 15.4732 19.5355 14.5355C20.4732 13.5979 21 12.3261 21 11V4Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nCornerDownLeftIcon.displayName = \"CornerDownLeftIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,mCAAqB,4QAAA,CAAA,OAAU,MAC1C;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,mBAAmB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6671, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/external-link-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ExternalLinkIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M14 3C14 2.44772 14.4477 2 15 2H21C21.5523 2 22 2.44772 22 3V9C22 9.55228 21.5523 10 21 10C20.4477 10 20 9.55228 20 9V5.41421L10.7071 14.7071C10.3166 15.0976 9.68342 15.0976 9.29289 14.7071C8.90237 14.3166 8.90237 13.6834 9.29289 13.2929L18.5858 4H15C14.4477 4 14 3.55228 14 3Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M4.29289 7.29289C4.48043 7.10536 4.73478 7 5 7H11C11.5523 7 12 6.55228 12 6C12 5.44772 11.5523 5 11 5H5C4.20435 5 3.44129 5.31607 2.87868 5.87868C2.31607 6.44129 2 7.20435 2 8V19C2 19.7957 2.31607 20.5587 2.87868 21.1213C3.44129 21.6839 4.20435 22 5 22H16C16.7957 22 17.5587 21.6839 18.1213 21.1213C18.6839 20.5587 19 19.7957 19 19V13C19 12.4477 18.5523 12 18 12C17.4477 12 17 12.4477 17 13V19C17 19.2652 16.8946 19.5196 16.7071 19.7071C16.5196 19.8946 16.2652 20 16 20H5C4.73478 20 4.48043 19.8946 4.29289 19.7071C4.10536 19.5196 4 19.2652 4 19V8C4 7.73478 4.10536 7.48043 4.29289 7.29289Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nExternalLinkIcon.displayName = \"ExternalLinkIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,iCAAmB,4QAAA,CAAA,OAAU,MACxC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6726, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/link-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const LinkIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M16.9958 1.06669C15.4226 1.05302 13.907 1.65779 12.7753 2.75074L12.765 2.76086L11.045 4.47086C10.6534 4.86024 10.6515 5.49341 11.0409 5.88507C11.4303 6.27673 12.0634 6.27858 12.4551 5.88919L14.1697 4.18456C14.9236 3.45893 15.9319 3.05752 16.9784 3.06662C18.0272 3.07573 19.0304 3.49641 19.772 4.23804C20.5137 4.97967 20.9344 5.98292 20.9435 7.03171C20.9526 8.07776 20.5515 9.08563 19.8265 9.83941L16.833 12.8329C16.4274 13.2386 15.9393 13.5524 15.4019 13.7529C14.8645 13.9533 14.2903 14.0359 13.7181 13.9949C13.146 13.9539 12.5894 13.7904 12.0861 13.5154C11.5827 13.2404 11.1444 12.8604 10.8008 12.401C10.47 11.9588 9.84333 11.8685 9.40108 12.1993C8.95883 12.5301 8.86849 13.1568 9.1993 13.599C9.71464 14.288 10.3721 14.858 11.1272 15.2705C11.8822 15.683 12.7171 15.9283 13.5753 15.9898C14.4334 16.0513 15.2948 15.9274 16.1009 15.6267C16.907 15.326 17.639 14.8555 18.2473 14.247L21.2472 11.2471L21.2593 11.2347C22.3523 10.1031 22.9571 8.58751 22.9434 7.01433C22.9297 5.44115 22.2987 3.93628 21.1863 2.82383C20.0738 1.71138 18.5689 1.08036 16.9958 1.06669Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M10.4247 8.0102C9.56657 7.94874 8.70522 8.07256 7.89911 8.37326C7.09305 8.67395 6.36096 9.14458 5.75272 9.753L2.75285 12.7529L2.74067 12.7653C1.64772 13.8969 1.04295 15.4125 1.05662 16.9857C1.07029 18.5589 1.70131 20.0637 2.81376 21.1762C3.9262 22.2886 5.43108 22.9196 7.00426 22.9333C8.57744 22.947 10.0931 22.3422 11.2247 21.2493L11.2371 21.2371L12.9471 19.5271C13.3376 19.1366 13.3376 18.5034 12.9471 18.1129C12.5565 17.7223 11.9234 17.7223 11.5328 18.1129L9.82932 19.8164C9.07555 20.5414 8.06768 20.9425 7.02164 20.9334C5.97285 20.9243 4.9696 20.5036 4.22797 19.762C3.48634 19.0203 3.06566 18.0171 3.05655 16.9683C3.04746 15.9222 3.44851 14.9144 4.17355 14.1606L7.16719 11.167C7.5727 10.7613 8.06071 10.4476 8.59811 10.2471C9.13552 10.0467 9.70976 9.96412 10.2819 10.0051C10.854 10.0461 11.4106 10.2096 11.9139 10.4846C12.4173 10.7596 12.8556 11.1397 13.1992 11.599C13.53 12.0412 14.1567 12.1316 14.5989 11.8007C15.0412 11.4699 15.1315 10.8433 14.8007 10.401C14.2854 9.71205 13.6279 9.14198 12.8729 8.72948C12.1178 8.31697 11.2829 8.07166 10.4247 8.0102Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nLinkIcon.displayName = \"LinkIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,yBAAW,4QAAA,CAAA,OAAU,MAChC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6781, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/trash-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const TrashIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 5V4C7 3.17477 7.40255 2.43324 7.91789 1.91789C8.43324 1.40255 9.17477 1 10 1H14C14.8252 1 15.5668 1.40255 16.0821 1.91789C16.5975 2.43324 17 3.17477 17 4V5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H20V20C20 20.8252 19.5975 21.5668 19.0821 22.0821C18.5668 22.5975 17.8252 23 17 23H7C6.17477 23 5.43324 22.5975 4.91789 22.0821C4.40255 21.5668 4 20.8252 4 20V7H3C2.44772 7 2 6.55228 2 6C2 5.44772 2.44772 5 3 5H7ZM9 4C9 3.82523 9.09745 3.56676 9.33211 3.33211C9.56676 3.09745 9.82523 3 10 3H14C14.1748 3 14.4332 3.09745 14.6679 3.33211C14.9025 3.56676 15 3.82523 15 4V5H9V4ZM6 7V20C6 20.1748 6.09745 20.4332 6.33211 20.6679C6.56676 20.9025 6.82523 21 7 21H17C17.1748 21 17.4332 20.9025 17.6679 20.6679C17.9025 20.4332 18 20.1748 18 20V7H6Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nTrashIcon.displayName = \"TrashIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,0BAAY,4QAAA,CAAA,OAAU,MACjC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 6828, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/link-popover/use-link-popover.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Icons ---\nimport { LinkIcon } from \"@/components/tiptap-icons/link-icon\"\n\n// --- Lib ---\nimport { isMarkInSchema, sanitizeUrl } from \"@/lib/tiptap-utils\"\n\n/**\n * Configuration for the link popover functionality\n */\nexport interface UseLinkPopoverConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * Whether to hide the link popover when not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called when the link is set.\n   */\n  onSetLink?: () => void\n}\n\n/**\n * Configuration for the link handler functionality\n */\nexport interface LinkHandlerProps {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor: Editor | null\n  /**\n   * Callback function called when the link is set.\n   */\n  onSetLink?: () => void\n}\n\n/**\n * Checks if a link can be set in the current editor state\n */\nexport function canSetLink(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  return editor.can().setMark(\"link\")\n}\n\n/**\n * Checks if a link is currently active in the editor\n */\nexport function isLinkActive(editor: Editor | null): boolean {\n  if (!editor || !editor.isEditable) return false\n  return editor.isActive(\"link\")\n}\n\n/**\n * Determines if the link button should be shown\n */\nexport function shouldShowLinkButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, hideWhenUnavailable } = props\n\n  const linkInSchema = isMarkInSchema(\"link\", editor)\n\n  if (!linkInSchema || !editor) {\n    return false\n  }\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canSetLink(editor)\n  }\n\n  return true\n}\n\n/**\n * Custom hook for handling link operations in a Tiptap editor\n */\nexport function useLinkHandler(props: LinkHandlerProps) {\n  const { editor, onSetLink } = props\n  const [url, setUrl] = React.useState<string | null>(null)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    // Get URL immediately on mount\n    const { href } = editor.getAttributes(\"link\")\n\n    if (isLinkActive(editor) && url === null) {\n      setUrl(href || \"\")\n    }\n  }, [editor, url])\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const updateLinkState = () => {\n      const { href } = editor.getAttributes(\"link\")\n      setUrl(href || \"\")\n    }\n\n    editor.on(\"selectionUpdate\", updateLinkState)\n    return () => {\n      editor.off(\"selectionUpdate\", updateLinkState)\n    }\n  }, [editor])\n\n  const setLink = React.useCallback(() => {\n    if (!url || !editor) return\n\n    const { selection } = editor.state\n    const isEmpty = selection.empty\n\n    let chain = editor.chain().focus()\n\n    chain = chain.extendMarkRange(\"link\").setLink({ href: url })\n\n    if (isEmpty) {\n      chain = chain.insertContent({ type: \"text\", text: url })\n    }\n\n    chain.run()\n\n    setUrl(null)\n\n    onSetLink?.()\n  }, [editor, onSetLink, url])\n\n  const removeLink = React.useCallback(() => {\n    if (!editor) return\n    editor\n      .chain()\n      .focus()\n      .extendMarkRange(\"link\")\n      .unsetLink()\n      .setMeta(\"preventAutolink\", true)\n      .run()\n    setUrl(\"\")\n  }, [editor])\n\n  const openLink = React.useCallback(\n    (target: string = \"_blank\", features: string = \"noopener,noreferrer\") => {\n      if (!url) return\n\n      const safeUrl = sanitizeUrl(url, window.location.href)\n      if (safeUrl !== \"#\") {\n        window.open(safeUrl, target, features)\n      }\n    },\n    [url]\n  )\n\n  return {\n    url: url || \"\",\n    setUrl,\n    setLink,\n    removeLink,\n    openLink,\n  }\n}\n\n/**\n * Custom hook for link popover state management\n */\nexport function useLinkState(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n}) {\n  const { editor, hideWhenUnavailable = false } = props\n\n  const canSet = canSetLink(editor)\n  const isActive = isLinkActive(editor)\n\n  const [isVisible, setIsVisible] = React.useState(false)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(\n        shouldShowLinkButton({\n          editor,\n          hideWhenUnavailable,\n        })\n      )\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable])\n\n  return {\n    isVisible,\n    canSet,\n    isActive,\n  }\n}\n\n/**\n * Main hook that provides link popover functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MyLinkButton() {\n *   const { isVisible, canSet, isActive, Icon, label } = useLinkPopover()\n *\n *   if (!isVisible) return null\n *\n *   return <button disabled={!canSet}>Link</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedLinkButton() {\n *   const { isVisible, canSet, isActive, Icon, label } = useLinkPopover({\n *     editor: myEditor,\n *     hideWhenUnavailable: true,\n *     onSetLink: () => console.log('Link set!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       disabled={!canSet}\n *       aria-label={label}\n *       aria-pressed={isActive}\n *     >\n *       <Icon />\n *       {label}\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useLinkPopover(config?: UseLinkPopoverConfig) {\n  const {\n    editor: providedEditor,\n    hideWhenUnavailable = false,\n    onSetLink,\n  } = config || {}\n\n  const { editor } = useTiptapEditor(providedEditor)\n\n  const { isVisible, canSet, isActive } = useLinkState({\n    editor,\n    hideWhenUnavailable,\n  })\n\n  const linkHandler = useLinkHandler({\n    editor,\n    onSetLink,\n  })\n\n  return {\n    isVisible,\n    canSet,\n    isActive,\n    label: \"Link\",\n    Icon: LinkIcon,\n    ...linkHandler,\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7031, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/input/input.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/tiptap-utils\"\nimport \"@/components/tiptap-ui-primitive/input/input.scss\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input type={type} className={cn(\"tiptap-input\", className)} {...props} />\n  )\n}\n\nfunction InputGroup({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div className={cn(\"tiptap-input-group\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\nexport { Input, InputGroup }\n"],"names":[],"mappings":";;;;;AAGA;AAHA;;;;AAMA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,4SAAC;QAAM,MAAM;QAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,gBAAgB;QAAa,GAAG,KAAK;;;;;;AAE1E;KAJS;AAMT,SAAS,WAAW,KAIU;QAJV,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACyB,GAJV;IAKlB,qBACE,4SAAC;QAAI,WAAW,CAAA,GAAA,yHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QAAa,GAAG,KAAK;kBAC3D;;;;;;AAGP;MAVS","debugId":null}},
    {"offset": {"line": 7080, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui-primitive/input/index.tsx"],"sourcesContent":["export * from \"./input\"\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 7099, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/link-popover/link-popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Icons ---\nimport { CornerDownLeftIcon } from \"@/components/tiptap-icons/corner-down-left-icon\"\nimport { ExternalLinkIcon } from \"@/components/tiptap-icons/external-link-icon\"\nimport { LinkIcon } from \"@/components/tiptap-icons/link-icon\"\nimport { TrashIcon } from \"@/components/tiptap-icons/trash-icon\"\n\n// --- Tiptap UI ---\nimport type { UseLinkPopoverConfig } from \"@/components/tiptap-ui/link-popover\"\nimport { useLinkPopover } from \"@/components/tiptap-ui/link-popover\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button, ButtonGroup } from \"@/components/tiptap-ui-primitive/button\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/tiptap-ui-primitive/popover\"\nimport { Separator } from \"@/components/tiptap-ui-primitive/separator\"\nimport {\n  Card,\n  CardBody,\n  CardItemGroup,\n} from \"@/components/tiptap-ui-primitive/card\"\nimport { Input, InputGroup } from \"@/components/tiptap-ui-primitive/input\"\n\nexport interface LinkMainProps {\n  /**\n   * The URL to set for the link.\n   */\n  url: string\n  /**\n   * Function to update the URL state.\n   */\n  setUrl: React.Dispatch<React.SetStateAction<string | null>>\n  /**\n   * Function to set the link in the editor.\n   */\n  setLink: () => void\n  /**\n   * Function to remove the link from the editor.\n   */\n  removeLink: () => void\n  /**\n   * Function to open the link.\n   */\n  openLink: () => void\n  /**\n   * Whether the link is currently active in the editor.\n   */\n  isActive: boolean\n}\n\nexport interface LinkPopoverProps\n  extends Omit<ButtonProps, \"type\">,\n    UseLinkPopoverConfig {\n  /**\n   * Callback for when the popover opens or closes.\n   */\n  onOpenChange?: (isOpen: boolean) => void\n  /**\n   * Whether to automatically open the popover when a link is active.\n   * @default true\n   */\n  autoOpenOnLinkActive?: boolean\n}\n\n/**\n * Link button component for triggering the link popover\n */\nexport const LinkButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, children, ...props }, ref) => {\n    return (\n      <Button\n        type=\"button\"\n        className={className}\n        data-style=\"ghost\"\n        role=\"button\"\n        tabIndex={-1}\n        aria-label=\"Link\"\n        tooltip=\"Link\"\n        ref={ref}\n        {...props}\n      >\n        {children || <LinkIcon className=\"tiptap-button-icon\" />}\n      </Button>\n    )\n  }\n)\n\nLinkButton.displayName = \"LinkButton\"\n\n/**\n * Main content component for the link popover\n */\nconst LinkMain: React.FC<LinkMainProps> = ({\n  url,\n  setUrl,\n  setLink,\n  removeLink,\n  openLink,\n  isActive,\n}) => {\n  const isMobile = useIsMobile()\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault()\n      setLink()\n    }\n  }\n\n  return (\n    <Card\n      style={{\n        ...(isMobile ? { boxShadow: \"none\", border: 0 } : {}),\n      }}\n    >\n      <CardBody\n        style={{\n          ...(isMobile ? { padding: 0 } : {}),\n        }}\n      >\n        <CardItemGroup orientation=\"horizontal\">\n          <InputGroup>\n            <Input\n              type=\"url\"\n              placeholder=\"Paste a link...\"\n              value={url}\n              onChange={(e) => setUrl(e.target.value)}\n              onKeyDown={handleKeyDown}\n              autoFocus\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n            />\n          </InputGroup>\n\n          <ButtonGroup orientation=\"horizontal\">\n            <Button\n              type=\"button\"\n              onClick={setLink}\n              title=\"Apply link\"\n              disabled={!url && !isActive}\n              data-style=\"ghost\"\n            >\n              <CornerDownLeftIcon className=\"tiptap-button-icon\" />\n            </Button>\n          </ButtonGroup>\n\n          <Separator />\n\n          <ButtonGroup orientation=\"horizontal\">\n            <Button\n              type=\"button\"\n              onClick={openLink}\n              title=\"Open in new window\"\n              disabled={!url && !isActive}\n              data-style=\"ghost\"\n            >\n              <ExternalLinkIcon className=\"tiptap-button-icon\" />\n            </Button>\n\n            <Button\n              type=\"button\"\n              onClick={removeLink}\n              title=\"Remove link\"\n              disabled={!url && !isActive}\n              data-style=\"ghost\"\n            >\n              <TrashIcon className=\"tiptap-button-icon\" />\n            </Button>\n          </ButtonGroup>\n        </CardItemGroup>\n      </CardBody>\n    </Card>\n  )\n}\n\n/**\n * Link content component for standalone use\n */\nexport const LinkContent: React.FC<{\n  editor?: Editor | null\n}> = ({ editor }) => {\n  const linkPopover = useLinkPopover({\n    editor,\n  })\n\n  return <LinkMain {...linkPopover} />\n}\n\n/**\n * Link popover component for Tiptap editors.\n *\n * For custom popover implementations, use the `useLinkPopover` hook instead.\n */\nexport const LinkPopover = React.forwardRef<\n  HTMLButtonElement,\n  LinkPopoverProps\n>(\n  (\n    {\n      editor: providedEditor,\n      hideWhenUnavailable = false,\n      onSetLink,\n      onOpenChange,\n      autoOpenOnLinkActive = true,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const [isOpen, setIsOpen] = React.useState(false)\n\n    const {\n      isVisible,\n      canSet,\n      isActive,\n      url,\n      setUrl,\n      setLink,\n      removeLink,\n      openLink,\n      label,\n      Icon,\n    } = useLinkPopover({\n      editor,\n      hideWhenUnavailable,\n      onSetLink,\n    })\n\n    const handleOnOpenChange = React.useCallback(\n      (nextIsOpen: boolean) => {\n        setIsOpen(nextIsOpen)\n        onOpenChange?.(nextIsOpen)\n      },\n      [onOpenChange]\n    )\n\n    const handleSetLink = React.useCallback(() => {\n      setLink()\n      setIsOpen(false)\n    }, [setLink])\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        setIsOpen(!isOpen)\n      },\n      [onClick, isOpen]\n    )\n\n    React.useEffect(() => {\n      if (autoOpenOnLinkActive && isActive) {\n        setIsOpen(true)\n      }\n    }, [autoOpenOnLinkActive, isActive])\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Popover open={isOpen} onOpenChange={handleOnOpenChange}>\n        <PopoverTrigger asChild>\n          <LinkButton\n            disabled={!canSet}\n            data-active-state={isActive ? \"on\" : \"off\"}\n            data-disabled={!canSet}\n            aria-label={label}\n            aria-pressed={isActive}\n            onClick={handleClick}\n            {...buttonProps}\n            ref={ref}\n          >\n            {children ?? <Icon className=\"tiptap-button-icon\" />}\n          </LinkButton>\n        </PopoverTrigger>\n\n        <PopoverContent>\n          <LinkMain\n            url={url}\n            setUrl={setUrl}\n            setLink={handleSetLink}\n            removeLink={removeLink}\n            openLink={openLink}\n            isActive={isActive}\n          />\n        </PopoverContent>\n      </Popover>\n    )\n  }\n)\n\nLinkPopover.displayName = \"LinkPopover\"\n\nexport default LinkPopover\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7471, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/link-popover/index.tsx"],"sourcesContent":["export * from \"./link-popover\"\nexport * from \"./use-link-popover\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 7493, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/bold-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const BoldIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6 2.5C5.17157 2.5 4.5 3.17157 4.5 4V20C4.5 20.8284 5.17157 21.5 6 21.5H15C16.4587 21.5 17.8576 20.9205 18.8891 19.8891C19.9205 18.8576 20.5 17.4587 20.5 16C20.5 14.5413 19.9205 13.1424 18.8891 12.1109C18.6781 11.9 18.4518 11.7079 18.2128 11.5359C19.041 10.5492 19.5 9.29829 19.5 8C19.5 6.54131 18.9205 5.14236 17.8891 4.11091C16.8576 3.07946 15.4587 2.5 14 2.5H6ZM14 10.5C14.663 10.5 15.2989 10.2366 15.7678 9.76777C16.2366 9.29893 16.5 8.66304 16.5 8C16.5 7.33696 16.2366 6.70107 15.7678 6.23223C15.2989 5.76339 14.663 5.5 14 5.5H7.5V10.5H14ZM7.5 18.5V13.5H15C15.663 13.5 16.2989 13.7634 16.7678 14.2322C17.2366 14.7011 17.5 15.337 17.5 16C17.5 16.663 17.2366 17.2989 16.7678 17.7678C16.2989 18.2366 15.663 18.5 15 18.5H7.5Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nBoldIcon.displayName = \"BoldIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,yBAAW,4QAAA,CAAA,OAAU,MAChC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7540, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/code2-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const Code2Icon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M15.4545 4.2983C15.6192 3.77115 15.3254 3.21028 14.7983 3.04554C14.2712 2.88081 13.7103 3.1746 13.5455 3.70175L8.54554 19.7017C8.38081 20.2289 8.6746 20.7898 9.20175 20.9545C9.72889 21.1192 10.2898 20.8254 10.4545 20.2983L15.4545 4.2983Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M6.70711 7.29289C7.09763 7.68342 7.09763 8.31658 6.70711 8.70711L3.41421 12L6.70711 15.2929C7.09763 15.6834 7.09763 16.3166 6.70711 16.7071C6.31658 17.0976 5.68342 17.0976 5.29289 16.7071L1.29289 12.7071C0.902369 12.3166 0.902369 11.6834 1.29289 11.2929L5.29289 7.29289C5.68342 6.90237 6.31658 6.90237 6.70711 7.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M17.2929 7.29289C17.6834 6.90237 18.3166 6.90237 18.7071 7.29289L22.7071 11.2929C23.0976 11.6834 23.0976 12.3166 22.7071 12.7071L18.7071 16.7071C18.3166 17.0976 17.6834 17.0976 17.2929 16.7071C16.9024 16.3166 16.9024 15.6834 17.2929 15.2929L20.5858 12L17.2929 8.70711C16.9024 8.31658 16.9024 7.68342 17.2929 7.29289Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nCode2Icon.displayName = \"Code2Icon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,0BAAY,4QAAA,CAAA,OAAU,MACjC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7603, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/italic-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ItalicIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M15.0222 3H19C19.5523 3 20 3.44772 20 4C20 4.55228 19.5523 5 19 5H15.693L10.443 19H14C14.5523 19 15 19.4477 15 20C15 20.5523 14.5523 21 14 21H9.02418C9.00802 21.0004 8.99181 21.0004 8.97557 21H5C4.44772 21 4 20.5523 4 20C4 19.4477 4.44772 19 5 19H8.30704L13.557 5H10C9.44772 5 9 4.55228 9 4C9 3.44772 9.44772 3 10 3H14.9782C14.9928 2.99968 15.0075 2.99967 15.0222 3Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nItalicIcon.displayName = \"ItalicIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,2BAAa,4QAAA,CAAA,OAAU,MAClC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7648, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/strike-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const StrikeIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M9.00039 3H16.0001C16.5524 3 17.0001 3.44772 17.0001 4C17.0001 4.55229 16.5524 5 16.0001 5H9.00011C8.68006 4.99983 8.36412 5.07648 8.07983 5.22349C7.79555 5.37051 7.55069 5.5836 7.36585 5.84487C7.181 6.10614 7.06155 6.40796 7.01754 6.72497C6.97352 7.04198 7.00623 7.36492 7.11292 7.66667C7.29701 8.18737 7.02414 8.75872 6.50344 8.94281C5.98274 9.1269 5.4114 8.85403 5.2273 8.33333C5.01393 7.72984 4.94851 7.08396 5.03654 6.44994C5.12456 5.81592 5.36346 5.21229 5.73316 4.68974C6.10285 4.1672 6.59256 3.74101 7.16113 3.44698C7.72955 3.15303 8.36047 2.99975 9.00039 3Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M18 13H20C20.5523 13 21 12.5523 21 12C21 11.4477 20.5523 11 20 11H4C3.44772 11 3 11.4477 3 12C3 12.5523 3.44772 13 4 13H14C14.7956 13 15.5587 13.3161 16.1213 13.8787C16.6839 14.4413 17 15.2044 17 16C17 16.7956 16.6839 17.5587 16.1213 18.1213C15.5587 18.6839 14.7956 19 14 19H6C5.44772 19 5 19.4477 5 20C5 20.5523 5.44772 21 6 21H14C15.3261 21 16.5979 20.4732 17.5355 19.5355C18.4732 18.5979 19 17.3261 19 16C19 14.9119 18.6453 13.8604 18 13Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nStrikeIcon.displayName = \"StrikeIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,2BAAa,4QAAA,CAAA,OAAU,MAClC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7703, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/subscript-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const SubscriptIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.29289 7.29289C3.68342 6.90237 4.31658 6.90237 4.70711 7.29289L12.7071 15.2929C13.0976 15.6834 13.0976 16.3166 12.7071 16.7071C12.3166 17.0976 11.6834 17.0976 11.2929 16.7071L3.29289 8.70711C2.90237 8.31658 2.90237 7.68342 3.29289 7.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12.7071 7.29289C13.0976 7.68342 13.0976 8.31658 12.7071 8.70711L4.70711 16.7071C4.31658 17.0976 3.68342 17.0976 3.29289 16.7071C2.90237 16.3166 2.90237 15.6834 3.29289 15.2929L11.2929 7.29289C11.6834 6.90237 12.3166 6.90237 12.7071 7.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M17.4079 14.3995C18.0284 14.0487 18.7506 13.9217 19.4536 14.0397C20.1566 14.1578 20.7977 14.5138 21.2696 15.0481L21.2779 15.0574L21.2778 15.0575C21.7439 15.5988 22 16.2903 22 17C22 18.0823 21.3962 18.8401 20.7744 19.3404C20.194 19.8073 19.4858 20.141 18.9828 20.378C18.9638 20.387 18.9451 20.3958 18.9266 20.4045C18.4473 20.6306 18.2804 20.7817 18.1922 20.918C18.1773 20.9412 18.1619 20.9681 18.1467 21H21C21.5523 21 22 21.4477 22 22C22 22.5523 21.5523 23 21 23H17C16.4477 23 16 22.5523 16 22C16 21.1708 16.1176 20.4431 16.5128 19.832C16.9096 19.2184 17.4928 18.8695 18.0734 18.5956C18.6279 18.334 19.138 18.0901 19.5207 17.7821C19.8838 17.49 20 17.2477 20 17C20 16.7718 19.9176 16.5452 19.7663 16.3672C19.5983 16.1792 19.3712 16.0539 19.1224 16.0121C18.8722 15.9701 18.6152 16.015 18.3942 16.1394C18.1794 16.2628 18.0205 16.4549 17.9422 16.675C17.7572 17.1954 17.1854 17.4673 16.665 17.2822C16.1446 17.0972 15.8728 16.5254 16.0578 16.005C16.2993 15.3259 16.7797 14.7584 17.4039 14.4018L17.4079 14.3995L17.4079 14.3995Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nSubscriptIcon.displayName = \"SubscriptIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,8BAAgB,4QAAA,CAAA,OAAU,MACrC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7772, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/superscript-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const SuperscriptIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12.7071 7.29289C13.0976 7.68342 13.0976 8.31658 12.7071 8.70711L4.70711 16.7071C4.31658 17.0976 3.68342 17.0976 3.29289 16.7071C2.90237 16.3166 2.90237 15.6834 3.29289 15.2929L11.2929 7.29289C11.6834 6.90237 12.3166 6.90237 12.7071 7.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M3.29289 7.29289C3.68342 6.90237 4.31658 6.90237 4.70711 7.29289L12.7071 15.2929C13.0976 15.6834 13.0976 16.3166 12.7071 16.7071C12.3166 17.0976 11.6834 17.0976 11.2929 16.7071L3.29289 8.70711C2.90237 8.31658 2.90237 7.68342 3.29289 7.29289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M17.405 1.40657C18.0246 1.05456 18.7463 0.92634 19.4492 1.04344C20.1521 1.16054 20.7933 1.51583 21.2652 2.0497L21.2697 2.05469L21.2696 2.05471C21.7431 2.5975 22 3.28922 22 4.00203C22 5.08579 21.3952 5.84326 20.7727 6.34289C20.1966 6.80531 19.4941 7.13675 18.9941 7.37261C18.9714 7.38332 18.9491 7.39383 18.9273 7.40415C18.4487 7.63034 18.2814 7.78152 18.1927 7.91844C18.1778 7.94155 18.1625 7.96834 18.1473 8.00003H21C21.5523 8.00003 22 8.44774 22 9.00003C22 9.55231 21.5523 10 21 10H17C16.4477 10 16 9.55231 16 9.00003C16 8.17007 16.1183 7.44255 16.5138 6.83161C16.9107 6.21854 17.4934 5.86971 18.0728 5.59591C18.6281 5.33347 19.1376 5.09075 19.5208 4.78316C19.8838 4.49179 20 4.25026 20 4.00203C20 3.77192 19.9178 3.54865 19.7646 3.37182C19.5968 3.18324 19.3696 3.05774 19.1205 3.01625C18.8705 2.97459 18.6137 3.02017 18.3933 3.14533C18.1762 3.26898 18.0191 3.45826 17.9406 3.67557C17.7531 4.19504 17.18 4.46414 16.6605 4.27662C16.141 4.0891 15.8719 3.51596 16.0594 2.99649C16.303 2.3219 16.7817 1.76125 17.4045 1.40689L17.405 1.40657Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nSuperscriptIcon.displayName = \"SuperscriptIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7841, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/underline-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const UnderlineIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 4C7 3.44772 6.55228 3 6 3C5.44772 3 5 3.44772 5 4V10C5 11.8565 5.7375 13.637 7.05025 14.9497C8.36301 16.2625 10.1435 17 12 17C13.8565 17 15.637 16.2625 16.9497 14.9497C18.2625 13.637 19 11.8565 19 10V4C19 3.44772 18.5523 3 18 3C17.4477 3 17 3.44772 17 4V10C17 11.3261 16.4732 12.5979 15.5355 13.5355C14.5979 14.4732 13.3261 15 12 15C10.6739 15 9.40215 14.4732 8.46447 13.5355C7.52678 12.5979 7 11.3261 7 10V4ZM4 19C3.44772 19 3 19.4477 3 20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20C21 19.4477 20.5523 19 20 19H4Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nUnderlineIcon.displayName = \"UnderlineIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,8BAAgB,4QAAA,CAAA,OAAU,MACrC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7888, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/mark-button/use-mark.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport type { Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport { isMarkInSchema, isNodeTypeSelected } from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { BoldIcon } from \"@/components/tiptap-icons/bold-icon\"\nimport { Code2Icon } from \"@/components/tiptap-icons/code2-icon\"\nimport { ItalicIcon } from \"@/components/tiptap-icons/italic-icon\"\nimport { StrikeIcon } from \"@/components/tiptap-icons/strike-icon\"\nimport { SubscriptIcon } from \"@/components/tiptap-icons/subscript-icon\"\nimport { SuperscriptIcon } from \"@/components/tiptap-icons/superscript-icon\"\nimport { UnderlineIcon } from \"@/components/tiptap-icons/underline-icon\"\n\nexport type Mark =\n  | \"bold\"\n  | \"italic\"\n  | \"strike\"\n  | \"code\"\n  | \"underline\"\n  | \"superscript\"\n  | \"subscript\"\n\n/**\n * Configuration for the mark functionality\n */\nexport interface UseMarkConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The type of mark to toggle\n   */\n  type: Mark\n  /**\n   * Whether the button should hide when mark is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful mark toggle.\n   */\n  onToggled?: () => void\n}\n\nexport const markIcons = {\n  bold: BoldIcon,\n  italic: ItalicIcon,\n  underline: UnderlineIcon,\n  strike: StrikeIcon,\n  code: Code2Icon,\n  superscript: SuperscriptIcon,\n  subscript: SubscriptIcon,\n}\n\nexport const MARK_SHORTCUT_KEYS: Record<Mark, string> = {\n  bold: \"mod+b\",\n  italic: \"mod+i\",\n  underline: \"mod+u\",\n  strike: \"mod+shift+s\",\n  code: \"mod+e\",\n  superscript: \"mod+.\",\n  subscript: \"mod+,\",\n}\n\n/**\n * Checks if a mark can be toggled in the current editor state\n */\nexport function canToggleMark(editor: Editor | null, type: Mark): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!isMarkInSchema(type, editor) || isNodeTypeSelected(editor, [\"image\"]))\n    return false\n\n  return editor.can().toggleMark(type)\n}\n\n/**\n * Checks if a mark is currently active\n */\nexport function isMarkActive(editor: Editor | null, type: Mark): boolean {\n  if (!editor || !editor.isEditable) return false\n  return editor.isActive(type)\n}\n\n/**\n * Toggles a mark in the editor\n */\nexport function toggleMark(editor: Editor | null, type: Mark): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canToggleMark(editor, type)) return false\n\n  return editor.chain().focus().toggleMark(type).run()\n}\n\n/**\n * Determines if the mark button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  type: Mark\n  hideWhenUnavailable: boolean\n}): boolean {\n  const { editor, type, hideWhenUnavailable } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isMarkInSchema(type, editor)) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canToggleMark(editor, type)\n  }\n\n  return true\n}\n\n/**\n * Gets the formatted mark name\n */\nexport function getFormattedMarkName(type: Mark): string {\n  return type.charAt(0).toUpperCase() + type.slice(1)\n}\n\n/**\n * Custom hook that provides mark functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MySimpleBoldButton() {\n *   const { isVisible, handleMark } = useMark({ type: \"bold\" })\n *\n *   if (!isVisible) return null\n *\n *   return <button onClick={handleMark}>Bold</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedItalicButton() {\n *   const { isVisible, handleMark, label, isActive } = useMark({\n *     editor: myEditor,\n *     type: \"italic\",\n *     hideWhenUnavailable: true,\n *     onToggled: () => console.log('Mark toggled!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleMark}\n *       aria-pressed={isActive}\n *       aria-label={label}\n *     >\n *       Italic\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useMark(config: UseMarkConfig) {\n  const {\n    editor: providedEditor,\n    type,\n    hideWhenUnavailable = false,\n    onToggled,\n  } = config\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canToggle = canToggleMark(editor, type)\n  const isActive = isMarkActive(editor, type)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, type, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, type, hideWhenUnavailable])\n\n  const handleMark = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = toggleMark(editor, type)\n    if (success) {\n      onToggled?.()\n    }\n    return success\n  }, [editor, type, onToggled])\n\n  useHotkeys(\n    MARK_SHORTCUT_KEYS[type],\n    (event) => {\n      event.preventDefault()\n      handleMark()\n    },\n    {\n      enabled: isVisible && canToggle,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleMark,\n    canToggle,\n    label: getFormattedMarkName(type),\n    shortcutKeys: MARK_SHORTCUT_KEYS[type],\n    Icon: markIcons[type],\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AAGA,gBAAgB;AAChB;AACA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AApBA;;;;;;;;;;;;;AAsDO,MAAM,YAAY;IACvB,MAAM,iJAAA,CAAA,WAAQ;IACd,QAAQ,mJAAA,CAAA,aAAU;IAClB,WAAW,sJAAA,CAAA,gBAAa;IACxB,QAAQ,mJAAA,CAAA,aAAU;IAClB,MAAM,kJAAA,CAAA,YAAS;IACf,aAAa,wJAAA,CAAA,kBAAe;IAC5B,WAAW,sJAAA,CAAA,gBAAa;AAC1B;AAEO,MAAM,qBAA2C;IACtD,MAAM;IACN,QAAQ;IACR,WAAW;IACX,QAAQ;IACR,MAAM;IACN,aAAa;IACb,WAAW;AACb;AAKO,SAAS,cAAc,MAAqB,EAAE,IAAU;IAC7D,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;QAAC;KAAQ,GACvE,OAAO;IAET,OAAO,OAAO,GAAG,GAAG,UAAU,CAAC;AACjC;AAKO,SAAS,aAAa,MAAqB,EAAE,IAAU;IAC5D,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,OAAO,OAAO,QAAQ,CAAC;AACzB;AAKO,SAAS,WAAW,MAAqB,EAAE,IAAU;IAC1D,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,cAAc,QAAQ,OAAO,OAAO;IAEzC,OAAO,OAAO,KAAK,GAAG,KAAK,GAAG,UAAU,CAAC,MAAM,GAAG;AACpD;AAKO,SAAS,iBAAiB,KAIhC;IACC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAmB,EAAE,GAAG;IAE9C,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,SAAS,OAAO;IAE1C,IAAI,uBAAuB,CAAC,OAAO,QAAQ,CAAC,SAAS;QACnD,OAAO,cAAc,QAAQ;IAC/B;IAEA,OAAO;AACT;AAKO,SAAS,qBAAqB,IAAU;IAC7C,OAAO,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC;AACnD;AAuCO,SAAS,QAAQ,MAAqB;;IAC3C,MAAM,EACJ,QAAQ,cAAc,EACtB,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACV,GAAG;IAEJ,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,4QAAA,CAAA,WAAc,CAAU;IAC1D,MAAM,YAAY,cAAc,QAAQ;IACxC,MAAM,WAAW,aAAa,QAAQ;IAEtC,4QAAA,CAAA,YAAe;6BAAC;YACd,IAAI,CAAC,QAAQ;YAEb,MAAM;2DAAwB;oBAC5B,aAAa,iBAAiB;wBAAE;wBAAQ;wBAAM;oBAAoB;gBACpE;;YAEA;YAEA,OAAO,EAAE,CAAC,mBAAmB;YAE7B;qCAAO;oBACL,OAAO,GAAG,CAAC,mBAAmB;gBAChC;;QACF;4BAAG;QAAC;QAAQ;QAAM;KAAoB;IAEtC,MAAM,aAAa,4QAAA,CAAA,cAAiB;2CAAC;YACnC,IAAI,CAAC,QAAQ,OAAO;YAEpB,MAAM,UAAU,WAAW,QAAQ;YACnC,IAAI,SAAS;gBACX,sBAAA,gCAAA;YACF;YACA,OAAO;QACT;0CAAG;QAAC;QAAQ;QAAM;KAAU;IAE5B,CAAA,GAAA,6SAAA,CAAA,aAAU,AAAD,EACP,kBAAkB,CAAC,KAAK;8BACxB,CAAC;YACC,MAAM,cAAc;YACpB;QACF;6BACA;QACE,SAAS,aAAa;QACtB,yBAAyB,CAAC;QAC1B,kBAAkB;IACpB;IAGF,OAAO;QACL;QACA;QACA;QACA;QACA,OAAO,qBAAqB;QAC5B,cAAc,kBAAkB,CAAC,KAAK;QACtC,MAAM,SAAS,CAAC,KAAK;IACvB;AACF;GA9DgB;;QAQK,mIAAA,CAAA,kBAAe;QACjB,yHAAA,CAAA,cAAW;QA+B5B,6SAAA,CAAA,aAAU","debugId":null}},
    {"offset": {"line": 8056, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/mark-button/mark-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Tiptap UI ---\nimport type { Mark, UseMarkConfig } from \"@/components/tiptap-ui/mark-button\"\nimport { MARK_SHORTCUT_KEYS, useMark } from \"@/components/tiptap-ui/mark-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\nexport interface MarkButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseMarkConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function MarkShortcutBadge({\n  type,\n  shortcutKeys = MARK_SHORTCUT_KEYS[type],\n}: {\n  type: Mark\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for toggling marks in a Tiptap editor.\n *\n * For custom button implementations, use the `useMark` hook instead.\n */\nexport const MarkButton = React.forwardRef<HTMLButtonElement, MarkButtonProps>(\n  (\n    {\n      editor: providedEditor,\n      type,\n      text,\n      hideWhenUnavailable = false,\n      onToggled,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      handleMark,\n      label,\n      canToggle,\n      isActive,\n      Icon,\n      shortcutKeys,\n    } = useMark({\n      editor,\n      type,\n      hideWhenUnavailable,\n      onToggled,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleMark()\n      },\n      [handleMark, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        disabled={!canToggle}\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        data-disabled={!canToggle}\n        role=\"button\"\n        tabIndex={-1}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip={label}\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <MarkShortcutBadge type={type} shortcutKeys={shortcutKeys} />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nMarkButton.displayName = \"MarkButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AAIA;AAAA;AAIA;AAAA;AACA;AAAA;;;AAjBA;;;;;;;AAiCO,SAAS,kBAAkB,KAMjC;QANiC,EAChC,IAAI,EACJ,eAAe,8JAAA,CAAA,qBAAkB,CAAC,KAAK,EAIxC,GANiC;IAOhC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KARgB;AAeT,MAAM,2BAAa,GAAA,4QAAA,CAAA,aAAgB,UACxC,QAYE;QAXA,EACE,QAAQ,cAAc,EACtB,IAAI,EACJ,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,UAAU,EACV,KAAK,EACL,SAAS,EACT,QAAQ,EACR,IAAI,EACJ,YAAY,EACb,GAAG,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE;QACV;QACA;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;+CACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;8CACA;QAAC;QAAY;KAAQ;IAGvB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,UAAU,CAAC;QACX,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,iBAAe,CAAC;QAChB,MAAK;QACL,UAAU,CAAC;QACX,cAAY;QACZ,gBAAc;QACd,SAAS;QACT,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBAAkB,MAAM;oBAAM,cAAc;;;;;;;;;;;;;AAMzD;;QAxDqB,mIAAA,CAAA,kBAAe;QAS9B,8JAAA,CAAA,UAAO;;;;QATQ,mIAAA,CAAA,kBAAe;QAS9B,8JAAA,CAAA,UAAO;;;;AAkDf,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8189, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/mark-button/index.tsx"],"sourcesContent":["export * from \"./mark-button\"\nexport * from \"./use-mark\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 8211, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/align-center-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const AlignCenterIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6 12C6 11.4477 6.44772 11 7 11H17C17.5523 11 18 11.4477 18 12C18 12.5523 17.5523 13 17 13H7C6.44772 13 6 12.5523 6 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4 18C4 17.4477 4.44772 17 5 17H19C19.5523 17 20 17.4477 20 18C20 18.5523 19.5523 19 19 19H5C4.44772 19 4 18.5523 4 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nAlignCenterIcon.displayName = \"AlignCenterIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,gCAAkB,4QAAA,CAAA,OAAU,MACvC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8280, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/align-justify-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const AlignJustifyIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.4477 2.44772 11 3 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H3C2.44772 13 2 12.5523 2 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 18C2 17.4477 2.44772 17 3 17H21C21.5523 17 22 17.4477 22 18C22 18.5523 21.5523 19 21 19H3C2.44772 19 2 18.5523 2 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nAlignJustifyIcon.displayName = \"AlignJustifyIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,iCAAmB,4QAAA,CAAA,OAAU,MACxC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8349, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/align-left-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const AlignLeftIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.4477 2.44772 11 3 11H15C15.5523 11 16 11.4477 16 12C16 12.5523 15.5523 13 15 13H3C2.44772 13 2 12.5523 2 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 18C2 17.4477 2.44772 17 3 17H17C17.5523 17 18 17.4477 18 18C18 18.5523 17.5523 19 17 19H3C2.44772 19 2 18.5523 2 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nAlignLeftIcon.displayName = \"AlignLeftIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,8BAAgB,4QAAA,CAAA,OAAU,MACrC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8418, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/align-right-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const AlignRightIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M8 12C8 11.4477 8.44772 11 9 11H21C21.5523 11 22 11.4477 22 12C22 12.5523 21.5523 13 21 13H9C8.44772 13 8 12.5523 8 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M6 18C6 17.4477 6.44772 17 7 17H21C21.5523 17 22 17.4477 22 18C22 18.5523 21.5523 19 21 19H7C6.44772 19 6 18.5523 6 18Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nAlignRightIcon.displayName = \"AlignRightIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,+BAAiB,4QAAA,CAAA,OAAU,MACtC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8487, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/text-align-button/use-text-align.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport type { ChainedCommands } from \"@tiptap/react\"\nimport { type Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport {\n  isExtensionAvailable,\n  isNodeTypeSelected,\n} from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { AlignCenterIcon } from \"@/components/tiptap-icons/align-center-icon\"\nimport { AlignJustifyIcon } from \"@/components/tiptap-icons/align-justify-icon\"\nimport { AlignLeftIcon } from \"@/components/tiptap-icons/align-left-icon\"\nimport { AlignRightIcon } from \"@/components/tiptap-icons/align-right-icon\"\n\nexport type TextAlign = \"left\" | \"center\" | \"right\" | \"justify\"\n\n/**\n * Configuration for the text align functionality\n */\nexport interface UseTextAlignConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The text alignment to apply.\n   */\n  align: TextAlign\n  /**\n   * Whether the button should hide when alignment is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful alignment change.\n   */\n  onAligned?: () => void\n}\n\nexport const TEXT_ALIGN_SHORTCUT_KEYS: Record<TextAlign, string> = {\n  left: \"mod+shift+l\",\n  center: \"mod+shift+e\",\n  right: \"mod+shift+r\",\n  justify: \"mod+shift+j\",\n}\n\nexport const textAlignIcons = {\n  left: AlignLeftIcon,\n  center: AlignCenterIcon,\n  right: AlignRightIcon,\n  justify: AlignJustifyIcon,\n}\n\nexport const textAlignLabels: Record<TextAlign, string> = {\n  left: \"Align left\",\n  center: \"Align center\",\n  right: \"Align right\",\n  justify: \"Align justify\",\n}\n\n/**\n * Checks if text alignment can be performed in the current editor state\n */\nexport function canSetTextAlign(\n  editor: Editor | null,\n  align: TextAlign\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (\n    !isExtensionAvailable(editor, \"textAlign\") ||\n    isNodeTypeSelected(editor, [\"image\"])\n  )\n    return false\n\n  return editor.can().setTextAlign(align)\n}\n\nexport function hasSetTextAlign(\n  commands: ChainedCommands\n): commands is ChainedCommands & {\n  setTextAlign: (align: TextAlign) => ChainedCommands\n} {\n  return \"setTextAlign\" in commands\n}\n\n/**\n * Checks if the text alignment is currently active\n */\nexport function isTextAlignActive(\n  editor: Editor | null,\n  align: TextAlign\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  return editor.isActive({ textAlign: align })\n}\n\n/**\n * Sets text alignment in the editor\n */\nexport function setTextAlign(editor: Editor | null, align: TextAlign): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canSetTextAlign(editor, align)) return false\n\n  const chain = editor.chain().focus()\n  if (hasSetTextAlign(chain)) {\n    return chain.setTextAlign(align).run()\n  }\n\n  return false\n}\n\n/**\n * Determines if the text align button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n  align: TextAlign\n}): boolean {\n  const { editor, hideWhenUnavailable, align } = props\n\n  if (!editor || !editor.isEditable) return false\n  if (!isExtensionAvailable(editor, \"textAlign\")) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canSetTextAlign(editor, align)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides text align functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MySimpleAlignButton() {\n *   const { isVisible, handleTextAlign } = useTextAlign({ align: \"center\" })\n *\n *   if (!isVisible) return null\n *\n *   return <button onClick={handleTextAlign}>Align Center</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedAlignButton() {\n *   const { isVisible, handleTextAlign, label, isActive } = useTextAlign({\n *     editor: myEditor,\n *     align: \"right\",\n *     hideWhenUnavailable: true,\n *     onAligned: () => console.log('Text aligned!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleTextAlign}\n *       aria-pressed={isActive}\n *       aria-label={label}\n *     >\n *       Align Right\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useTextAlign(config: UseTextAlignConfig) {\n  const {\n    editor: providedEditor,\n    align,\n    hideWhenUnavailable = false,\n    onAligned,\n  } = config\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canAlign = canSetTextAlign(editor, align)\n  const isActive = isTextAlignActive(editor, align)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleSelectionUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, align, hideWhenUnavailable }))\n    }\n\n    handleSelectionUpdate()\n\n    editor.on(\"selectionUpdate\", handleSelectionUpdate)\n\n    return () => {\n      editor.off(\"selectionUpdate\", handleSelectionUpdate)\n    }\n  }, [editor, hideWhenUnavailable, align])\n\n  const handleTextAlign = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = setTextAlign(editor, align)\n    if (success) {\n      onAligned?.()\n    }\n    return success\n  }, [editor, align, onAligned])\n\n  useHotkeys(\n    TEXT_ALIGN_SHORTCUT_KEYS[align],\n    (event) => {\n      event.preventDefault()\n      handleTextAlign()\n    },\n    {\n      enabled: isVisible && canAlign,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    isActive,\n    handleTextAlign,\n    canAlign,\n    label: textAlignLabels[align],\n    shortcutKeys: TEXT_ALIGN_SHORTCUT_KEYS[align],\n    Icon: textAlignIcons[align],\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;AAIA,gBAAgB;AAChB;AACA;AAEA,cAAc;AACd;AAKA,gBAAgB;AAChB;AACA;AACA;AACA;;AArBA;;;;;;;;;;AAgDO,MAAM,2BAAsD;IACjE,MAAM;IACN,QAAQ;IACR,OAAO;IACP,SAAS;AACX;AAEO,MAAM,iBAAiB;IAC5B,MAAM,0JAAA,CAAA,gBAAa;IACnB,QAAQ,4JAAA,CAAA,kBAAe;IACvB,OAAO,2JAAA,CAAA,iBAAc;IACrB,SAAS,6JAAA,CAAA,mBAAgB;AAC3B;AAEO,MAAM,kBAA6C;IACxD,MAAM;IACN,QAAQ;IACR,OAAO;IACP,SAAS;AACX;AAKO,SAAS,gBACd,MAAqB,EACrB,KAAgB;IAEhB,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IACE,CAAC,CAAA,GAAA,yHAAA,CAAA,uBAAoB,AAAD,EAAE,QAAQ,gBAC9B,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;QAAC;KAAQ,GAEpC,OAAO;IAET,OAAO,OAAO,GAAG,GAAG,YAAY,CAAC;AACnC;AAEO,SAAS,gBACd,QAAyB;IAIzB,OAAO,kBAAkB;AAC3B;AAKO,SAAS,kBACd,MAAqB,EACrB,KAAgB;IAEhB,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,OAAO,OAAO,QAAQ,CAAC;QAAE,WAAW;IAAM;AAC5C;AAKO,SAAS,aAAa,MAAqB,EAAE,KAAgB;IAClE,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,gBAAgB,QAAQ,QAAQ,OAAO;IAE5C,MAAM,QAAQ,OAAO,KAAK,GAAG,KAAK;IAClC,IAAI,gBAAgB,QAAQ;QAC1B,OAAO,MAAM,YAAY,CAAC,OAAO,GAAG;IACtC;IAEA,OAAO;AACT;AAKO,SAAS,iBAAiB,KAIhC;IACC,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,KAAK,EAAE,GAAG;IAE/C,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,CAAA,GAAA,yHAAA,CAAA,uBAAoB,AAAD,EAAE,QAAQ,cAAc,OAAO;IAEvD,IAAI,uBAAuB,CAAC,OAAO,QAAQ,CAAC,SAAS;QACnD,OAAO,gBAAgB,QAAQ;IACjC;IAEA,OAAO;AACT;AAuCO,SAAS,aAAa,MAA0B;;IACrD,MAAM,EACJ,QAAQ,cAAc,EACtB,KAAK,EACL,sBAAsB,KAAK,EAC3B,SAAS,EACV,GAAG;IAEJ,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,4QAAA,CAAA,WAAc,CAAU;IAC1D,MAAM,WAAW,gBAAgB,QAAQ;IACzC,MAAM,WAAW,kBAAkB,QAAQ;IAE3C,4QAAA,CAAA,YAAe;kCAAC;YACd,IAAI,CAAC,QAAQ;YAEb,MAAM;gEAAwB;oBAC5B,aAAa,iBAAiB;wBAAE;wBAAQ;wBAAO;oBAAoB;gBACrE;;YAEA;YAEA,OAAO,EAAE,CAAC,mBAAmB;YAE7B;0CAAO;oBACL,OAAO,GAAG,CAAC,mBAAmB;gBAChC;;QACF;iCAAG;QAAC;QAAQ;QAAqB;KAAM;IAEvC,MAAM,kBAAkB,4QAAA,CAAA,cAAiB;qDAAC;YACxC,IAAI,CAAC,QAAQ,OAAO;YAEpB,MAAM,UAAU,aAAa,QAAQ;YACrC,IAAI,SAAS;gBACX,sBAAA,gCAAA;YACF;YACA,OAAO;QACT;oDAAG;QAAC;QAAQ;QAAO;KAAU;IAE7B,CAAA,GAAA,6SAAA,CAAA,aAAU,AAAD,EACP,wBAAwB,CAAC,MAAM;mCAC/B,CAAC;YACC,MAAM,cAAc;YACpB;QACF;kCACA;QACE,SAAS,aAAa;QACtB,yBAAyB,CAAC;QAC1B,kBAAkB;IACpB;IAGF,OAAO;QACL;QACA;QACA;QACA;QACA,OAAO,eAAe,CAAC,MAAM;QAC7B,cAAc,wBAAwB,CAAC,MAAM;QAC7C,MAAM,cAAc,CAAC,MAAM;IAC7B;AACF;GA9DgB;;QAQK,mIAAA,CAAA,kBAAe;QACjB,yHAAA,CAAA,cAAW;QA+B5B,6SAAA,CAAA,aAAU","debugId":null}},
    {"offset": {"line": 8656, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/text-align-button/text-align-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Tiptap UI ---\nimport type {\n  TextAlign,\n  UseTextAlignConfig,\n} from \"@/components/tiptap-ui/text-align-button\"\nimport {\n  TEXT_ALIGN_SHORTCUT_KEYS,\n  useTextAlign,\n} from \"@/components/tiptap-ui/text-align-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\ntype IconProps = React.SVGProps<SVGSVGElement>\ntype IconComponent = ({ className, ...props }: IconProps) => React.ReactElement\n\nexport interface TextAlignButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseTextAlignConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n  /**\n   * Optional custom icon component to render instead of the default.\n   */\n  icon?: React.MemoExoticComponent<IconComponent> | React.FC<IconProps>\n}\n\nexport function TextAlignShortcutBadge({\n  align,\n  shortcutKeys = TEXT_ALIGN_SHORTCUT_KEYS[align],\n}: {\n  align: TextAlign\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for setting text alignment in a Tiptap editor.\n *\n * For custom button implementations, use the `useTextAlign` hook instead.\n */\nexport const TextAlignButton = React.forwardRef<\n  HTMLButtonElement,\n  TextAlignButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      align,\n      text,\n      hideWhenUnavailable = false,\n      onAligned,\n      showShortcut = false,\n      onClick,\n      icon: CustomIcon,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const {\n      isVisible,\n      handleTextAlign,\n      label,\n      canAlign,\n      isActive,\n      Icon,\n      shortcutKeys,\n    } = useTextAlign({\n      editor,\n      align,\n      hideWhenUnavailable,\n      onAligned,\n    })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleTextAlign()\n      },\n      [handleTextAlign, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    const RenderIcon = CustomIcon ?? Icon\n\n    return (\n      <Button\n        type=\"button\"\n        disabled={!canAlign}\n        data-style=\"ghost\"\n        data-active-state={isActive ? \"on\" : \"off\"}\n        data-disabled={!canAlign}\n        role=\"button\"\n        tabIndex={-1}\n        aria-label={label}\n        aria-pressed={isActive}\n        tooltip={label}\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <RenderIcon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <TextAlignShortcutBadge\n                align={align}\n                shortcutKeys={shortcutKeys}\n              />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nTextAlignButton.displayName = \"TextAlignButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AAOA;AAAA;AAOA;AAAA;AACA;AAAA;;;AAvBA;;;;;;;AA8CO,SAAS,uBAAuB,KAMtC;QANsC,EACrC,KAAK,EACL,eAAe,gLAAA,CAAA,2BAAwB,CAAC,MAAM,EAI/C,GANsC;IAOrC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KARgB;AAeT,MAAM,gCAAkB,GAAA,4QAAA,CAAA,aAAgB,UAI7C,QAaE;QAZA,EACE,QAAQ,cAAc,EACtB,KAAK,EACL,IAAI,EACJ,sBAAsB,KAAK,EAC3B,SAAS,EACT,eAAe,KAAK,EACpB,OAAO,EACP,MAAM,UAAU,EAChB,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EACJ,SAAS,EACT,eAAe,EACf,KAAK,EACL,QAAQ,EACR,QAAQ,EACR,IAAI,EACJ,YAAY,EACb,GAAG,CAAA,GAAA,gLAAA,CAAA,eAAY,AAAD,EAAE;QACf;QACA;QACA;QACA;IACF;IAEA,MAAM,cAAc,4QAAA,CAAA,cAAiB;oDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;mDACA;QAAC;QAAiB;KAAQ;IAG5B,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,MAAM,aAAa,uBAAA,wBAAA,aAAc;IAEjC,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,UAAU,CAAC;QACX,cAAW;QACX,qBAAmB,WAAW,OAAO;QACrC,iBAAe,CAAC;QAChB,MAAK;QACL,UAAU,CAAC;QACX,cAAY;QACZ,gBAAc;QACd,SAAS;QACT,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAW,WAAU;;;;;;gBACrB,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBACC,OAAO;oBACP,cAAc;;;;;;;;;;;;;AAO5B;;QA7DqB,mIAAA,CAAA,kBAAe;QAS9B,gLAAA,CAAA,eAAY;;;;QATG,mIAAA,CAAA,kBAAe;QAS9B,gLAAA,CAAA,eAAY;;;;AAuDpB,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8790, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/text-align-button/index.tsx"],"sourcesContent":["export * from \"./text-align-button\"\nexport * from \"./use-text-align\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 8812, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/redo2-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const Redo2Icon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M15.7071 2.29289C15.3166 1.90237 14.6834 1.90237 14.2929 2.29289C13.9024 2.68342 13.9024 3.31658 14.2929 3.70711L17.5858 7H9.5C7.77609 7 6.12279 7.68482 4.90381 8.90381C3.68482 10.1228 3 11.7761 3 13.5C3 14.3536 3.16813 15.1988 3.49478 15.9874C3.82144 16.7761 4.30023 17.4926 4.90381 18.0962C6.12279 19.3152 7.77609 20 9.5 20H13C13.5523 20 14 19.5523 14 19C14 18.4477 13.5523 18 13 18H9.5C8.30653 18 7.16193 17.5259 6.31802 16.682C5.90016 16.2641 5.56869 15.768 5.34254 15.2221C5.1164 14.6761 5 14.0909 5 13.5C5 12.3065 5.47411 11.1619 6.31802 10.318C7.16193 9.47411 8.30653 9 9.5 9H17.5858L14.2929 12.2929C13.9024 12.6834 13.9024 13.3166 14.2929 13.7071C14.6834 14.0976 15.3166 14.0976 15.7071 13.7071L20.7071 8.70711C21.0976 8.31658 21.0976 7.68342 20.7071 7.29289L15.7071 2.29289Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nRedo2Icon.displayName = \"Redo2Icon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,0BAAY,4QAAA,CAAA,OAAU,MACjC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8859, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/undo2-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const Undo2Icon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M9.70711 3.70711C10.0976 3.31658 10.0976 2.68342 9.70711 2.29289C9.31658 1.90237 8.68342 1.90237 8.29289 2.29289L3.29289 7.29289C2.90237 7.68342 2.90237 8.31658 3.29289 8.70711L8.29289 13.7071C8.68342 14.0976 9.31658 14.0976 9.70711 13.7071C10.0976 13.3166 10.0976 12.6834 9.70711 12.2929L6.41421 9H14.5C15.0909 9 15.6761 9.1164 16.2221 9.34254C16.768 9.56869 17.2641 9.90016 17.682 10.318C18.0998 10.7359 18.4313 11.232 18.6575 11.7779C18.8836 12.3239 19 12.9091 19 13.5C19 14.0909 18.8836 14.6761 18.6575 15.2221C18.4313 15.768 18.0998 16.2641 17.682 16.682C17.2641 17.0998 16.768 17.4313 16.2221 17.6575C15.6761 17.8836 15.0909 18 14.5 18H11C10.4477 18 10 18.4477 10 19C10 19.5523 10.4477 20 11 20H14.5C15.3536 20 16.1988 19.8319 16.9874 19.5052C17.7761 19.1786 18.4926 18.6998 19.0962 18.0962C19.6998 17.4926 20.1786 16.7761 20.5052 15.9874C20.8319 15.1988 21 14.3536 21 13.5C21 12.6464 20.8319 11.8012 20.5052 11.0126C20.1786 10.2239 19.6998 9.50739 19.0962 8.90381C18.4926 8.30022 17.7761 7.82144 16.9874 7.49478C16.1988 7.16813 15.3536 7 14.5 7H6.41421L9.70711 3.70711Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nUndo2Icon.displayName = \"Undo2Icon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,0BAAY,4QAAA,CAAA,OAAU,MACjC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,UAAS;YACT,UAAS;YACT,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,UAAU,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 8906, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/undo-redo-button/use-undo-redo.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { type Editor } from \"@tiptap/react\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\n\n// --- Lib ---\nimport { isNodeTypeSelected } from \"@/lib/tiptap-utils\"\n\n// --- Icons ---\nimport { Redo2Icon } from \"@/components/tiptap-icons/redo2-icon\"\nimport { Undo2Icon } from \"@/components/tiptap-icons/undo2-icon\"\n\nexport type UndoRedoAction = \"undo\" | \"redo\"\n\n/**\n * Configuration for the history functionality\n */\nexport interface UseUndoRedoConfig {\n  /**\n   * The Tiptap editor instance.\n   */\n  editor?: Editor | null\n  /**\n   * The history action to perform (undo or redo).\n   */\n  action: UndoRedoAction\n  /**\n   * Whether the button should hide when action is not available.\n   * @default false\n   */\n  hideWhenUnavailable?: boolean\n  /**\n   * Callback function called after a successful action execution.\n   */\n  onExecuted?: () => void\n}\n\nexport const UNDO_REDO_SHORTCUT_KEYS: Record<UndoRedoAction, string> = {\n  undo: \"mod+z\",\n  redo: \"mod+shift+z\",\n}\n\nexport const historyActionLabels: Record<UndoRedoAction, string> = {\n  undo: \"Undo\",\n  redo: \"Redo\",\n}\n\nexport const historyIcons = {\n  undo: Undo2Icon,\n  redo: Redo2Icon,\n}\n\n/**\n * Checks if a history action can be executed\n */\nexport function canExecuteUndoRedoAction(\n  editor: Editor | null,\n  action: UndoRedoAction\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (isNodeTypeSelected(editor, [\"image\"])) return false\n\n  return action === \"undo\" ? editor.can().undo() : editor.can().redo()\n}\n\n/**\n * Executes a history action on the editor\n */\nexport function executeUndoRedoAction(\n  editor: Editor | null,\n  action: UndoRedoAction\n): boolean {\n  if (!editor || !editor.isEditable) return false\n  if (!canExecuteUndoRedoAction(editor, action)) return false\n\n  const chain = editor.chain().focus()\n  return action === \"undo\" ? chain.undo().run() : chain.redo().run()\n}\n\n/**\n * Determines if the history button should be shown\n */\nexport function shouldShowButton(props: {\n  editor: Editor | null\n  hideWhenUnavailable: boolean\n  action: UndoRedoAction\n}): boolean {\n  const { editor, hideWhenUnavailable, action } = props\n\n  if (!editor || !editor.isEditable) return false\n\n  if (hideWhenUnavailable && !editor.isActive(\"code\")) {\n    return canExecuteUndoRedoAction(editor, action)\n  }\n\n  return true\n}\n\n/**\n * Custom hook that provides history functionality for Tiptap editor\n *\n * @example\n * ```tsx\n * // Simple usage\n * function MySimpleUndoButton() {\n *   const { isVisible, handleAction } = useHistory({ action: \"undo\" })\n *\n *   if (!isVisible) return null\n *\n *   return <button onClick={handleAction}>Undo</button>\n * }\n *\n * // Advanced usage with configuration\n * function MyAdvancedRedoButton() {\n *   const { isVisible, handleAction, label } = useHistory({\n *     editor: myEditor,\n *     action: \"redo\",\n *     hideWhenUnavailable: true,\n *     onExecuted: () => console.log('Action executed!')\n *   })\n *\n *   if (!isVisible) return null\n *\n *   return (\n *     <MyButton\n *       onClick={handleAction}\n *       aria-label={label}\n *     >\n *       Redo\n *     </MyButton>\n *   )\n * }\n * ```\n */\nexport function useUndoRedo(config: UseUndoRedoConfig) {\n  const {\n    editor: providedEditor,\n    action,\n    hideWhenUnavailable = false,\n    onExecuted,\n  } = config\n\n  const { editor } = useTiptapEditor(providedEditor)\n  const isMobile = useIsMobile()\n  const [isVisible, setIsVisible] = React.useState<boolean>(true)\n  const canExecute = canExecuteUndoRedoAction(editor, action)\n\n  React.useEffect(() => {\n    if (!editor) return\n\n    const handleUpdate = () => {\n      setIsVisible(shouldShowButton({ editor, hideWhenUnavailable, action }))\n    }\n\n    handleUpdate()\n\n    editor.on(\"transaction\", handleUpdate)\n\n    return () => {\n      editor.off(\"transaction\", handleUpdate)\n    }\n  }, [editor, hideWhenUnavailable, action])\n\n  const handleAction = React.useCallback(() => {\n    if (!editor) return false\n\n    const success = executeUndoRedoAction(editor, action)\n    if (success) {\n      onExecuted?.()\n    }\n    return success\n  }, [editor, action, onExecuted])\n\n  useHotkeys(\n    UNDO_REDO_SHORTCUT_KEYS[action],\n    (event) => {\n      event.preventDefault()\n      handleAction()\n    },\n    {\n      enabled: isVisible && canExecute,\n      enableOnContentEditable: !isMobile,\n      enableOnFormTags: true,\n    }\n  )\n\n  return {\n    isVisible,\n    handleAction,\n    canExecute,\n    label: historyActionLabels[action],\n    shortcutKeys: UNDO_REDO_SHORTCUT_KEYS[action],\n    Icon: historyIcons[action],\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AAGA,gBAAgB;AAChB;AACA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AACA;;AAfA;;;;;;;;AA0CO,MAAM,0BAA0D;IACrE,MAAM;IACN,MAAM;AACR;AAEO,MAAM,sBAAsD;IACjE,MAAM;IACN,MAAM;AACR;AAEO,MAAM,eAAe;IAC1B,MAAM,kJAAA,CAAA,YAAS;IACf,MAAM,kJAAA,CAAA,YAAS;AACjB;AAKO,SAAS,yBACd,MAAqB,EACrB,MAAsB;IAEtB,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ;QAAC;KAAQ,GAAG,OAAO;IAElD,OAAO,WAAW,SAAS,OAAO,GAAG,GAAG,IAAI,KAAK,OAAO,GAAG,GAAG,IAAI;AACpE;AAKO,SAAS,sBACd,MAAqB,EACrB,MAAsB;IAEtB,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAC1C,IAAI,CAAC,yBAAyB,QAAQ,SAAS,OAAO;IAEtD,MAAM,QAAQ,OAAO,KAAK,GAAG,KAAK;IAClC,OAAO,WAAW,SAAS,MAAM,IAAI,GAAG,GAAG,KAAK,MAAM,IAAI,GAAG,GAAG;AAClE;AAKO,SAAS,iBAAiB,KAIhC;IACC,MAAM,EAAE,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAE,GAAG;IAEhD,IAAI,CAAC,UAAU,CAAC,OAAO,UAAU,EAAE,OAAO;IAE1C,IAAI,uBAAuB,CAAC,OAAO,QAAQ,CAAC,SAAS;QACnD,OAAO,yBAAyB,QAAQ;IAC1C;IAEA,OAAO;AACT;AAsCO,SAAS,YAAY,MAAyB;;IACnD,MAAM,EACJ,QAAQ,cAAc,EACtB,MAAM,EACN,sBAAsB,KAAK,EAC3B,UAAU,EACX,GAAG;IAEJ,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,WAAW,CAAA,GAAA,yHAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,4QAAA,CAAA,WAAc,CAAU;IAC1D,MAAM,aAAa,yBAAyB,QAAQ;IAEpD,4QAAA,CAAA,YAAe;iCAAC;YACd,IAAI,CAAC,QAAQ;YAEb,MAAM;sDAAe;oBACnB,aAAa,iBAAiB;wBAAE;wBAAQ;wBAAqB;oBAAO;gBACtE;;YAEA;YAEA,OAAO,EAAE,CAAC,eAAe;YAEzB;yCAAO;oBACL,OAAO,GAAG,CAAC,eAAe;gBAC5B;;QACF;gCAAG;QAAC;QAAQ;QAAqB;KAAO;IAExC,MAAM,eAAe,4QAAA,CAAA,cAAiB;iDAAC;YACrC,IAAI,CAAC,QAAQ,OAAO;YAEpB,MAAM,UAAU,sBAAsB,QAAQ;YAC9C,IAAI,SAAS;gBACX,uBAAA,iCAAA;YACF;YACA,OAAO;QACT;gDAAG;QAAC;QAAQ;QAAQ;KAAW;IAE/B,CAAA,GAAA,6SAAA,CAAA,aAAU,AAAD,EACP,uBAAuB,CAAC,OAAO;kCAC/B,CAAC;YACC,MAAM,cAAc;YACpB;QACF;iCACA;QACE,SAAS,aAAa;QACtB,yBAAyB,CAAC;QAC1B,kBAAkB;IACpB;IAGF,OAAO;QACL;QACA;QACA;QACA,OAAO,mBAAmB,CAAC,OAAO;QAClC,cAAc,uBAAuB,CAAC,OAAO;QAC7C,MAAM,YAAY,CAAC,OAAO;IAC5B;AACF;GA5DgB;;QAQK,mIAAA,CAAA,kBAAe;QACjB,yHAAA,CAAA,cAAW;QA8B5B,6SAAA,CAAA,aAAU","debugId":null}},
    {"offset": {"line": 9048, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/undo-redo-button/undo-redo-button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- Lib ---\nimport { parseShortcutKeys } from \"@/lib/tiptap-utils\"\n\n// --- Hooks ---\nimport { useTiptapEditor } from \"@/hooks/use-tiptap-editor\"\n\n// --- Tiptap UI ---\nimport type {\n  UndoRedoAction,\n  UseUndoRedoConfig,\n} from \"@/components/tiptap-ui/undo-redo-button\"\nimport {\n  UNDO_REDO_SHORTCUT_KEYS,\n  useUndoRedo,\n} from \"@/components/tiptap-ui/undo-redo-button\"\n\n// --- UI Primitives ---\nimport type { ButtonProps } from \"@/components/tiptap-ui-primitive/button\"\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Badge } from \"@/components/tiptap-ui-primitive/badge\"\n\nexport interface UndoRedoButtonProps\n  extends Omit<ButtonProps, \"type\">,\n    UseUndoRedoConfig {\n  /**\n   * Optional text to display alongside the icon.\n   */\n  text?: string\n  /**\n   * Optional show shortcut keys in the button.\n   * @default false\n   */\n  showShortcut?: boolean\n}\n\nexport function HistoryShortcutBadge({\n  action,\n  shortcutKeys = UNDO_REDO_SHORTCUT_KEYS[action],\n}: {\n  action: UndoRedoAction\n  shortcutKeys?: string\n}) {\n  return <Badge>{parseShortcutKeys({ shortcutKeys })}</Badge>\n}\n\n/**\n * Button component for triggering undo/redo actions in a Tiptap editor.\n *\n * For custom button implementations, use the `useHistory` hook instead.\n */\nexport const UndoRedoButton = React.forwardRef<\n  HTMLButtonElement,\n  UndoRedoButtonProps\n>(\n  (\n    {\n      editor: providedEditor,\n      action,\n      text,\n      hideWhenUnavailable = false,\n      onExecuted,\n      showShortcut = false,\n      onClick,\n      children,\n      ...buttonProps\n    },\n    ref\n  ) => {\n    const { editor } = useTiptapEditor(providedEditor)\n    const { isVisible, handleAction, label, canExecute, Icon, shortcutKeys } =\n      useUndoRedo({\n        editor,\n        action,\n        hideWhenUnavailable,\n        onExecuted,\n      })\n\n    const handleClick = React.useCallback(\n      (event: React.MouseEvent<HTMLButtonElement>) => {\n        onClick?.(event)\n        if (event.defaultPrevented) return\n        handleAction()\n      },\n      [handleAction, onClick]\n    )\n\n    if (!isVisible) {\n      return null\n    }\n\n    return (\n      <Button\n        type=\"button\"\n        disabled={!canExecute}\n        data-style=\"ghost\"\n        data-disabled={!canExecute}\n        role=\"button\"\n        tabIndex={-1}\n        aria-label={label}\n        tooltip={label}\n        onClick={handleClick}\n        {...buttonProps}\n        ref={ref}\n      >\n        {children ?? (\n          <>\n            <Icon className=\"tiptap-button-icon\" />\n            {text && <span className=\"tiptap-button-text\">{text}</span>}\n            {showShortcut && (\n              <HistoryShortcutBadge\n                action={action}\n                shortcutKeys={shortcutKeys}\n              />\n            )}\n          </>\n        )}\n      </Button>\n    )\n  }\n)\n\nUndoRedoButton.displayName = \"UndoRedoButton\"\n"],"names":[],"mappings":";;;;;AAEA;AAEA,cAAc;AACd;AAEA,gBAAgB;AAChB;AAOA;AAAA;AAOA;AAAA;AACA;AAAA;;;AAvBA;;;;;;;AAuCO,SAAS,qBAAqB,KAMpC;QANoC,EACnC,MAAM,EACN,eAAe,8KAAA,CAAA,0BAAuB,CAAC,OAAO,EAI/C,GANoC;IAOnC,qBAAO,4SAAC,6JAAA,CAAA,QAAK;kBAAE,CAAA,GAAA,yHAAA,CAAA,oBAAiB,AAAD,EAAE;YAAE;QAAa;;;;;;AAClD;KARgB;AAeT,MAAM,+BAAiB,GAAA,4QAAA,CAAA,aAAgB,UAI5C,QAYE;QAXA,EACE,QAAQ,cAAc,EACtB,MAAM,EACN,IAAI,EACJ,sBAAsB,KAAK,EAC3B,UAAU,EACV,eAAe,KAAK,EACpB,OAAO,EACP,QAAQ,EACR,GAAG,aACJ;;IAGD,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,kBAAe,AAAD,EAAE;IACnC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,GACtE,CAAA,GAAA,8KAAA,CAAA,cAAW,AAAD,EAAE;QACV;QACA;QACA;QACA;IACF;IAEF,MAAM,cAAc,4QAAA,CAAA,cAAiB;mDACnC,CAAC;YACC,oBAAA,8BAAA,QAAU;YACV,IAAI,MAAM,gBAAgB,EAAE;YAC5B;QACF;kDACA;QAAC;QAAc;KAAQ;IAGzB,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,MAAK;QACL,UAAU,CAAC;QACX,cAAW;QACX,iBAAe,CAAC;QAChB,MAAK;QACL,UAAU,CAAC;QACX,cAAY;QACZ,SAAS;QACT,SAAS;QACR,GAAG,WAAW;QACf,KAAK;kBAEJ,qBAAA,sBAAA,yBACC;;8BACE,4SAAC;oBAAK,WAAU;;;;;;gBACf,sBAAQ,4SAAC;oBAAK,WAAU;8BAAsB;;;;;;gBAC9C,8BACC,4SAAC;oBACC,QAAQ;oBACR,cAAc;;;;;;;;;;;;;AAO5B;;QAlDqB,mIAAA,CAAA,kBAAe;QAEhC,8KAAA,CAAA,cAAW;;;;QAFM,mIAAA,CAAA,kBAAe;QAEhC,8KAAA,CAAA,cAAW;;;;AAmDjB,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 9179, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-ui/undo-redo-button/index.tsx"],"sourcesContent":["export * from \"./undo-redo-button\"\nexport * from \"./use-undo-redo\"\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 9201, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/arrow-left-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const ArrowLeftIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M12.7071 5.70711C13.0976 5.31658 13.0976 4.68342 12.7071 4.29289C12.3166 3.90237 11.6834 3.90237 11.2929 4.29289L4.29289 11.2929C3.90237 11.6834 3.90237 12.3166 4.29289 12.7071L11.2929 19.7071C11.6834 20.0976 12.3166 20.0976 12.7071 19.7071C13.0976 19.3166 13.0976 18.6834 12.7071 18.2929L7.41421 13L19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11L7.41421 11L12.7071 5.70711Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nArrowLeftIcon.displayName = \"ArrowLeftIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,8BAAgB,4QAAA,CAAA,OAAU,MACrC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;kBAET,cAAA,4SAAC;YACC,GAAE;YACF,MAAK;;;;;;;;;;;AAIb;;AAGF,cAAc,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 9246, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-unmount.ts"],"sourcesContent":["import { useRef, useEffect } from \"react\"\n\n/**\n * Hook that executes a callback when the component unmounts.\n *\n * @param callback Function to be called on component unmount\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const useUnmount = (callback: (...args: Array<any>) => any) => {\n  const ref = useRef(callback)\n  ref.current = callback\n\n  useEffect(\n    () => () => {\n      ref.current()\n    },\n    []\n  )\n}\n\nexport default useUnmount\n"],"names":[],"mappings":";;;;AAAA;;;AAQO,MAAM,aAAa,CAAC;;IACzB,MAAM,MAAM,CAAA,GAAA,4QAAA,CAAA,SAAM,AAAD,EAAE;IACnB,IAAI,OAAO,GAAG;IAEd,CAAA,GAAA,4QAAA,CAAA,YAAS,AAAD;gCACN;wCAAM;oBACJ,IAAI,OAAO;gBACb;;+BACA,EAAE;AAEN;GAVa;uCAYE","debugId":null}},
    {"offset": {"line": 9276, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-throttled-callback.ts"],"sourcesContent":["import throttle from \"lodash.throttle\"\nimport * as React from \"react\"\nimport { useUnmount } from \"./use-unmount\"\n\ninterface ThrottleSettings {\n  leading?: boolean | undefined\n  trailing?: boolean | undefined\n}\n\nconst defaultOptions: ThrottleSettings = {\n  leading: false,\n  trailing: true,\n}\n\n/**\n * A hook that returns a throttled callback function.\n *\n * @param fn The function to throttle\n * @param wait The time in ms to wait before calling the function\n * @param dependencies The dependencies to watch for changes\n * @param options The throttle options\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useThrottledCallback<T extends (...args: any[]) => any>(\n  fn: T,\n  wait = 250,\n  dependencies: React.DependencyList = [],\n  options: ThrottleSettings = defaultOptions\n): {\n  (this: ThisParameterType<T>, ...args: Parameters<T>): ReturnType<T>\n  cancel: () => void\n  flush: () => void\n} {\n  const handler = React.useMemo(\n    () => throttle<T>(fn, wait, options),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    dependencies\n  )\n\n  useUnmount(() => {\n    handler.cancel()\n  })\n\n  return handler\n}\n\nexport default useThrottledCallback\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAOA,MAAM,iBAAmC;IACvC,SAAS;IACT,UAAU;AACZ;AAWO,SAAS,qBACd,EAAK;QACL,OAAA,iEAAO,KACP,eAAA,iEAAqC,EAAE,EACvC,UAAA,iEAA4B;;IAM5B,MAAM,UAAU,4QAAA,CAAA,UAAa;iDAC3B,IAAM,CAAA,GAAA,6MAAA,CAAA,UAAQ,AAAD,EAAK,IAAI,MAAM;gDAC5B,uDAAuD;IACvD;IAGF,CAAA,GAAA,0HAAA,CAAA,aAAU,AAAD;2CAAE;YACT,QAAQ,MAAM;QAChB;;IAEA,OAAO;AACT;GArBgB;;QAgBd,0HAAA,CAAA,aAAU;;;uCAOG","debugId":null}},
    {"offset": {"line": 9320, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-window-size.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useThrottledCallback } from \"./use-throttled-callback\"\n\nexport interface WindowSizeState {\n  /**\n   * The width of the window's visual viewport in pixels.\n   */\n  width: number\n  /**\n   * The height of the window's visual viewport in pixels.\n   */\n  height: number\n  /**\n   * The distance from the top of the visual viewport to the top of the layout viewport.\n   * Particularly useful for handling mobile keyboard appearance.\n   */\n  offsetTop: number\n  /**\n   * The distance from the left of the visual viewport to the left of the layout viewport.\n   */\n  offsetLeft: number\n  /**\n   * The scale factor of the visual viewport.\n   * This is useful for scaling elements based on the current zoom level.\n   */\n  scale: number\n}\n\n/**\n * Hook that tracks the window's visual viewport dimensions, position, and provides\n * a CSS transform for positioning elements.\n *\n * Uses the Visual Viewport API to get accurate measurements, especially important\n * for mobile devices where virtual keyboards can change the visible area.\n * Only updates state when values actually change to optimize performance.\n *\n * @returns An object containing viewport properties and a CSS transform string\n */\nexport function useWindowSize(): WindowSizeState {\n  const [windowSize, setWindowSize] = React.useState<WindowSizeState>({\n    width: 0,\n    height: 0,\n    offsetTop: 0,\n    offsetLeft: 0,\n    scale: 0,\n  })\n\n  const handleViewportChange = useThrottledCallback(() => {\n    if (typeof window === \"undefined\") return\n\n    const vp = window.visualViewport\n    if (!vp) return\n\n    const {\n      width = 0,\n      height = 0,\n      offsetTop = 0,\n      offsetLeft = 0,\n      scale = 0,\n    } = vp\n\n    setWindowSize((prevState) => {\n      if (\n        width === prevState.width &&\n        height === prevState.height &&\n        offsetTop === prevState.offsetTop &&\n        offsetLeft === prevState.offsetLeft &&\n        scale === prevState.scale\n      ) {\n        return prevState\n      }\n\n      return { width, height, offsetTop, offsetLeft, scale }\n    })\n  }, 200)\n\n  React.useEffect(() => {\n    const visualViewport = window.visualViewport\n    if (!visualViewport) return\n\n    visualViewport.addEventListener(\"resize\", handleViewportChange)\n\n    handleViewportChange()\n\n    return () => {\n      visualViewport.removeEventListener(\"resize\", handleViewportChange)\n    }\n  }, [handleViewportChange])\n\n  return windowSize\n}\n"],"names":[],"mappings":";;;AAEA;AACA;;AAHA;;;AAwCO,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,4QAAA,CAAA,WAAc,CAAkB;QAClE,OAAO;QACP,QAAQ;QACR,WAAW;QACX,YAAY;QACZ,OAAO;IACT;IAEA,MAAM,uBAAuB,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD;oEAAE;YAChD;;YAEA,MAAM,KAAK,OAAO,cAAc;YAChC,IAAI,CAAC,IAAI;YAET,MAAM,EACJ,QAAQ,CAAC,EACT,SAAS,CAAC,EACV,YAAY,CAAC,EACb,aAAa,CAAC,EACd,QAAQ,CAAC,EACV,GAAG;YAEJ;4EAAc,CAAC;oBACb,IACE,UAAU,UAAU,KAAK,IACzB,WAAW,UAAU,MAAM,IAC3B,cAAc,UAAU,SAAS,IACjC,eAAe,UAAU,UAAU,IACnC,UAAU,UAAU,KAAK,EACzB;wBACA,OAAO;oBACT;oBAEA,OAAO;wBAAE;wBAAO;wBAAQ;wBAAW;wBAAY;oBAAM;gBACvD;;QACF;mEAAG;IAEH,4QAAA,CAAA,YAAe;mCAAC;YACd,MAAM,iBAAiB,OAAO,cAAc;YAC5C,IAAI,CAAC,gBAAgB;YAErB,eAAe,gBAAgB,CAAC,UAAU;YAE1C;YAEA;2CAAO;oBACL,eAAe,mBAAmB,CAAC,UAAU;gBAC/C;;QACF;kCAAG;QAAC;KAAqB;IAEzB,OAAO;AACT;GApDgB;;QASe,wIAAA,CAAA,uBAAoB","debugId":null}},
    {"offset": {"line": 9392, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-element-rect.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { useThrottledCallback } from \"./use-throttled-callback\"\n\nexport type RectState = Omit<DOMRect, \"toJSON\">\n\nexport interface ElementRectOptions {\n  /**\n   * The element to track. Can be an Element, ref, or selector string.\n   * Defaults to document.body if not provided.\n   */\n  element?: Element | React.RefObject<Element> | string | null\n  /**\n   * Whether to enable rect tracking\n   */\n  enabled?: boolean\n  /**\n   * Throttle delay in milliseconds for rect updates\n   */\n  throttleMs?: number\n  /**\n   * Whether to use ResizeObserver for more accurate tracking\n   */\n  useResizeObserver?: boolean\n}\n\nconst initialRect: RectState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n}\n\nconst isSSR = typeof window === \"undefined\"\nconst hasResizeObserver = !isSSR && typeof ResizeObserver !== \"undefined\"\n\n/**\n * Helper function to check if code is running on client side\n */\nconst isClientSide = (): boolean => !isSSR\n\n/**\n * Custom hook that tracks an element's bounding rectangle and updates on resize, scroll, etc.\n *\n * @param options Configuration options for element rect tracking\n * @returns The current bounding rectangle of the element\n */\nexport function useElementRect({\n  element,\n  enabled = true,\n  throttleMs = 100,\n  useResizeObserver = true,\n}: ElementRectOptions = {}): RectState {\n  const [rect, setRect] = React.useState<RectState>(initialRect)\n\n  const getTargetElement = React.useCallback((): Element | null => {\n    if (!enabled || !isClientSide()) return null\n\n    if (!element) {\n      return document.body\n    }\n\n    if (typeof element === \"string\") {\n      return document.querySelector(element)\n    }\n\n    if (\"current\" in element) {\n      return element.current\n    }\n\n    return element\n  }, [element, enabled])\n\n  const updateRect = useThrottledCallback(\n    () => {\n      if (!enabled || !isClientSide()) return\n\n      const targetElement = getTargetElement()\n      if (!targetElement) {\n        setRect(initialRect)\n        return\n      }\n\n      const newRect = targetElement.getBoundingClientRect()\n      setRect({\n        x: newRect.x,\n        y: newRect.y,\n        width: newRect.width,\n        height: newRect.height,\n        top: newRect.top,\n        right: newRect.right,\n        bottom: newRect.bottom,\n        left: newRect.left,\n      })\n    },\n    throttleMs,\n    [enabled, getTargetElement],\n    { leading: true, trailing: true }\n  )\n\n  React.useEffect(() => {\n    if (!enabled || !isClientSide()) {\n      setRect(initialRect)\n      return\n    }\n\n    const targetElement = getTargetElement()\n    if (!targetElement) return\n\n    updateRect()\n\n    const cleanup: (() => void)[] = []\n\n    if (useResizeObserver && hasResizeObserver) {\n      const resizeObserver = new ResizeObserver(() => {\n        window.requestAnimationFrame(updateRect)\n      })\n      resizeObserver.observe(targetElement)\n      cleanup.push(() => resizeObserver.disconnect())\n    }\n\n    const handleUpdate = () => updateRect()\n\n    window.addEventListener(\"scroll\", handleUpdate, { passive: true })\n    window.addEventListener(\"resize\", handleUpdate, { passive: true })\n\n    cleanup.push(() => {\n      window.removeEventListener(\"scroll\", handleUpdate)\n      window.removeEventListener(\"resize\", handleUpdate)\n    })\n\n    return () => {\n      cleanup.forEach((fn) => fn())\n      setRect(initialRect)\n    }\n  }, [enabled, getTargetElement, updateRect, useResizeObserver])\n\n  return rect\n}\n\n/**\n * Convenience hook for tracking document.body rect\n */\nexport function useBodyRect(\n  options: Omit<ElementRectOptions, \"element\"> = {}\n): RectState {\n  return useElementRect({\n    ...options,\n    element: isClientSide() ? document.body : null,\n  })\n}\n\n/**\n * Convenience hook for tracking a ref element's rect\n */\nexport function useRefRect<T extends Element>(\n  ref: React.RefObject<T>,\n  options: Omit<ElementRectOptions, \"element\"> = {}\n): RectState {\n  return useElementRect({ ...options, element: ref })\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;AAHA;;;AA2BA,MAAM,cAAyB;IAC7B,GAAG;IACH,GAAG;IACH,OAAO;IACP,QAAQ;IACR,KAAK;IACL,OAAO;IACP,QAAQ;IACR,MAAM;AACR;AAEA,MAAM,QAAQ,aAAkB;AAChC,MAAM,oBAAoB,CAAC,SAAS,OAAO,mBAAmB;AAE9D;;CAEC,GACD,MAAM,eAAe,IAAe,CAAC;AAQ9B,SAAS;QAAe,EAC7B,OAAO,EACP,UAAU,IAAI,EACd,aAAa,GAAG,EAChB,oBAAoB,IAAI,EACL,GALU,iEAKP,CAAC;;IACvB,MAAM,CAAC,MAAM,QAAQ,GAAG,4QAAA,CAAA,WAAc,CAAY;IAElD,MAAM,mBAAmB,4QAAA,CAAA,cAAiB;wDAAC;YACzC,IAAI,CAAC,WAAW,CAAC,gBAAgB,OAAO;YAExC,IAAI,CAAC,SAAS;gBACZ,OAAO,SAAS,IAAI;YACtB;YAEA,IAAI,OAAO,YAAY,UAAU;gBAC/B,OAAO,SAAS,aAAa,CAAC;YAChC;YAEA,IAAI,aAAa,SAAS;gBACxB,OAAO,QAAQ,OAAO;YACxB;YAEA,OAAO;QACT;uDAAG;QAAC;QAAS;KAAQ;IAErB,MAAM,aAAa,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD;2DACpC;YACE,IAAI,CAAC,WAAW,CAAC,gBAAgB;YAEjC,MAAM,gBAAgB;YACtB,IAAI,CAAC,eAAe;gBAClB,QAAQ;gBACR;YACF;YAEA,MAAM,UAAU,cAAc,qBAAqB;YACnD,QAAQ;gBACN,GAAG,QAAQ,CAAC;gBACZ,GAAG,QAAQ,CAAC;gBACZ,OAAO,QAAQ,KAAK;gBACpB,QAAQ,QAAQ,MAAM;gBACtB,KAAK,QAAQ,GAAG;gBAChB,OAAO,QAAQ,KAAK;gBACpB,QAAQ,QAAQ,MAAM;gBACtB,MAAM,QAAQ,IAAI;YACpB;QACF;0DACA,YACA;QAAC;QAAS;KAAiB,EAC3B;QAAE,SAAS;QAAM,UAAU;IAAK;IAGlC,4QAAA,CAAA,YAAe;oCAAC;YACd,IAAI,CAAC,WAAW,CAAC,gBAAgB;gBAC/B,QAAQ;gBACR;YACF;YAEA,MAAM,gBAAgB;YACtB,IAAI,CAAC,eAAe;YAEpB;YAEA,MAAM,UAA0B,EAAE;YAElC,IAAI,qBAAqB,mBAAmB;gBAC1C,MAAM,iBAAiB,IAAI;gDAAe;wBACxC,OAAO,qBAAqB,CAAC;oBAC/B;;gBACA,eAAe,OAAO,CAAC;gBACvB,QAAQ,IAAI;gDAAC,IAAM,eAAe,UAAU;;YAC9C;YAEA,MAAM;yDAAe,IAAM;;YAE3B,OAAO,gBAAgB,CAAC,UAAU,cAAc;gBAAE,SAAS;YAAK;YAChE,OAAO,gBAAgB,CAAC,UAAU,cAAc;gBAAE,SAAS;YAAK;YAEhE,QAAQ,IAAI;4CAAC;oBACX,OAAO,mBAAmB,CAAC,UAAU;oBACrC,OAAO,mBAAmB,CAAC,UAAU;gBACvC;;YAEA;4CAAO;oBACL,QAAQ,OAAO;oDAAC,CAAC,KAAO;;oBACxB,QAAQ;gBACV;;QACF;mCAAG;QAAC;QAAS;QAAkB;QAAY;KAAkB;IAE7D,OAAO;AACT;GA3FgB;;QA0BK,wIAAA,CAAA,uBAAoB;;;AAsElC,SAAS;QACd,UAAA,iEAA+C,CAAC;;IAEhD,OAAO,eAAe;QACpB,GAAG,OAAO;QACV,SAAS,iBAAiB,SAAS,IAAI,GAAG;IAC5C;AACF;IAPgB;;QAGP;;;AASF,SAAS,WACd,GAAuB;QACvB,UAAA,iEAA+C,CAAC;;IAEhD,OAAO,eAAe;QAAE,GAAG,OAAO;QAAE,SAAS;IAAI;AACnD;IALgB;;QAIP","debugId":null}},
    {"offset": {"line": 9560, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/hooks/use-cursor-visibility.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport type { Editor } from \"@tiptap/react\"\nimport { useWindowSize } from \"@/hooks/use-window-size\"\nimport { useBodyRect } from \"./use-element-rect\"\n\nexport interface CursorVisibilityOptions {\n  /**\n   * The Tiptap editor instance\n   */\n  editor?: Editor | null\n  /**\n   * Reference to the toolbar element that may obscure the cursor\n   */\n  overlayHeight?: number\n}\n\n/**\n * Custom hook that ensures the cursor remains visible when typing in a Tiptap editor.\n * Automatically scrolls the window when the cursor would be hidden by the toolbar.\n *\n * @param options.editor The Tiptap editor instance\n * @param options.overlayHeight Toolbar height to account for\n * @returns The bounding rect of the body\n */\nexport function useCursorVisibility({\n  editor,\n  overlayHeight = 0,\n}: CursorVisibilityOptions) {\n  const { height: windowHeight } = useWindowSize()\n  const rect = useBodyRect({\n    enabled: true,\n    throttleMs: 100,\n    useResizeObserver: true,\n  })\n\n  React.useEffect(() => {\n    const ensureCursorVisibility = () => {\n      if (!editor) return\n\n      const { state, view } = editor\n      if (!view.hasFocus()) return\n\n      // Get current cursor position coordinates\n      const { from } = state.selection\n      const cursorCoords = view.coordsAtPos(from)\n\n      if (windowHeight < rect.height && cursorCoords) {\n        const availableSpace = windowHeight - cursorCoords.top\n\n        // If the cursor is hidden behind the overlay or offscreen, scroll it into view\n        if (availableSpace < overlayHeight) {\n          const targetCursorY = Math.max(windowHeight / 2, overlayHeight)\n          const currentScrollY = window.scrollY\n          const cursorAbsoluteY = cursorCoords.top + currentScrollY\n          const newScrollY = cursorAbsoluteY - targetCursorY\n\n          window.scrollTo({\n            top: Math.max(0, newScrollY),\n            behavior: \"smooth\",\n          })\n        }\n      }\n    }\n\n    ensureCursorVisibility()\n  }, [editor, overlayHeight, windowHeight, rect.height])\n\n  return rect\n}\n"],"names":[],"mappings":";;;AAEA;AAEA;AACA;;AALA;;;;AA0BO,SAAS,oBAAoB,KAGV;QAHU,EAClC,MAAM,EACN,gBAAgB,CAAC,EACO,GAHU;;IAIlC,MAAM,EAAE,QAAQ,YAAY,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD;IAC7C,MAAM,OAAO,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD,EAAE;QACvB,SAAS;QACT,YAAY;QACZ,mBAAmB;IACrB;IAEA,4QAAA,CAAA,YAAe;yCAAC;YACd,MAAM;wEAAyB;oBAC7B,IAAI,CAAC,QAAQ;oBAEb,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG;oBACxB,IAAI,CAAC,KAAK,QAAQ,IAAI;oBAEtB,0CAA0C;oBAC1C,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,SAAS;oBAChC,MAAM,eAAe,KAAK,WAAW,CAAC;oBAEtC,IAAI,eAAe,KAAK,MAAM,IAAI,cAAc;wBAC9C,MAAM,iBAAiB,eAAe,aAAa,GAAG;wBAEtD,+EAA+E;wBAC/E,IAAI,iBAAiB,eAAe;4BAClC,MAAM,gBAAgB,KAAK,GAAG,CAAC,eAAe,GAAG;4BACjD,MAAM,iBAAiB,OAAO,OAAO;4BACrC,MAAM,kBAAkB,aAAa,GAAG,GAAG;4BAC3C,MAAM,aAAa,kBAAkB;4BAErC,OAAO,QAAQ,CAAC;gCACd,KAAK,KAAK,GAAG,CAAC,GAAG;gCACjB,UAAU;4BACZ;wBACF;oBACF;gBACF;;YAEA;QACF;wCAAG;QAAC;QAAQ;QAAe;QAAc,KAAK,MAAM;KAAC;IAErD,OAAO;AACT;GA5CgB;;QAImB,iIAAA,CAAA,gBAAa;QACjC,kIAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 9631, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/moon-star-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const MoonStarIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 11.5955 21.7564 11.2309 21.3827 11.0761C21.009 10.9213 20.5789 11.0069 20.2929 11.2929C19.287 12.2988 17.9226 12.864 16.5 12.864C15.0774 12.864 13.713 12.2988 12.7071 11.2929C11.7012 10.287 11.136 8.92261 11.136 7.5C11.136 6.07739 11.7012 4.71304 12.7071 3.70711C12.9931 3.42111 13.0787 2.99099 12.9239 2.61732C12.7691 2.24364 12.4045 2 12 2ZM7.55544 5.34824C8.27036 4.87055 9.05353 4.51389 9.87357 4.28778C9.39271 5.27979 9.13604 6.37666 9.13604 7.5C9.13604 9.45304 9.91189 11.3261 11.2929 12.7071C12.6739 14.0881 14.547 14.864 16.5 14.864C17.6233 14.864 18.7202 14.6073 19.7122 14.1264C19.4861 14.9465 19.1295 15.7296 18.6518 16.4446C17.7727 17.7602 16.5233 18.7855 15.0615 19.391C13.5997 19.9965 11.9911 20.155 10.4393 19.8463C8.88743 19.5376 7.46197 18.7757 6.34315 17.6569C5.22433 16.538 4.4624 15.1126 4.15372 13.5607C3.84504 12.0089 4.00347 10.4003 4.60897 8.93853C5.21447 7.47672 6.23985 6.22729 7.55544 5.34824Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M19 2C19.5523 2 20 2.44772 20 3V4H21C21.5523 4 22 4.44772 22 5C22 5.55228 21.5523 6 21 6H20V7C20 7.55228 19.5523 8 19 8C18.4477 8 18 7.55228 18 7V6H17C16.4477 6 16 5.55228 16 5C16 4.44772 16.4477 4 17 4H18V3C18 2.44772 18.4477 2 19 2Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nMoonStarIcon.displayName = \"MoonStarIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,6BAAe,4QAAA,CAAA,OAAU,MACpC;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 9688, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-icons/sun-icon.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport const SunIcon = React.memo(\n  ({ className, ...props }: React.SVGProps<SVGSVGElement>) => {\n    return (\n      <svg\n        width=\"24\"\n        height=\"24\"\n        className={className}\n        viewBox=\"0 0 24 24\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M12 1C12.5523 1 13 1.44772 13 2V4C13 4.55228 12.5523 5 12 5C11.4477 5 11 4.55228 11 4V2C11 1.44772 11.4477 1 12 1Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M7 12C7 9.23858 9.23858 7 12 7C14.7614 7 17 9.23858 17 12C17 14.7614 14.7614 17 12 17C9.23858 17 7 14.7614 7 12ZM12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M13 20C13 19.4477 12.5523 19 12 19C11.4477 19 11 19.4477 11 20V22C11 22.5523 11.4477 23 12 23C12.5523 23 13 22.5523 13 22V20Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M4.22282 4.22289C4.61335 3.83236 5.24651 3.83236 5.63704 4.22289L7.04704 5.63289C7.43756 6.02341 7.43756 6.65658 7.04704 7.0471C6.65651 7.43762 6.02335 7.43762 5.63283 7.0471L4.22282 5.6371C3.8323 5.24658 3.8323 4.61341 4.22282 4.22289Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M18.367 16.9529C17.9765 16.5623 17.3433 16.5623 16.9528 16.9529C16.5623 17.3434 16.5623 17.9766 16.9528 18.3671L18.3628 19.7771C18.7533 20.1676 19.3865 20.1676 19.777 19.7771C20.1675 19.3866 20.1675 18.7534 19.777 18.3629L18.367 16.9529Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M1 12C1 11.4477 1.44772 11 2 11H4C4.55228 11 5 11.4477 5 12C5 12.5523 4.55228 13 4 13H2C1.44772 13 1 12.5523 1 12Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M20 11C19.4477 11 19 11.4477 19 12C19 12.5523 19.4477 13 20 13H22C22.5523 13 23 12.5523 23 12C23 11.4477 22.5523 11 22 11H20Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M7.04704 16.9529C7.43756 17.3434 7.43756 17.9766 7.04704 18.3671L5.63704 19.7771C5.24651 20.1676 4.61335 20.1676 4.22282 19.7771C3.8323 19.3866 3.8323 18.7534 4.22283 18.3629L5.63283 16.9529C6.02335 16.5623 6.65651 16.5623 7.04704 16.9529Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M19.777 5.6371C20.1675 5.24657 20.1675 4.61341 19.777 4.22289C19.3865 3.83236 18.7533 3.83236 18.3628 4.22289L16.9528 5.63289C16.5623 6.02341 16.5623 6.65658 16.9528 7.0471C17.3433 7.43762 17.9765 7.43762 18.367 7.0471L19.777 5.6371Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    )\n  }\n)\n\nSunIcon.displayName = \"SunIcon\"\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,MAAM,wBAAU,4QAAA,CAAA,OAAU,MAC/B;QAAC,EAAE,SAAS,EAAE,GAAG,OAAsC;IACrD,qBACE,4SAAC;QACC,OAAM;QACN,QAAO;QACP,WAAW;QACX,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,KAAK;;0BAET,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,UAAS;gBACT,UAAS;gBACT,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;0BAEP,4SAAC;gBACC,GAAE;gBACF,MAAK;;;;;;;;;;;;AAIb;;AAGF,QAAQ,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 9801, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-templates/simple/theme-toggle.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\n// --- UI Primitives ---\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\n\n// --- Icons ---\nimport { MoonStarIcon } from \"@/components/tiptap-icons/moon-star-icon\"\nimport { SunIcon } from \"@/components/tiptap-icons/sun-icon\"\n\nexport function ThemeToggle() {\n  const [isDarkMode, setIsDarkMode] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\")\n    const handleChange = () => setIsDarkMode(mediaQuery.matches)\n    mediaQuery.addEventListener(\"change\", handleChange)\n    return () => mediaQuery.removeEventListener(\"change\", handleChange)\n  }, [])\n\n  React.useEffect(() => {\n    const initialDarkMode =\n      !!document.querySelector('meta[name=\"color-scheme\"][content=\"dark\"]') ||\n      window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    setIsDarkMode(initialDarkMode)\n  }, [])\n\n  React.useEffect(() => {\n    document.documentElement.classList.toggle(\"dark\", isDarkMode)\n  }, [isDarkMode])\n\n  const toggleDarkMode = () => setIsDarkMode((isDark) => !isDark)\n\n  return (\n    <Button\n      onClick={toggleDarkMode}\n      aria-label={`Switch to ${isDarkMode ? \"light\" : \"dark\"} mode`}\n      data-style=\"ghost\"\n    >\n      {isDarkMode ? (\n        <MoonStarIcon className=\"tiptap-button-icon\" />\n      ) : (\n        <SunIcon className=\"tiptap-button-icon\" />\n      )}\n    </Button>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA,wBAAwB;AACxB;AAAA;AAEA,gBAAgB;AAChB;AACA;;;AATA;;;;;AAWO,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,4QAAA,CAAA,WAAc,CAAU;IAE5D,4QAAA,CAAA,YAAe;iCAAC;YACd,MAAM,aAAa,OAAO,UAAU,CAAC;YACrC,MAAM;sDAAe,IAAM,cAAc,WAAW,OAAO;;YAC3D,WAAW,gBAAgB,CAAC,UAAU;YACtC;yCAAO,IAAM,WAAW,mBAAmB,CAAC,UAAU;;QACxD;gCAAG,EAAE;IAEL,4QAAA,CAAA,YAAe;iCAAC;YACd,MAAM,kBACJ,CAAC,CAAC,SAAS,aAAa,CAAC,gDACzB,OAAO,UAAU,CAAC,gCAAgC,OAAO;YAC3D,cAAc;QAChB;gCAAG,EAAE;IAEL,4QAAA,CAAA,YAAe;iCAAC;YACd,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ;QACpD;gCAAG;QAAC;KAAW;IAEf,MAAM,iBAAiB,IAAM,cAAc,CAAC,SAAW,CAAC;IAExD,qBACE,4SAAC,+JAAA,CAAA,SAAM;QACL,SAAS;QACT,cAAY,AAAC,aAA0C,OAA9B,aAAa,UAAU,QAAO;QACvD,cAAW;kBAEV,2BACC,4SAAC,yJAAA,CAAA,eAAY;YAAC,WAAU;;;;;iCAExB,4SAAC,gJAAA,CAAA,UAAO;YAAC,WAAU;;;;;;;;;;;AAI3B;GApCgB;KAAA","debugId":null}},
    {"offset": {"line": 9887, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/tiptap-templates/simple/simple-editor.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { EditorContent, EditorContext, useEditor } from \"@tiptap/react\"\n\n// --- Tiptap Core Extensions ---\nimport { StarterKit } from \"@tiptap/starter-kit\"\nimport { Image } from \"@tiptap/extension-image\"\nimport { TaskItem, TaskList } from \"@tiptap/extension-list\"\nimport { TextAlign } from \"@tiptap/extension-text-align\"\nimport { Typography } from \"@tiptap/extension-typography\"\nimport { Highlight } from \"@tiptap/extension-highlight\"\nimport { Subscript } from \"@tiptap/extension-subscript\"\nimport { Superscript } from \"@tiptap/extension-superscript\"\nimport { Selection } from \"@tiptap/extensions\"\n\n// --- UI Primitives ---\nimport { Button } from \"@/components/tiptap-ui-primitive/button\"\nimport { Spacer } from \"@/components/tiptap-ui-primitive/spacer\"\nimport {\n  Toolbar,\n  ToolbarGroup,\n  ToolbarSeparator,\n} from \"@/components/tiptap-ui-primitive/toolbar\"\n\n// --- Tiptap Node ---\nimport { ImageUploadNode } from \"@/components/tiptap-node/image-upload-node/image-upload-node-extension\"\nimport { HorizontalRule } from \"@/components/tiptap-node/horizontal-rule-node/horizontal-rule-node-extension\"\nimport \"@/components/tiptap-node/blockquote-node/blockquote-node.scss\"\nimport \"@/components/tiptap-node/code-block-node/code-block-node.scss\"\nimport \"@/components/tiptap-node/horizontal-rule-node/horizontal-rule-node.scss\"\nimport \"@/components/tiptap-node/list-node/list-node.scss\"\nimport \"@/components/tiptap-node/image-node/image-node.scss\"\nimport \"@/components/tiptap-node/heading-node/heading-node.scss\"\nimport \"@/components/tiptap-node/paragraph-node/paragraph-node.scss\"\n\n// --- Tiptap UI ---\nimport { HeadingDropdownMenu } from \"@/components/tiptap-ui/heading-dropdown-menu\"\nimport { ImageUploadButton } from \"@/components/tiptap-ui/image-upload-button\"\nimport { ListDropdownMenu } from \"@/components/tiptap-ui/list-dropdown-menu\"\nimport { BlockquoteButton } from \"@/components/tiptap-ui/blockquote-button\"\nimport { CodeBlockButton } from \"@/components/tiptap-ui/code-block-button\"\nimport {\n  ColorHighlightPopover,\n  ColorHighlightPopoverContent,\n  ColorHighlightPopoverButton,\n} from \"@/components/tiptap-ui/color-highlight-popover\"\nimport {\n  LinkPopover,\n  LinkContent,\n  LinkButton,\n} from \"@/components/tiptap-ui/link-popover\"\nimport { MarkButton } from \"@/components/tiptap-ui/mark-button\"\nimport { TextAlignButton } from \"@/components/tiptap-ui/text-align-button\"\nimport { UndoRedoButton } from \"@/components/tiptap-ui/undo-redo-button\"\n\n// --- Icons ---\nimport { ArrowLeftIcon } from \"@/components/tiptap-icons/arrow-left-icon\"\nimport { HighlighterIcon } from \"@/components/tiptap-icons/highlighter-icon\"\nimport { LinkIcon } from \"@/components/tiptap-icons/link-icon\"\n\n// --- Hooks ---\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { useWindowSize } from \"@/hooks/use-window-size\"\nimport { useCursorVisibility } from \"@/hooks/use-cursor-visibility\"\n\n// --- Components ---\nimport { ThemeToggle } from \"@/components/tiptap-templates/simple/theme-toggle\"\n\n// --- Lib ---\nimport { handleImageUpload, MAX_FILE_SIZE } from \"@/lib/tiptap-utils\"\n\n// --- Styles ---\nimport \"@/components/tiptap-templates/simple/simple-editor.scss\"\n\nimport content from \"@/components/tiptap-templates/simple/data/content.json\"\n\nconst MainToolbarContent = ({\n  onHighlighterClick,\n  onLinkClick,\n  isMobile,\n}: {\n  onHighlighterClick: () => void\n  onLinkClick: () => void\n  isMobile: boolean\n}) => {\n  return (\n    <>\n      <Spacer />\n\n      <ToolbarGroup>\n        <UndoRedoButton action=\"undo\" />\n        <UndoRedoButton action=\"redo\" />\n      </ToolbarGroup>\n\n      <ToolbarSeparator />\n\n      <ToolbarGroup>\n        <HeadingDropdownMenu levels={[1, 2, 3, 4]} portal={isMobile} />\n        <ListDropdownMenu\n          types={[\"bulletList\", \"orderedList\", \"taskList\"]}\n          portal={isMobile}\n        />\n        <BlockquoteButton />\n        <CodeBlockButton />\n      </ToolbarGroup>\n\n      <ToolbarSeparator />\n\n      <ToolbarGroup>\n        <MarkButton type=\"bold\" />\n        <MarkButton type=\"italic\" />\n        <MarkButton type=\"strike\" />\n        <MarkButton type=\"code\" />\n        <MarkButton type=\"underline\" />\n        {!isMobile ? (\n          <ColorHighlightPopover />\n        ) : (\n          <ColorHighlightPopoverButton onClick={onHighlighterClick} />\n        )}\n        {!isMobile ? <LinkPopover /> : <LinkButton onClick={onLinkClick} />}\n      </ToolbarGroup>\n\n      <ToolbarSeparator />\n\n      <ToolbarGroup>\n        <MarkButton type=\"superscript\" />\n        <MarkButton type=\"subscript\" />\n      </ToolbarGroup>\n\n      <ToolbarSeparator />\n\n      <ToolbarGroup>\n        <TextAlignButton align=\"left\" />\n        <TextAlignButton align=\"center\" />\n        <TextAlignButton align=\"right\" />\n        <TextAlignButton align=\"justify\" />\n      </ToolbarGroup>\n\n      <ToolbarSeparator />\n\n      <ToolbarGroup>\n        <ImageUploadButton text=\"Add\" />\n      </ToolbarGroup>\n\n      <Spacer />\n\n      {isMobile && <ToolbarSeparator />}\n\n      <ToolbarGroup>\n        <ThemeToggle />\n      </ToolbarGroup>\n    </>\n  )\n}\n\nconst MobileToolbarContent = ({\n  type,\n  onBack,\n}: {\n  type: \"highlighter\" | \"link\"\n  onBack: () => void\n}) => (\n  <>\n    <ToolbarGroup>\n      <Button data-style=\"ghost\" onClick={onBack}>\n        <ArrowLeftIcon className=\"tiptap-button-icon\" />\n        {type === \"highlighter\" ? (\n          <HighlighterIcon className=\"tiptap-button-icon\" />\n        ) : (\n          <LinkIcon className=\"tiptap-button-icon\" />\n        )}\n      </Button>\n    </ToolbarGroup>\n\n    <ToolbarSeparator />\n\n    {type === \"highlighter\" ? (\n      <ColorHighlightPopoverContent />\n    ) : (\n      <LinkContent />\n    )}\n  </>\n)\n\nexport function SimpleEditor() {\n  const isMobile = useIsMobile()\n  const { height } = useWindowSize()\n  const [mobileView, setMobileView] = React.useState<\n    \"main\" | \"highlighter\" | \"link\"\n  >(\"main\")\n  const toolbarRef = React.useRef<HTMLDivElement>(null)\n\n  const editor = useEditor({\n    immediatelyRender: false,\n    shouldRerenderOnTransaction: false,\n    editorProps: {\n      attributes: {\n        autocomplete: \"off\",\n        autocorrect: \"off\",\n        autocapitalize: \"off\",\n        \"aria-label\": \"Main content area, start typing to enter text.\",\n        class: \"simple-editor\",\n      },\n    },\n    extensions: [\n      StarterKit.configure({\n        horizontalRule: false,\n        link: {\n          openOnClick: false,\n          enableClickSelection: true,\n        },\n      }),\n      HorizontalRule,\n      TextAlign.configure({ types: [\"heading\", \"paragraph\"] }),\n      TaskList,\n      TaskItem.configure({ nested: true }),\n      Highlight.configure({ multicolor: true }),\n      Image,\n      Typography,\n      Superscript,\n      Subscript,\n      Selection,\n      ImageUploadNode.configure({\n        accept: \"image/*\",\n        maxSize: MAX_FILE_SIZE,\n        limit: 3,\n        upload: handleImageUpload,\n        onError: (error) => console.error(\"Upload failed:\", error),\n      }),\n    ],\n    content,\n  })\n\n  const rect = useCursorVisibility({\n    editor,\n    overlayHeight: toolbarRef.current?.getBoundingClientRect().height ?? 0,\n  })\n\n  React.useEffect(() => {\n    if (!isMobile && mobileView !== \"main\") {\n      setMobileView(\"main\")\n    }\n  }, [isMobile, mobileView])\n\n  return (\n    <div className=\"simple-editor-wrapper\">\n      <EditorContext.Provider value={{ editor }}>\n        <Toolbar\n          ref={toolbarRef}\n          style={{\n            ...(isMobile\n              ? {\n                  bottom: `calc(100% - ${height - rect.y}px)`,\n                }\n              : {}),\n          }}\n        >\n          {mobileView === \"main\" ? (\n            <MainToolbarContent\n              onHighlighterClick={() => setMobileView(\"highlighter\")}\n              onLinkClick={() => setMobileView(\"link\")}\n              isMobile={isMobile}\n            />\n          ) : (\n            <MobileToolbarContent\n              type={mobileView === \"highlighter\" ? \"highlighter\" : \"link\"}\n              onBack={() => setMobileView(\"main\")}\n            />\n          )}\n        </Toolbar>\n\n        <EditorContent\n          editor={editor}\n          role=\"presentation\"\n          className=\"simple-editor-content\"\n        />\n      </EditorContext.Provider>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}