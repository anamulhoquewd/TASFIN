{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 1, "column": 0}, "map": {"version":3,"sources":["turbopack:///turbopack:///[project]/components/tiptap-node/paragraph-node/F:/SOFTWARES/Tasfin/dashboad/components/tiptap-node/paragraph-node/paragraph-node.scss"],"sourcesContent":[".tiptap.ProseMirror {\n  --tt-collaboration-carets-label: var(--tt-gray-light-900);\n  --link-text-color: var(--tt-brand-color-500);\n  --thread-text: var(--tt-gray-light-900);\n  --placeholder-color: var(--tt-gray-light-a-400);\n  --thread-bg-color: var(--tt-color-yellow-inc-2);\n\n  // ai\n  --tiptap-ai-insertion-color: var(--tt-brand-color-600);\n\n  .dark & {\n    --tt-collaboration-carets-label: var(--tt-gray-dark-100);\n    --link-text-color: var(--tt-brand-color-400);\n    --thread-text: var(--tt-gray-dark-900);\n    --placeholder-color: var(--tt-gray-dark-a-400);\n    --thread-bg-color: var(--tt-color-yellow-dec-2);\n\n    --tiptap-ai-insertion-color: var(--tt-brand-color-400);\n  }\n}\n\n/* Ensure each top-level node has relative positioning \n   so absolutely positioned placeholders work correctly */\n.tiptap.ProseMirror > * {\n  position: relative;\n}\n\n/* =====================\n     CORE EDITOR STYLES\n     ===================== */\n.tiptap.ProseMirror {\n  white-space: pre-wrap;\n  outline: none;\n  caret-color: var(--tt-cursor-color);\n\n  // Paragraph spacing\n  p:not(:first-child) {\n    font-size: 1rem;\n    line-height: 1.6;\n    font-weight: normal;\n    margin-top: 20px;\n  }\n\n  // Selection styles\n  &:not(.readonly):not(.ProseMirror-hideselection) {\n    ::selection {\n      background-color: var(--tt-selection-color);\n    }\n\n    .selection::selection {\n      background: transparent;\n    }\n  }\n\n  .selection {\n    display: inline;\n    background-color: var(--tt-selection-color);\n  }\n\n  // Selected node styles\n  .ProseMirror-selectednode:not(img):not(pre):not(.react-renderer) {\n    border-radius: var(--tt-radius-md);\n    background-color: var(--tt-selection-color);\n  }\n\n  .ProseMirror-hideselection {\n    caret-color: transparent;\n  }\n\n  // Resize cursor\n  &.resize-cursor {\n    cursor: ew-resize;\n    cursor: col-resize;\n  }\n}\n\n/* =====================\n     TEXT DECORATION\n     ===================== */\n.tiptap.ProseMirror {\n  // Text decoration inheritance for spans\n  a span {\n    text-decoration: underline;\n  }\n\n  s span {\n    text-decoration: line-through;\n  }\n\n  u span {\n    text-decoration: underline;\n  }\n\n  .tiptap-ai-insertion {\n    color: var(--tiptap-ai-insertion-color);\n  }\n}\n\n/* =====================\n     COLLABORATION\n     ===================== */\n.tiptap.ProseMirror {\n  .collaboration-carets {\n    &__caret {\n      border-right: 1px solid transparent;\n      border-left: 1px solid transparent;\n      pointer-events: none;\n      margin-left: -1px;\n      margin-right: -1px;\n      position: relative;\n      word-break: normal;\n    }\n\n    &__label {\n      color: var(--tt-collaboration-carets-label);\n      border-radius: 0.25rem;\n      border-bottom-left-radius: 0;\n      font-size: 0.75rem;\n      font-weight: 600;\n      left: -1px;\n      line-height: 1;\n      padding: 0.125rem 0.375rem;\n      position: absolute;\n      top: -1.3em;\n      user-select: none;\n      white-space: nowrap;\n    }\n  }\n}\n\n/* =====================\n     EMOJI\n     ===================== */\n.tiptap.ProseMirror [data-type=\"emoji\"] img {\n  display: inline-block;\n  width: 1.25em;\n  height: 1.25em;\n  cursor: text;\n}\n\n/* =====================\n     LINKS\n     ===================== */\n.tiptap.ProseMirror {\n  a {\n    color: var(--link-text-color);\n    text-decoration: underline;\n  }\n}\n\n/* =====================\n     MENTION\n     ===================== */\n.tiptap.ProseMirror {\n  [data-type=\"mention\"] {\n    display: inline-block;\n    color: var(--tt-brand-color-500);\n  }\n}\n\n/* =====================\n     THREADS\n     ===================== */\n.tiptap.ProseMirror {\n  // Base styles for inline threads\n  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {\n    transition:\n      color 0.2s ease-in-out,\n      background-color 0.2s ease-in-out;\n    color: var(--thread-text);\n    border-bottom: 2px dashed var(--tt-color-yellow-base);\n    font-weight: 600;\n\n    &.tiptap-thread--selected,\n    &.tiptap-thread--hovered {\n      background-color: var(--thread-bg-color);\n      border-bottom-color: transparent;\n    }\n  }\n\n  // Block thread styles with images\n  .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block {\n    &:has(img) {\n      outline: 0.125rem solid var(--tt-color-yellow-base);\n      border-radius: var(--tt-radius-xs, 0.25rem);\n      overflow: hidden;\n      width: fit-content;\n\n      &.tiptap-thread--selected {\n        outline-width: 0.25rem;\n        outline-color: var(--tt-color-yellow-base);\n      }\n\n      &.tiptap-thread--hovered {\n        outline-width: 0.25rem;\n      }\n    }\n\n    // Block thread styles without images\n    &:not(:has(img)) {\n      border-radius: 0.25rem;\n      border-bottom: 0.125rem dashed var(--tt-color-yellow-base);\n      padding-bottom: 0.5rem;\n      outline: 0.25rem solid transparent;\n\n      &.tiptap-thread--hovered,\n      &.tiptap-thread--selected {\n        background-color: var(--tt-color-yellow-base);\n        outline-color: var(--tt-color-yellow-base);\n      }\n    }\n  }\n\n  // Resolved thread styles\n  .tiptap-thread.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {\n    background-color: var(--tt-color-yellow-base);\n    border-color: transparent;\n    opacity: 0.5;\n  }\n\n  // React renderer specific styles\n  .tiptap-thread.tiptap-thread--block:has(.react-renderer) {\n    margin-top: 3rem;\n    margin-bottom: 3rem;\n  }\n}\n\n/* =====================\n     PLACEHOLDER\n     ===================== */\n.is-empty:not(.with-slash)[data-placeholder]:has(\n    > .ProseMirror-trailingBreak:only-child\n  )::before {\n  content: attr(data-placeholder);\n}\n\n.is-empty.with-slash[data-placeholder]:has(\n    > .ProseMirror-trailingBreak:only-child\n  )::before {\n  content: \"Write, type '/' for commandsâ€¦\";\n  font-style: italic;\n}\n\n.is-empty[data-placeholder]:has(\n    > .ProseMirror-trailingBreak:only-child\n  ):before {\n  pointer-events: none;\n  height: 0;\n  position: absolute;\n  width: 100%;\n  text-align: inherit;\n  left: 0;\n  right: 0;\n}\n\n.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {\n  color: var(--placeholder-color);\n}\n\n/* =====================\n     DROPCURSOR\n     ===================== */\n.prosemirror-dropcursor-block,\n.prosemirror-dropcursor-inline {\n  background: var(--tt-brand-color-400) !important;\n  border-radius: 0.25rem;\n  margin-left: -1px;\n  margin-right: -1px;\n  width: 100%;\n  height: 0.188rem;\n  cursor: grabbing;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQE;;;;;;;;;AASE;;;;AAOF;;;;;;AASA;;;;;;;AAOE;;;;AAME;;;;AAIA;;;;;AAMF;;;;;AAMA;;;;AAIA;;;;;AAMA;;;;AAUA;;;;AAIA;;;;AAIA;;;;AAIA;;;;;;;;;;AAgBE;;;;;;;;;;;;;;;;AAeA;;;;;;;AAYJ;;;;;AASE;;;;;AAUA;;;;;;;AAeA;;;;;AAKE;;;;;;;;AAUA;;;;;AAIE;;;;AAIA;;;;;;;AASF;;;;;AAAA;;;;;AAKE;;;;;;AASJ;;;;;AAMA;;;;AAUF;;;;;AAOA;;;;;;;;;;AAYA;;;;AAIA"}}]
}