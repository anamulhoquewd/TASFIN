/* [project]/components/tiptap-node/paragraph-node/paragraph-node.scss.css [app-client] (css) */
.tiptap.ProseMirror {
  --tt-collaboration-carets-label: var(--tt-gray-light-900);
  --link-text-color: var(--tt-brand-color-500);
  --thread-text: var(--tt-gray-light-900);
  --placeholder-color: var(--tt-gray-light-a-400);
  --thread-bg-color: var(--tt-color-yellow-inc-2);
  --tiptap-ai-insertion-color: var(--tt-brand-color-600);
}

.dark .tiptap.ProseMirror {
  --tt-collaboration-carets-label: var(--tt-gray-dark-100);
  --link-text-color: var(--tt-brand-color-400);
  --thread-text: var(--tt-gray-dark-900);
  --placeholder-color: var(--tt-gray-dark-a-400);
  --thread-bg-color: var(--tt-color-yellow-dec-2);
  --tiptap-ai-insertion-color: var(--tt-brand-color-400);
}

.tiptap.ProseMirror > * {
  position: relative;
}

.tiptap.ProseMirror {
  white-space: pre-wrap;
  caret-color: var(--tt-cursor-color);
  outline: none;
}

.tiptap.ProseMirror p:not(:first-child) {
  margin-top: 20px;
  font-size: 1rem;
  font-weight: normal;
  line-height: 1.6;
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) ::selection {
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) .selection::selection {
  background: none;
}

.tiptap.ProseMirror .selection {
  background-color: var(--tt-selection-color);
  display: inline;
}

.tiptap.ProseMirror .ProseMirror-selectednode:not(img):not(pre):not(.react-renderer) {
  border-radius: var(--tt-radius-md);
  background-color: var(--tt-selection-color);
}

.tiptap.ProseMirror .ProseMirror-hideselection {
  caret-color: rgba(0, 0, 0, 0);
}

.tiptap.ProseMirror.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

.tiptap.ProseMirror a span {
  text-decoration: underline;
}

.tiptap.ProseMirror s span {
  text-decoration: line-through;
}

.tiptap.ProseMirror u span {
  text-decoration: underline;
}

.tiptap.ProseMirror .tiptap-ai-insertion {
  color: var(--tiptap-ai-insertion-color);
}

.tiptap.ProseMirror .collaboration-carets__caret {
  pointer-events: none;
  word-break: normal;
  border-left: 1px solid rgba(0, 0, 0, 0);
  border-right: 1px solid rgba(0, 0, 0, 0);
  margin-left: -1px;
  margin-right: -1px;
  position: relative;
}

.tiptap.ProseMirror .collaboration-carets__label {
  color: var(--tt-collaboration-carets-label);
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  white-space: nowrap;
  border-radius: .25rem .25rem .25rem 0;
  padding: .125rem .375rem;
  font-size: .75rem;
  font-weight: 600;
  line-height: 1;
  position: absolute;
  top: -1.3em;
  left: -1px;
}

.tiptap.ProseMirror [data-type="emoji"] img {
  cursor: text;
  width: 1.25em;
  height: 1.25em;
  display: inline-block;
}

.tiptap.ProseMirror a {
  color: var(--link-text-color);
  text-decoration: underline;
}

.tiptap.ProseMirror [data-type="mention"] {
  color: var(--tt-brand-color-500);
  display: inline-block;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {
  color: var(--thread-text);
  border-bottom: 2px dashed var(--tt-color-yellow-base);
  font-weight: 600;
  transition: color .2s ease-in-out, background-color .2s ease-in-out;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--selected, .tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--hovered {
  background-color: var(--thread-bg-color);
  border-bottom-color: rgba(0, 0, 0, 0);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img) {
  outline: .125rem solid var(--tt-color-yellow-base);
  border-radius: var(--tt-radius-xs, .25rem);
  width: -moz-fit-content;
  width: fit-content;
  overflow: hidden;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--selected {
  outline-width: .25rem;
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--hovered {
  outline-width: .25rem;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)) {
  border-bottom: .125rem dashed var(--tt-color-yellow-base);
  border-radius: .25rem;
  outline: .25rem solid rgba(0, 0, 0, 0);
  padding-bottom: .5rem;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--hovered {
  background-color: var(--tt-color-yellow-base);
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--selected {
  background-color: var(--tt-color-yellow-base);
  outline-color: var(--tt-color-yellow-base);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {
  background-color: var(--tt-color-yellow-base);
  opacity: .5;
  border-color: rgba(0, 0, 0, 0);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--block:has(.react-renderer) {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.is-empty:not(.with-slash)[data-placeholder]:has( > .ProseMirror-trailingBreak:only-child):before {
  content: attr(data-placeholder);
}

.is-empty.with-slash[data-placeholder]:has( > .ProseMirror-trailingBreak:only-child):before {
  content: "Write, type '/' for commandsâ€¦";
  font-style: italic;
}

.is-empty[data-placeholder]:has( > .ProseMirror-trailingBreak:only-child):before {
  pointer-events: none;
  width: 100%;
  height: 0;
  text-align: inherit;
  position: absolute;
  left: 0;
  right: 0;
}

.is-empty[data-placeholder]:has( > .ProseMirror-trailingBreak):before {
  color: var(--placeholder-color);
}

.prosemirror-dropcursor-block, .prosemirror-dropcursor-inline {
  cursor: grabbing;
  border-radius: .25rem;
  width: 100%;
  height: .188rem;
  margin-left: -1px;
  margin-right: -1px;
  background: var(--tt-brand-color-400) !important;
}

/*# sourceMappingURL=components_tiptap-node_paragraph-node_paragraph-node_scss_css_e59ae46c._.single.css.map*/