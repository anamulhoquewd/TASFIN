{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,KAAyD;QAAzD,EAAE,SAAS,EAAE,GAAG,OAAyC,GAAzD;IAChB,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,KAGoC;QAHpC,EAChB,SAAS,EACT,GAAG,OACiD,GAHpC;IAIhB,qBACE,4TAAC,iRAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,4TAAC,iRAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,4TAAC,+RAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBS","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,KAGoC;QAHpC,EACb,SAAS,EACT,GAAG,OAC8C,GAHpC;IAIb,qBACE,4TAAC,iRAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/_components/form3.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState } from \"react\"\r\nimport { useForm, useFieldArray } from \"react-hook-form\"\r\nimport { zodResolver } from \"@hookform/resolvers/zod\"\r\nimport { z } from \"zod\"\r\nimport axios from \"axios\"\r\nimport { Plus, Trash2, Upload, X } from \"lucide-react\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\r\nimport { useToast } from \"@/hooks/use-toast\"\r\n\r\n// Product variant schema\r\nconst productVariantSchema = z.object({\r\n  size: z.string().min(1, \"Size is required\"),\r\n  color: z.string().min(1, \"Color is required\"),\r\n  stock: z.number().int().min(0, \"Stock must be >= 0\"),\r\n  price: z.number().nonnegative(\"Price must be >= 0\"),\r\n})\r\n\r\n// Main product form schema\r\nconst productFormSchema = z.object({\r\n  title: z.string().min(1, \"Title is required\"),\r\n  slug: z.string().regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, \"Slug must be kebab-case\"),\r\n  description: z.string().optional(),\r\n  categories: z.array(z.string()).min(1, \"At least one category is required\"),\r\n  variants: z.array(productVariantSchema).min(1, \"At least one variant is required\"),\r\n  fabric: z.string().optional(),\r\n  valueAddition: z.string().optional(),\r\n  cutFit: z.string().optional(),\r\n  collarNeck: z.string().optional(),\r\n  sleeve: z.string().optional(),\r\n  length: z.string().optional(),\r\n  washCare: z.string().optional(),\r\n  sideCut: z.string().optional(),\r\n  isFeatured: z.boolean().default(false),\r\n  isActive: z.boolean().default(true),\r\n  tags: z.array(z.string()).optional(),\r\n})\r\n\r\ntype ProductFormData = z.infer<typeof productFormSchema>\r\n\r\nexport function CreateProductForm() {\r\n  const [images, setImages] = useState<File[]>([])\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [imagePreviews, setImagePreviews] = useState<string[]>([])\r\n  const { toast } = useToast()\r\n\r\n  const form = useForm<ProductFormData>({\r\n    resolver: zodResolver(productFormSchema),\r\n    defaultValues: {\r\n      title: \"\",\r\n      slug: \"\",\r\n      description: \"\",\r\n      categories: [],\r\n      variants: [{ size: \"\", color: \"\", stock: 0, price: 0 }],\r\n      fabric: \"\",\r\n      valueAddition: \"\",\r\n      cutFit: \"\",\r\n      collarNeck: \"\",\r\n      sleeve: \"\",\r\n      length: \"\",\r\n      washCare: \"\",\r\n      sideCut: \"\",\r\n      isFeatured: false,\r\n      isActive: true,\r\n      tags: [],\r\n    },\r\n  })\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control: form.control,\r\n    name: \"variants\",\r\n  })\r\n\r\n  // Generate slug from title\r\n  const generateSlug = (title: string) => {\r\n    return title\r\n      .toLowerCase()\r\n      .replace(/[^a-z0-9\\s-]/g, \"\")\r\n      .replace(/\\s+/g, \"-\")\r\n      .replace(/-+/g, \"-\")\r\n      .trim()\r\n  }\r\n\r\n  // Handle title change and auto-generate slug\r\n  const handleTitleChange = (value: string) => {\r\n    form.setValue(\"title\", value)\r\n    if (value) {\r\n      form.setValue(\"slug\", generateSlug(value))\r\n    }\r\n  }\r\n\r\n  // Handle image upload\r\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = Array.from(event.target.files || [])\r\n    if (files.length === 0) return\r\n\r\n    // Validate file types\r\n    const validTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\", \"image/webp\"]\r\n    const invalidFiles = files.filter((file) => !validTypes.includes(file.type))\r\n\r\n    if (invalidFiles.length > 0) {\r\n      toast({\r\n        title: \"Invalid file type\",\r\n        description: \"Please upload only JPEG, PNG, or WebP images.\",\r\n        variant: \"destructive\",\r\n      })\r\n      return\r\n    }\r\n\r\n    // Add new images\r\n    setImages((prev) => [...prev, ...files])\r\n\r\n    // Create previews\r\n    files.forEach((file) => {\r\n      const reader = new FileReader()\r\n      reader.onload = (e) => {\r\n        setImagePreviews((prev) => [...prev, e.target?.result as string])\r\n      }\r\n      reader.readAsDataURL(file)\r\n    })\r\n  }\r\n\r\n  // Remove image\r\n  const removeImage = (index: number) => {\r\n    setImages((prev) => prev.filter((_, i) => i !== index))\r\n    setImagePreviews((prev) => prev.filter((_, i) => i !== index))\r\n  }\r\n\r\n  // Handle form submission\r\n  const onSubmit = async (data: ProductFormData) => {\r\n    if (images.length === 0) {\r\n      toast({\r\n        title: \"Images required\",\r\n        description: \"Please upload at least one product image.\",\r\n        variant: \"destructive\",\r\n      })\r\n      return\r\n    }\r\n\r\n    setIsSubmitting(true)\r\n\r\n    try {\r\n      const formData = new FormData()\r\n\r\n      // Append images\r\n      images.forEach((image, index) => {\r\n        formData.append(\"images\", image)\r\n      })\r\n\r\n      // Append other form data\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (Array.isArray(value)) {\r\n          formData.append(key, JSON.stringify(value))\r\n        } else if (typeof value === \"boolean\") {\r\n          formData.append(key, value.toString())\r\n        } else if (value !== undefined && value !== \"\") {\r\n          formData.append(key, value.toString())\r\n        }\r\n      })\r\n\r\n      const response = await axios.post(\"/api/products\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n\r\n      if (response.data.success) {\r\n        toast({\r\n          title: \"Success!\",\r\n          description: \"Product created successfully.\",\r\n        })\r\n\r\n        // Reset form\r\n        form.reset()\r\n        setImages([])\r\n        setImagePreviews([])\r\n      }\r\n    } catch (error: any) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.response?.data?.message || \"Failed to create product.\",\r\n        variant: \"destructive\",\r\n      })\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\r\n        {/* Basic Information */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Basic Information</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"title\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Product Title</FormLabel>\r\n                    <FormControl>\r\n                      <Input\r\n                        placeholder=\"Enter product title\"\r\n                        {...field}\r\n                        onChange={(e) => handleTitleChange(e.target.value)}\r\n                      />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"slug\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Slug</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"product-slug\" {...field} />\r\n                    </FormControl>\r\n                    <FormDescription>URL-friendly version of the title (auto-generated)</FormDescription>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"description\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Description</FormLabel>\r\n                  <FormControl>\r\n                    <Textarea placeholder=\"Enter product description\" className=\"min-h-[100px]\" {...field} />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"categories\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Categories</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      placeholder=\"Enter category IDs (comma-separated)\"\r\n                      value={field.value?.join(\", \") || \"\"}\r\n                      onChange={(e) => {\r\n                        const categories = e.target.value\r\n                          .split(\",\")\r\n                          .map((cat) => cat.trim())\r\n                          .filter((cat) => cat.length > 0)\r\n                        field.onChange(categories)\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormDescription>Enter MongoDB ObjectId strings separated by commas</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Product Images */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Product Images</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-center justify-center w-full\">\r\n                <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-border rounded-lg cursor-pointer hover:bg-muted/50\">\r\n                  <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\r\n                    <Upload className=\"w-8 h-8 mb-2 text-muted-foreground\" />\r\n                    <p className=\"text-sm text-muted-foreground\">Click to upload images</p>\r\n                  </div>\r\n                  <input type=\"file\" className=\"hidden\" multiple accept=\"image/*\" onChange={handleImageUpload} />\r\n                </label>\r\n              </div>\r\n\r\n              {imagePreviews.length > 0 && (\r\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                  {imagePreviews.map((preview, index) => (\r\n                    <div key={index} className=\"relative group\">\r\n                      <img\r\n                        src={preview || \"/placeholder.svg\"}\r\n                        alt={`Preview ${index + 1}`}\r\n                        className=\"w-full h-24 object-cover rounded-lg\"\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeImage(index)}\r\n                        className=\"absolute -top-2 -right-2 bg-destructive text-destructive-foreground rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                      >\r\n                        <X className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Product Variants */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center justify-between\">\r\n              Product Variants\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => append({ size: \"\", color: \"\", stock: 0, price: 0 })}\r\n              >\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                Add Variant\r\n              </Button>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {fields.map((field, index) => (\r\n                <div key={field.id} className=\"p-4 border border-border rounded-lg\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h4 className=\"font-medium\">Variant {index + 1}</h4>\r\n                    {fields.length > 1 && (\r\n                      <Button type=\"button\" variant=\"outline\" size=\"sm\" onClick={() => remove(index)}>\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                    <FormField\r\n                      control={form.control}\r\n                      name={`variants.${index}.size`}\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Size</FormLabel>\r\n                          <FormControl>\r\n                            <Input placeholder=\"S, M, L, XL\" {...field} />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n\r\n                    <FormField\r\n                      control={form.control}\r\n                      name={`variants.${index}.color`}\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Color</FormLabel>\r\n                          <FormControl>\r\n                            <Input placeholder=\"Red, Blue, etc.\" {...field} />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n\r\n                    <FormField\r\n                      control={form.control}\r\n                      name={`variants.${index}.stock`}\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Stock</FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              type=\"number\"\r\n                              min=\"0\"\r\n                              {...field}\r\n                              onChange={(e) => field.onChange(Number.parseInt(e.target.value) || 0)}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n\r\n                    <FormField\r\n                      control={form.control}\r\n                      name={`variants.${index}.price`}\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Price</FormLabel>\r\n                          <FormControl>\r\n                            <Input\r\n                              type=\"number\"\r\n                              min=\"0\"\r\n                              step=\"0.01\"\r\n                              {...field}\r\n                              onChange={(e) => field.onChange(Number.parseFloat(e.target.value) || 0)}\r\n                            />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Product Details */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Product Details</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"fabric\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Fabric</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Cotton, Polyester, etc.\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"valueAddition\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Value Addition</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Special features\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"cutFit\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Cut & Fit</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Slim, Regular, Loose\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"collarNeck\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Collar/Neck</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Round neck, V-neck, etc.\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"sleeve\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Sleeve</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Short, Long, 3/4\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"length\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Length</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Short, Medium, Long\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"washCare\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Wash Care</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Machine wash, Hand wash\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"sideCut\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Side Cut</FormLabel>\r\n                    <FormControl>\r\n                      <Input placeholder=\"Side cut details\" {...field} />\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Settings & Tags */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Settings & Tags</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"flex flex-col sm:flex-row gap-6\">\r\n              <FormField\r\n                control={form.control}\r\n                name=\"isFeatured\"\r\n                render={({ field }) => (\r\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\r\n                    <FormControl>\r\n                      <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                    </FormControl>\r\n                    <div className=\"space-y-1 leading-none\">\r\n                      <FormLabel>Featured Product</FormLabel>\r\n                      <FormDescription>Display this product in featured sections</FormDescription>\r\n                    </div>\r\n                  </FormItem>\r\n                )}\r\n              />\r\n\r\n              <FormField\r\n                control={form.control}\r\n                name=\"isActive\"\r\n                render={({ field }) => (\r\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\r\n                    <FormControl>\r\n                      <Checkbox checked={field.value} onCheckedChange={field.onChange} />\r\n                    </FormControl>\r\n                    <div className=\"space-y-1 leading-none\">\r\n                      <FormLabel>Active Product</FormLabel>\r\n                      <FormDescription>Make this product visible to customers</FormDescription>\r\n                    </div>\r\n                  </FormItem>\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"tags\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Tags</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      placeholder=\"Enter tags (comma-separated)\"\r\n                      value={field.value?.join(\", \") || \"\"}\r\n                      onChange={(e) => {\r\n                        const tags = e.target.value\r\n                          .split(\",\")\r\n                          .map((tag) => tag.trim())\r\n                          .filter((tag) => tag.length > 0)\r\n                        field.onChange(tags)\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormDescription>Add tags to help customers find your product</FormDescription>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Submit Button */}\r\n        <div className=\"flex justify-end\">\r\n          <Button type=\"submit\" size=\"lg\" disabled={isSubmitting} className=\"min-w-[150px]\">\r\n            {isSubmitting ? \"Creating...\" : \"Create Product\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Form>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAhBA;;;;;;;;;;;;;;AAmBA,yBAAyB;AACzB,MAAM,uBAAuB,iOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,MAAM,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACxB,OAAO,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACzB,OAAO,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG;IAC/B,OAAO,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,WAAW,CAAC;AAChC;AAEA,2BAA2B;AAC3B,MAAM,oBAAoB,iOAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,OAAO,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IACzB,MAAM,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC,8BAA8B;IACrD,aAAa,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAChC,YAAY,iOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,iOAAA,CAAA,IAAC,CAAC,MAAM,IAAI,GAAG,CAAC,GAAG;IACvC,UAAU,iOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,sBAAsB,GAAG,CAAC,GAAG;IAC/C,QAAQ,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B,eAAe,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAClC,QAAQ,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B,YAAY,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC/B,QAAQ,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B,QAAQ,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC3B,UAAU,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC7B,SAAS,iOAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ;IAC5B,YAAY,iOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAChC,UAAU,iOAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC;IAC9B,MAAM,iOAAA,CAAA,IAAC,CAAC,KAAK,CAAC,iOAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ;AACpC;AAIO,SAAS;;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/D,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,MAAM,OAAO,CAAA,GAAA,0PAAA,CAAA,UAAO,AAAD,EAAmB;QACpC,UAAU,CAAA,GAAA,wQAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACP,MAAM;YACN,aAAa;YACb,YAAY,EAAE;YACd,UAAU;gBAAC;oBAAE,MAAM;oBAAI,OAAO;oBAAI,OAAO;oBAAG,OAAO;gBAAE;aAAE;YACvD,QAAQ;YACR,eAAe;YACf,QAAQ;YACR,YAAY;YACZ,QAAQ;YACR,QAAQ;YACR,UAAU;YACV,SAAS;YACT,YAAY;YACZ,UAAU;YACV,MAAM,EAAE;QACV;IACF;IAEA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,0PAAA,CAAA,gBAAa,AAAD,EAAE;QAC/C,SAAS,KAAK,OAAO;QACrB,MAAM;IACR;IAEA,2BAA2B;IAC3B,MAAM,eAAe,CAAC;QACpB,OAAO,MACJ,WAAW,GACX,OAAO,CAAC,iBAAiB,IACzB,OAAO,CAAC,QAAQ,KAChB,OAAO,CAAC,OAAO,KACf,IAAI;IACT;IAEA,6CAA6C;IAC7C,MAAM,oBAAoB,CAAC;QACzB,KAAK,QAAQ,CAAC,SAAS;QACvB,IAAI,OAAO;YACT,KAAK,QAAQ,CAAC,QAAQ,aAAa;QACrC;IACF;IAEA,sBAAsB;IACtB,MAAM,oBAAoB,CAAC;QACzB,MAAM,QAAQ,MAAM,IAAI,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,EAAE;QACjD,IAAI,MAAM,MAAM,KAAK,GAAG;QAExB,sBAAsB;QACtB,MAAM,aAAa;YAAC;YAAc;YAAa;YAAa;SAAa;QACzE,MAAM,eAAe,MAAM,MAAM,CAAC,CAAC,OAAS,CAAC,WAAW,QAAQ,CAAC,KAAK,IAAI;QAE1E,IAAI,aAAa,MAAM,GAAG,GAAG;YAC3B,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;YACA;QACF;QAEA,iBAAiB;QACjB,UAAU,CAAC,OAAS;mBAAI;mBAAS;aAAM;QAEvC,kBAAkB;QAClB,MAAM,OAAO,CAAC,CAAC;YACb,MAAM,SAAS,IAAI;YACnB,OAAO,MAAM,GAAG,CAAC;gBACf,iBAAiB,CAAC;wBAAmB;2BAAV;2BAAI;yBAAM,YAAA,EAAE,MAAM,cAAR,gCAAA,UAAU,MAAM;qBAAW;;YAClE;YACA,OAAO,aAAa,CAAC;QACvB;IACF;IAEA,eAAe;IACf,MAAM,cAAc,CAAC;QACnB,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;QAChD,iBAAiB,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,GAAG,IAAM,MAAM;IACzD;IAEA,yBAAyB;IACzB,MAAM,WAAW,OAAO;QACtB,IAAI,OAAO,MAAM,KAAK,GAAG;YACvB,MAAM;gBACJ,OAAO;gBACP,aAAa;gBACb,SAAS;YACX;YACA;QACF;QAEA,gBAAgB;QAEhB,IAAI;YACF,MAAM,WAAW,IAAI;YAErB,gBAAgB;YAChB,OAAO,OAAO,CAAC,CAAC,OAAO;gBACrB,SAAS,MAAM,CAAC,UAAU;YAC5B;YAEA,yBAAyB;YACzB,OAAO,OAAO,CAAC,MAAM,OAAO,CAAC;oBAAC,CAAC,KAAK,MAAM;gBACxC,IAAI,MAAM,OAAO,CAAC,QAAQ;oBACxB,SAAS,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC;gBACtC,OAAO,IAAI,OAAO,UAAU,WAAW;oBACrC,SAAS,MAAM,CAAC,KAAK,MAAM,QAAQ;gBACrC,OAAO,IAAI,UAAU,aAAa,UAAU,IAAI;oBAC9C,SAAS,MAAM,CAAC,KAAK,MAAM,QAAQ;gBACrC;YACF;YAEA,MAAM,WAAW,MAAM,2LAAA,CAAA,UAAK,CAAC,IAAI,CAAC,iBAAiB,UAAU;gBAC3D,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEA,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;gBACzB,MAAM;oBACJ,OAAO;oBACP,aAAa;gBACf;gBAEA,aAAa;gBACb,KAAK,KAAK;gBACV,UAAU,EAAE;gBACZ,iBAAiB,EAAE;YACrB;QACF,EAAE,OAAO,OAAY;gBAGJ,sBAAA;YAFf,MAAM;gBACJ,OAAO;gBACP,aAAa,EAAA,kBAAA,MAAM,QAAQ,cAAd,uCAAA,uBAAA,gBAAgB,IAAI,cAApB,2CAAA,qBAAsB,OAAO,KAAI;gBAC9C,SAAS;YACX;QACF,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,4TAAC,4HAAA,CAAA,OAAI;QAAE,GAAG,IAAI;kBACZ,cAAA,4TAAC;YAAK,UAAU,KAAK,YAAY,CAAC;YAAW,WAAU;;8BAErD,4TAAC;;sCACC,4TAAC;sCACC,cAAA,4TAAC;0CAAU;;;;;;;;;;;sCAEb,4TAAC;4BAAY,WAAU;;8CACrB,4TAAC;oCAAI,WAAU;;sDACb,4TAAC,4HAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ;oDAAC,EAAE,KAAK,EAAE;qEAChB,4TAAC,4HAAA,CAAA,WAAQ;;sEACP,4TAAC,4HAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,4TAAC,4HAAA,CAAA,cAAW;sEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;gEACJ,aAAY;gEACX,GAAG,KAAK;gEACT,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;sEAGrD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;sDAKlB,4TAAC,4HAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ;oDAAC,EAAE,KAAK,EAAE;qEAChB,4TAAC,4HAAA,CAAA,WAAQ;;sEACP,4TAAC,4HAAA,CAAA,YAAS;sEAAC;;;;;;sEACX,4TAAC,4HAAA,CAAA,cAAW;sEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;gEAAC,aAAY;gEAAgB,GAAG,KAAK;;;;;;;;;;;sEAE7C,4TAAC,4HAAA,CAAA,kBAAe;sEAAC;;;;;;sEACjB,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;8CAMpB,4TAAC,4HAAA,CAAA,YAAS;oCACR,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ;4CAAC,EAAE,KAAK,EAAE;6DAChB,4TAAC,4HAAA,CAAA,WAAQ;;8DACP,4TAAC,4HAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,4TAAC,4HAAA,CAAA,cAAW;8DACV,cAAA,4TAAC,gIAAA,CAAA,WAAQ;wDAAC,aAAY;wDAA4B,WAAU;wDAAiB,GAAG,KAAK;;;;;;;;;;;8DAEvF,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;8CAKlB,4TAAC,4HAAA,CAAA,YAAS;oCACR,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ;4CAAC,EAAE,KAAK,EAAE;4CAMH;6DALb,4TAAC,4HAAA,CAAA,WAAQ;;8DACP,4TAAC,4HAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,4TAAC,4HAAA,CAAA,cAAW;8DACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;wDACJ,aAAY;wDACZ,OAAO,EAAA,eAAA,MAAM,KAAK,cAAX,mCAAA,aAAa,IAAI,CAAC,UAAS;wDAClC,UAAU,CAAC;4DACT,MAAM,aAAa,EAAE,MAAM,CAAC,KAAK,CAC9B,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,MAAQ,IAAI,IAAI,IACrB,MAAM,CAAC,CAAC,MAAQ,IAAI,MAAM,GAAG;4DAChC,MAAM,QAAQ,CAAC;wDACjB;;;;;;;;;;;8DAGJ,4TAAC,4HAAA,CAAA,kBAAe;8DAAC;;;;;;8DACjB,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQtB,4TAAC;;sCACC,4TAAC;sCACC,cAAA,4TAAC;0CAAU;;;;;;;;;;;sCAEb,4TAAC;sCACC,cAAA,4TAAC;gCAAI,WAAU;;kDACb,4TAAC;wCAAI,WAAU;kDACb,cAAA,4TAAC;4CAAM,WAAU;;8DACf,4TAAC;oDAAI,WAAU;;sEACb,4TAAC,6RAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;sEAClB,4TAAC;4DAAE,WAAU;sEAAgC;;;;;;;;;;;;8DAE/C,4TAAC;oDAAM,MAAK;oDAAO,WAAU;oDAAS,QAAQ;oDAAC,QAAO;oDAAU,UAAU;;;;;;;;;;;;;;;;;oCAI7E,cAAc,MAAM,GAAG,mBACtB,4TAAC;wCAAI,WAAU;kDACZ,cAAc,GAAG,CAAC,CAAC,SAAS,sBAC3B,4TAAC;gDAAgB,WAAU;;kEACzB,4TAAC;wDACC,KAAK,WAAW;wDAChB,KAAK,AAAC,WAAoB,OAAV,QAAQ;wDACxB,WAAU;;;;;;kEAEZ,4TAAC;wDACC,MAAK;wDACL,SAAS,IAAM,YAAY;wDAC3B,WAAU;kEAEV,cAAA,4TAAC,mRAAA,CAAA,IAAC;4DAAC,WAAU;;;;;;;;;;;;+CAXP;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAsBtB,4TAAC;;sCACC,4TAAC;sCACC,cAAA,4TAAC;gCAAU,WAAU;;oCAAoC;kDAEvD,4TAAC,8HAAA,CAAA,SAAM;wCACL,MAAK;wCACL,SAAQ;wCACR,MAAK;wCACL,SAAS,IAAM,OAAO;gDAAE,MAAM;gDAAI,OAAO;gDAAI,OAAO;gDAAG,OAAO;4CAAE;;0DAEhE,4TAAC,yRAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;;;;;;sCAKvC,4TAAC;sCACC,cAAA,4TAAC;gCAAI,WAAU;0CACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,4TAAC;wCAAmB,WAAU;;0DAC5B,4TAAC;gDAAI,WAAU;;kEACb,4TAAC;wDAAG,WAAU;;4DAAc;4DAAS,QAAQ;;;;;;;oDAC5C,OAAO,MAAM,GAAG,mBACf,4TAAC,8HAAA,CAAA,SAAM;wDAAC,MAAK;wDAAS,SAAQ;wDAAU,MAAK;wDAAK,SAAS,IAAM,OAAO;kEACtE,cAAA,4TAAC,iSAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAKxB,4TAAC;gDAAI,WAAU;;kEACb,4TAAC,4HAAA,CAAA,YAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAM,AAAC,YAAiB,OAAN,OAAM;wDACxB,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,4TAAC,4HAAA,CAAA,WAAQ;;kFACP,4TAAC,4HAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,4TAAC,4HAAA,CAAA,cAAW;kFACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4EAAC,aAAY;4EAAe,GAAG,KAAK;;;;;;;;;;;kFAE5C,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kEAKlB,4TAAC,4HAAA,CAAA,YAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAM,AAAC,YAAiB,OAAN,OAAM;wDACxB,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,4TAAC,4HAAA,CAAA,WAAQ;;kFACP,4TAAC,4HAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,4TAAC,4HAAA,CAAA,cAAW;kFACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4EAAC,aAAY;4EAAmB,GAAG,KAAK;;;;;;;;;;;kFAEhD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kEAKlB,4TAAC,4HAAA,CAAA,YAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAM,AAAC,YAAiB,OAAN,OAAM;wDACxB,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,4TAAC,4HAAA,CAAA,WAAQ;;kFACP,4TAAC,4HAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,4TAAC,4HAAA,CAAA,cAAW;kFACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4EACJ,MAAK;4EACL,KAAI;4EACH,GAAG,KAAK;4EACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,QAAQ,CAAC,EAAE,MAAM,CAAC,KAAK,KAAK;;;;;;;;;;;kFAGvE,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kEAKlB,4TAAC,4HAAA,CAAA,YAAS;wDACR,SAAS,KAAK,OAAO;wDACrB,MAAM,AAAC,YAAiB,OAAN,OAAM;wDACxB,QAAQ;gEAAC,EAAE,KAAK,EAAE;iFAChB,4TAAC,4HAAA,CAAA,WAAQ;;kFACP,4TAAC,4HAAA,CAAA,YAAS;kFAAC;;;;;;kFACX,4TAAC,4HAAA,CAAA,cAAW;kFACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4EACJ,MAAK;4EACL,KAAI;4EACJ,MAAK;4EACJ,GAAG,KAAK;4EACT,UAAU,CAAC,IAAM,MAAM,QAAQ,CAAC,OAAO,UAAU,CAAC,EAAE,MAAM,CAAC,KAAK,KAAK;;;;;;;;;;;kFAGzE,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;uCAzEZ,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;8BAqF1B,4TAAC;;sCACC,4TAAC;sCACC,cAAA,4TAAC;0CAAU;;;;;;;;;;;sCAEb,4TAAC;sCACC,cAAA,4TAAC;gCAAI,WAAU;;kDACb,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAA2B,GAAG,KAAK;;;;;;;;;;;kEAExD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAAoB,GAAG,KAAK;;;;;;;;;;;kEAEjD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAAwB,GAAG,KAAK;;;;;;;;;;;kEAErD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAA4B,GAAG,KAAK;;;;;;;;;;;kEAEzD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAAoB,GAAG,KAAK;;;;;;;;;;;kEAEjD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAAuB,GAAG,KAAK;;;;;;;;;;;kEAEpD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAA2B,GAAG,KAAK;;;;;;;;;;;kEAExD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;kDAKlB,4TAAC,4HAAA,CAAA,YAAS;wCACR,SAAS,KAAK,OAAO;wCACrB,MAAK;wCACL,QAAQ;gDAAC,EAAE,KAAK,EAAE;iEAChB,4TAAC,4HAAA,CAAA,WAAQ;;kEACP,4TAAC,4HAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,4TAAC,4HAAA,CAAA,cAAW;kEACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;4DAAC,aAAY;4DAAoB,GAAG,KAAK;;;;;;;;;;;kEAEjD,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BASxB,4TAAC;;sCACC,4TAAC;sCACC,cAAA,4TAAC;0CAAU;;;;;;;;;;;sCAEb,4TAAC;4BAAY,WAAU;;8CACrB,4TAAC;oCAAI,WAAU;;sDACb,4TAAC,4HAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ;oDAAC,EAAE,KAAK,EAAE;qEAChB,4TAAC,4HAAA,CAAA,WAAQ;oDAAC,WAAU;;sEAClB,4TAAC,4HAAA,CAAA,cAAW;sEACV,cAAA,4TAAC,gIAAA,CAAA,WAAQ;gEAAC,SAAS,MAAM,KAAK;gEAAE,iBAAiB,MAAM,QAAQ;;;;;;;;;;;sEAEjE,4TAAC;4DAAI,WAAU;;8EACb,4TAAC,4HAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,4TAAC,4HAAA,CAAA,kBAAe;8EAAC;;;;;;;;;;;;;;;;;;;;;;;;sDAMzB,4TAAC,4HAAA,CAAA,YAAS;4CACR,SAAS,KAAK,OAAO;4CACrB,MAAK;4CACL,QAAQ;oDAAC,EAAE,KAAK,EAAE;qEAChB,4TAAC,4HAAA,CAAA,WAAQ;oDAAC,WAAU;;sEAClB,4TAAC,4HAAA,CAAA,cAAW;sEACV,cAAA,4TAAC,gIAAA,CAAA,WAAQ;gEAAC,SAAS,MAAM,KAAK;gEAAE,iBAAiB,MAAM,QAAQ;;;;;;;;;;;sEAEjE,4TAAC;4DAAI,WAAU;;8EACb,4TAAC,4HAAA,CAAA,YAAS;8EAAC;;;;;;8EACX,4TAAC,4HAAA,CAAA,kBAAe;8EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAO3B,4TAAC,4HAAA,CAAA,YAAS;oCACR,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ;4CAAC,EAAE,KAAK,EAAE;4CAMH;6DALb,4TAAC,4HAAA,CAAA,WAAQ;;8DACP,4TAAC,4HAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,4TAAC,4HAAA,CAAA,cAAW;8DACV,cAAA,4TAAC,6HAAA,CAAA,QAAK;wDACJ,aAAY;wDACZ,OAAO,EAAA,eAAA,MAAM,KAAK,cAAX,mCAAA,aAAa,IAAI,CAAC,UAAS;wDAClC,UAAU,CAAC;4DACT,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,CACxB,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,MAAQ,IAAI,IAAI,IACrB,MAAM,CAAC,CAAC,MAAQ,IAAI,MAAM,GAAG;4DAChC,MAAM,QAAQ,CAAC;wDACjB;;;;;;;;;;;8DAGJ,4TAAC,4HAAA,CAAA,kBAAe;8DAAC;;;;;;8DACjB,4TAAC,4HAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQtB,4TAAC;oBAAI,WAAU;8BACb,cAAA,4TAAC,8HAAA,CAAA,SAAM;wBAAC,MAAK;wBAAS,MAAK;wBAAK,UAAU;wBAAc,WAAU;kCAC/D,eAAe,gBAAgB;;;;;;;;;;;;;;;;;;;;;;AAM5C;GA/jBgB;;QAII;QAEL,0PAAA,CAAA,UAAO;QAsBe,0PAAA,CAAA,gBAAa;;;KA5BlC","debugId":null}},
    {"offset": {"line": 1884, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/create/page.tsx"],"sourcesContent":["\"use client\";\n\nimport ProductCreateForm from \"../_components/form2\";\nimport { CreateProductForm } from \"../_components/form3\";\n\n// export default function CreateProductPage() {\n//   return (\n//     <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm p-6\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Create New Product</h2>\n//       <ProductCreateForm />\n//     </div>\n//   );\n// }\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"container mx-auto py-8 px-4\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-foreground\">\n              Create Product\n            </h1>\n            <p className=\"text-muted-foreground mt-2\">\n              Add a new product to your inventory with images and variants.\n            </p>\n          </div>\n          <CreateProductForm />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAce,SAAS;IACtB,qBACE,4TAAC;QAAI,WAAU;kBACb,cAAA,4TAAC;YAAI,WAAU;sBACb,cAAA,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;wBAAI,WAAU;;0CACb,4TAAC;gCAAG,WAAU;0CAAqC;;;;;;0CAGnD,4TAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;kCAI5C,4TAAC,wJAAA,CAAA,oBAAiB;;;;;;;;;;;;;;;;;;;;;AAK5B;KAlBwB","debugId":null}}]
}