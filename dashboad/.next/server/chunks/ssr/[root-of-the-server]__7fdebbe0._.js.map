{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6WAAC,8QAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+eACA;QAED,GAAG,KAAK;kBAET,cAAA,6WAAC,8QAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,6WAAC,4RAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6WAAC,8QAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/api/axios-init.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: `${process.env.API_DOMAIN || \"http://localhost:4000\"}/api/v1`,\n  withCredentials: true,\n  //   headers: {\n  //     Authorization: `Bearer ${getStorage(\"accessToken\")}`,\n  //   },\n});\n\nexport default api;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,wLAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS,GAAG,QAAQ,GAAG,CAAC,UAAU,IAAI,wBAAwB,OAAO,CAAC;IACtE,iBAAiB;AAInB;uCAEe","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/lib/schemas.ts"],"sourcesContent":["import { z } from \"zod\";\n\n// Image validation (matches your ImageSchema)\nexport const imageZ = z.object({\n  alt: z.string().min(1, \"Image alt text required\").trim(),\n  url: z.string().url(\"Invalid image URL\").trim(),\n});\n\n// Zod schema for ICategory\nexport const categorySchema = z.object({\n  slug: z\n    .string()\n    .min(1, \"Slug is required\")\n    .regex(\n      /^[a-z0-9-]+$/,\n      \"Slug must be lowercase, alphanumeric, and hyphen-separated\"\n    )\n    .trim(),\n  name: z.string().min(1, \"Name is required\").trim(),\n});\n\n// Zod schema for IProduct\nexport const productSchema = z.object({\n  slug: z\n    .string()\n    .regex(\n      /^[a-z0-9]+(-[a-z0-9]+)*$/,\n      \"Slug must be lowercase letters, numbers, and hyphens only (no spaces or special characters).\"\n    ),\n  name: z.string().min(1, \"Name is required\"),\n  images: z.array(\n    z.object({\n      alt: z.string().min(1, \"Image alt is required\"),\n      url: z.string().url(\"Must be a valid URL\"),\n    })\n  ),\n  keywords: z\n    .array(\n      z.object({\n        value: z.string().optional(),\n      })\n    )\n    .optional(),\n  price: z.coerce.number().positive(\"Price must be a positive number\"),\n  description: z.string().optional(),\n  colors: z\n    .array(\n      z.object({\n        name: z.string().min(1, \"Color name is required\"),\n        inStock: z.boolean(),\n        sizes: z.array(\n          z.object({\n            name: z.string().min(1, \"Size name is required\"),\n            inStock: z.boolean(),\n            quantity: z.coerce\n              .number()\n              .nonnegative(\"Quantity must be 0 or more\"),\n          })\n        ),\n      })\n    )\n    .min(1, \"At least one color is required\"),\n\n  category: z\n    .string()\n    .length(24, { message: \"Invalid category ID\" })\n    .regex(/^[a-fA-F0-9]{24}$/, { message: \"Invalid ObjectId format\" }),\n});\n\n// IProductVariant schema\nexport const productVariantSchemaZ = z.object({\n  size: z.string().min(1),\n  color: z.string().min(1),\n  stock: z.number().int().min(0, \"stock must be >= 0\"),\n  price: z.number().nonnegative(\"price must be >= 0\"),\n  images: z.array(imageZ).optional(),\n});\n\n// If you want a separate update schema where fields can be optional:\nexport const productVariantUpdateZ = productVariantSchemaZ.partial().refine(\n  (data) => {\n    // ensure at least one field present on update\n    return Object.keys(data).length > 0;\n  },\n  { message: \"At least one field must be provided for update\" }\n);\n\n// IProduct schema\nexport const productSchemaZ = z.object({\n  title: z.string().min(1, \"title is required\"),\n  slug: z\n    .string()\n    .regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, \"slug must be kebab-case\"),\n  description: z.string().optional(),\n\n  categories: z.array(z.string()),\n\n  images: z.array(imageZ),\n  variants: z.array(productVariantSchemaZ),\n\n  fabric: z.string().optional(),\n  valueAddition: z.string().optional(),\n  cutFit: z.string().optional(),\n  collarNeck: z.string().optional(),\n  sleeve: z.string().optional(),\n  length: z.string().optional(),\n  washCare: z.string().optional(),\n  sideCut: z.string().optional(),\n\n  isFeatured: z.boolean().optional(),\n  isActive: z.boolean().default(true),\n  tags: z.array(z.string().min(1)).optional(),\n});\n\n// If you want a separate update schema where fields can be optional:\nexport const productUpdateZ = productSchemaZ.partial().refine(\n  (data) => {\n    // ensure at least one field present on update\n    return Object.keys(data).length > 0;\n  },\n  { message: \"At least one field must be provided for update\" }\n);\n\n// Types + helpers\nexport type ProductCreateInput = z.infer<typeof productSchemaZ>;\nexport type ProductVariantUpdateInput = z.infer<typeof productVariantUpdateZ>;\n\nexport type ProductUpdateInput = z.infer<typeof productUpdateZ>;\n\nexport type ProductFormValues = z.infer<typeof productSchema>;\nexport type CategoryFormValues = z.infer<typeof categorySchema>;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/categories/_hooks/useCategories.ts"],"sourcesContent":["import api from \"@/api/axios-init\";\nimport { CategoryFormValues, categorySchema } from \"@/lib/schemas\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\n\ninterface ICategory {\n  _id: string;\n  name: string;\n  // Other fields if necessary\n}\n\ninterface IPagination {\n  page: number;\n  total: number;\n  totalPages: number;\n  nextPage: number | null;\n  prevPage: number | null;\n}\n\nconst defaultPagination: IPagination = {\n  page: 1,\n  total: 0,\n  totalPages: 0,\n  nextPage: null,\n  prevPage: null,\n};\n\nconst useCategories = () => {\n  const [search, setSearch] = useState<string>(\"\");\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [data, setData] = useState<ICategory[] | null>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [pagination, setPagination] = useState<IPagination>(defaultPagination);\n\n  const form = useForm<CategoryFormValues>({\n    resolver: zodResolver(categorySchema),\n    defaultValues: {\n      slug: \"\",\n      name: \"\",\n    },\n    // mode: \"onChange\",\n  });\n\n  const getCategories = useCallback(\n    async ({\n      page = 1,\n      limit = 10,\n      searchQuery = \"\",\n    }: {\n      page?: number;\n      limit?: number;\n      searchQuery?: string;\n    }) => {\n      setIsLoading(true);\n      try {\n        const response = await api.get(\"/categories\", {\n          params: {\n            search: searchQuery,\n            page,\n            limit,\n          },\n        });\n\n        if (!response.data.success) {\n          throw new Error(\n            response.data.error?.message || \"Something went wrong!\"\n          );\n        }\n\n        setData(response.data.data);\n\n        setPagination({\n          page: response.data.pagination.page,\n          total: response.data.pagination.total,\n          totalPages: response.data.pagination.totalPages,\n          nextPage: response.data.pagination.nextPage || null,\n          prevPage: response.data.pagination.prevPage || null,\n        });\n\n        return { success: true, data: response.data.data };\n      } catch (err: any) {\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    []\n  );\n\n  const onSubmit = useCallback(async (data: CategoryFormValues) => {\n    setData(null);\n    setIsLoading(true);\n\n    try {\n      const response = await api.post(\"/categories/register\", data);\n\n      if (!response.data.success) {\n        throw new Error(response.data.error.message || \"Something with wrong!\");\n      }\n\n      toast(response.data?.message || \"Category has been created.\");\n\n      setData(response.data.data);\n\n      form.reset({\n        slug: \"\",\n        name: \"\",\n      });\n\n      return { success: true, data: response.data.data };\n    } catch (error: any) {\n      console.log(error);\n      if (error.response.data.success === false) {\n        error.response.data.fields.forEach((field: any) => {\n          form.setError(field.name, {\n            message: field.message,\n          });\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSearchQuery(search);\n      setPagination((prev) => ({ ...prev, page: 1 }));\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [search]);\n\n  useEffect(() => {\n    getCategories({ page: pagination.page, searchQuery });\n  }, [pagination.page, searchQuery]);\n\n  return {\n    data,\n    isLoading,\n    pagination,\n    setSearch,\n    search,\n    setPagination,\n    reload: () => getCategories({ page: pagination.page, searchQuery }), // for manual reload\n    onSubmit,\n    form,\n  };\n};\n\nexport default useCategories;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/_hooks/useProducts.ts"],"sourcesContent":["import api from \"@/api/axios-init\";\nimport { ICategory } from \"@/interfaces/category\";\nimport { IPagination } from \"@/interfaces/global\";\nimport { IProduct } from \"@/interfaces/products\";\nimport {\n  ProductFormValues,\n  productSchema,\n  productSchemaZ,\n} from \"@/lib/schemas\";\nimport { defaultPagination } from \"@/lib/utils\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useRouter } from \"next/navigation\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useFieldArray, useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\n\nconst useProducts = () => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [search, setSearch] = useState<string>(\"\");\n  const [filterByCategory, setFilterByCategory] = useState<string>(\"\");\n  const [pagination, setPagination] = useState<IPagination>(defaultPagination);\n  const [data, setData] = useState<IProduct[] | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const router = useRouter();\n\n  const form = useForm({\n    resolver: zodResolver(productSchemaZ),\n    defaultValues: {\n      title: \"\",\n      slug: \"\",\n      description: \"\",\n      categories: [\"\"],\n      images: [{ alt: \"\", url: \"\" }],\n      variants: [\n        {\n          size: \"\",\n          color: \"\",\n          stock: 0,\n          price: 0,\n          images: [{ alt: \"\", url: \"\" }],\n        },\n      ],\n      fabric: \"\",\n      valueAddition: \"\",\n      cutFit: \"\",\n      collarNeck: \"\",\n      sleeve: \"\",\n      length: \"\",\n      washCare: \"\",\n      sideCut: \"\",\n      isFeatured: false,\n      isActive: true,\n      tags: [\"\"],\n    },\n    mode: \"onChange\",\n  });\n\n  const onSubmit = useCallback(async (data: ProductFormValues) => {\n    setData(null);\n    setIsLoading(true);\n\n    console.log(\"Data: \", data);\n\n    try {\n      const response = await api.post(\"/products/register\", data, {\n        params: {},\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.error.message || \"Something with wrong!\");\n      }\n\n      toast(response.data?.message || \"Product has been created.\");\n      setData(response.data.data);\n\n      form.reset({});\n\n      router.push(\"/dashboard/products\");\n\n      return { success: true, data: response.data.data };\n    } catch (error: any) {\n      console.log(error);\n      if (error.response.data.success === false) {\n        error.response.data.fields.forEach((field: any) => {\n          form.setError(field.name, {\n            message: field.message,\n          });\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const {\n    fields: imageFields,\n    append: appendImage,\n    remove: removeImage,\n  } = useFieldArray({\n    control: form.control,\n    name: \"images\",\n  });\n\n  const {\n    fields: keywordFields,\n    append: appendKeyword,\n    remove: removeKeyword,\n  } = useFieldArray({\n    control: form.control,\n    name: \"keywords\",\n  });\n\n  const {\n    fields: colorFields,\n    append: appendColor,\n    remove: removeColor,\n  } = useFieldArray({\n    control: form.control,\n    name: \"colors\",\n  });\n\n  const getProducts = async ({\n    page = 1,\n    limit = 10,\n    searchQuery = \"\",\n    category,\n  }: {\n    page: number;\n    limit: number;\n    searchQuery: string;\n    category: string;\n  }) => {\n    try {\n      const response = await api.get(\"/products\", {\n        headers: {},\n        params: { page, limit, search: searchQuery, category },\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.error.message || \"Something with wrong!\");\n      }\n\n      setData(response.data.data);\n\n      setPagination(() => ({\n        page: response.data.pagination.page,\n        total: response.data.pagination.total,\n        totalPages: response.data.pagination.totalPages,\n        nextPage: response.data.pagination.nextPage || null,\n        prevPage: response.data.pagination.prevPage || null,\n      }));\n    } catch (error: any) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setSearchQuery(search);\n      setPagination((prev) => ({ ...prev, page: 1 }));\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [search]);\n\n  useEffect(() => {\n    getProducts({\n      page: pagination.page,\n      searchQuery,\n      limit: 10,\n      category: filterByCategory,\n    });\n  }, [pagination.page, searchQuery]);\n\n  return {\n    form,\n    pagination,\n    imageFields,\n    keywordFields,\n    colorFields,\n    appendImage,\n    removeImage,\n    appendColor,\n    removeColor,\n    appendKeyword,\n    removeKeyword,\n    setFilterByCategory,\n    data,\n    isLoading,\n    onSubmit,\n  };\n};\n\nexport default useProducts;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1004, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/_hooks/useUploads.ts"],"sourcesContent":["\"use client\";\n\nimport api from \"@/api/axios-init\";\nimport { useState, useCallback } from \"react\";\nimport { toast } from \"sonner\";\n\nfunction useUploads() {\n  const [data, setData] = useState<string[] | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const uploadFiles = useCallback(async (files: File[], slug: string) => {\n    setData(null);\n    setIsLoading(true);\n\n    console.log(\"Files: \", files);\n\n    try {\n      const formData = new FormData();\n      files.forEach((file) => {\n        formData.append(\"image\", file); // Changed key to 'images' to indicate multiple files\n      });\n\n      console.log(\"Form Data: \", formData);\n\n      const response = await api.post(\"/uploads\", formData, {\n        params: { slug },\n      });\n\n      if (!response.data.success) {\n        throw new Error(response.data.error.message || \"Something with wrong!\");\n      }\n\n      toast(response.data?.message || \"Files has been uploaded in S3.\");\n\n      setData(response.data.data);\n      return { success: true, urls: response.data.data };\n    } catch (error: any) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return { uploadFiles, isLoading, data };\n}\n\nexport default useUploads;\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AAJA;;;;AAMA,SAAS;IACP,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAmB;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAW;IAEpD,MAAM,cAAc,CAAA,GAAA,oUAAA,CAAA,cAAW,AAAD,EAAE,OAAO,OAAe;QACpD,QAAQ;QACR,aAAa;QAEb,QAAQ,GAAG,CAAC,WAAW;QAEvB,IAAI;YACF,MAAM,WAAW,IAAI;YACrB,MAAM,OAAO,CAAC,CAAC;gBACb,SAAS,MAAM,CAAC,SAAS,OAAO,qDAAqD;YACvF;YAEA,QAAQ,GAAG,CAAC,eAAe;YAE3B,MAAM,WAAW,MAAM,oHAAA,CAAA,UAAG,CAAC,IAAI,CAAC,YAAY,UAAU;gBACpD,QAAQ;oBAAE;gBAAK;YACjB;YAEA,IAAI,CAAC,SAAS,IAAI,CAAC,OAAO,EAAE;gBAC1B,MAAM,IAAI,MAAM,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI;YACjD;YAEA,CAAA,GAAA,wQAAA,CAAA,QAAK,AAAD,EAAE,SAAS,IAAI,EAAE,WAAW;YAEhC,QAAQ,SAAS,IAAI,CAAC,IAAI;YAC1B,OAAO;gBAAE,SAAS;gBAAM,MAAM,SAAS,IAAI,CAAC,IAAI;YAAC;QACnD,EAAE,OAAO,OAAY;YACnB,QAAQ,GAAG,CAAC;QACd,SAAU;YACR,aAAa;QACf;IACF,GAAG,EAAE;IAEL,OAAO;QAAE;QAAa;QAAW;IAAK;AACxC;uCAEe","debugId":null}},
    {"offset": {"line": 1058, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/_components/form.tsx"],"sourcesContent":["import { useFieldArray } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { PlusCircle, Trash2, Upload } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { type ProductFormValues } from \"@/lib/schemas\";\nimport useCategories from \"@/app/dashboard/categories/_hooks/useCategories\";\nimport useProducts from \"../_hooks/useProducts\";\nimport useUploads from \"../_hooks/useUploads\";\nimport { useRef, useState } from \"react\";\nimport { Label } from \"@/components/ui/label\";\nimport Image from \"next/image\";\nimport { cn } from \"@/lib/utils\";\n\nexport function ProductForm() {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [selectedFiles, setSelectedFiles] = useState<FileList | null>(null);\n  const [slug, setSlug] = useState<string>(\"\");\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const { data: categories } = useCategories();\n\n  const {\n    form,\n    imageFields,\n    keywordFields,\n    colorFields,\n    appendImage,\n    removeImage,\n    appendColor,\n    removeColor,\n    appendKeyword,\n    removeKeyword,\n    setFilterByCategory,\n    data,\n  } = useProducts();\n\n  // Use the new file upload hook\n  const { uploadFiles, data: urls } = useUploads();\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedFiles(event.target.files); // Set the entire FileList\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFiles || selectedFiles.length === 0) {\n      console.log({\n        title: \"No files selected\",\n        description: \"Please choose one or more image files to upload.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const filesArray = Array.from(selectedFiles); // Convert FileList to array for the hook\n    const result = await uploadFiles(filesArray, slug);\n\n    if (result?.success && result.urls && result.urls.length > 0) {\n      result.urls.map((url: string, index: number) => {\n        // Use the original file name for alt text if available, otherwise a generic one\n        const altText =\n          filesArray[index]?.name.split(\".\")[0] ||\n          `Uploaded image ${index + 1}`;\n        appendImage({ url: url, alt: altText });\n      });\n      console.log({\n        title: \"Upload Successful\",\n        description: `${result.urls.length} image(s) uploaded and added to product images.`,\n      });\n      setSelectedFiles(null); // Clear selected files\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\"; // Clear file input visually\n      }\n    }\n  };\n\n  // const onSubmit = async (values: ProductFormValues) => {\n  //   try {\n  //     const formData = new FormData();\n  //     formData.append(\"title\", values.title);\n  //     formData.append(\"slug\", values.slug);\n  //     formData.append(\"description\", values.description || \"\");\n  //     formData.append(\"categories\", values.categories);\n\n  //     // ✅ multiple image handle\n  //     for (let i = 0; i < (values.images as FileList).length; i++) {\n  //       formData.append(\"images\", (values.images as FileList)[i]);\n  //     }\n\n  //     const res = await axios.post(\"/api/products\", formData, {\n  //       headers: { \"Content-Type\": \"multipart/form-data\" },\n  //     });\n\n  //     alert(\"✅ Product created successfully!\");\n  //     console.log(res.data);\n  //     form.reset();\n  //   } catch (error: any) {\n  //     console.error(error);\n  //     alert(error?.response?.data?.message || \"Failed to create product\");\n  //   }\n  // };\n\n  const onSubmit = async (data: any) => {\n    try {\n      setIsLoading(true);\n\n      // 1. Extract images from state (file input)\n      const images: File[] = selectedFiles ? Array.from(selectedFiles) : [];\n\n      // 2. Generate filenames based on slug\n      const filenames = images.map((_, idx) => `${data.slug}-${idx + 1}.jpg`);\n\n      // 3. Prepare body\n      const body = {\n        ...data,\n        images,\n      };\n\n      // 4. Call backend\n      const res = await createProductWithImages({\n        body,\n        folder: `products/${data.slug}`,\n        filenames,\n      });\n\n      // 5. Handle response\n      if (\"error\" in res) {\n        toast.error(res.error.message || \"Validation failed\");\n        console.error(res.error.details);\n        return;\n      }\n\n      if (\"serverError\" in res) {\n        toast.error(res.serverError.message || \"Server error\");\n        return;\n      }\n\n      if (res.success) {\n        toast.success(res.success.message);\n        form.reset();\n        setSelectedFiles(null);\n      }\n    } catch (err: any) {\n      toast.error(err.message || \"Unexpected error occurred\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        {/* Basic Product Details */}\n        <div className=\"grid gap-4 md:grid-cols-2 items-start\">\n          <FormField\n            control={form.control}\n            name=\"title\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Product Title</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"e.g., Wireless Headphones\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"slug\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Product Slug</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"e.g., wireless-headphones\" {...field} />\n                </FormControl>\n                <FormDescription>\n                  Unique identifier (lowercase, hyphen-separated).\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Detailed product description...\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Category */}\n        <FormField\n          control={form.control}\n          name=\"categories.0\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Category</FormLabel>\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select category\" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {categories?.map((category) => (\n                    <SelectItem key={category._id} value={category._id}>\n                      {category.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Separator />\n\n        {/* Product Images */}\n        {/* same upload UI you already wrote */}\n\n        <Separator />\n\n        {/* Variants Section */}\n        <div>\n          <h3 className=\"mb-4 text-lg font-medium\">Product Variants</h3>\n          {variantFields.map((variant, index) => (\n            <div\n              key={variant.id}\n              className=\"mb-6 border p-4 rounded-md space-y-4\"\n            >\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <FormField\n                  control={form.control}\n                  name={`variants.${index}.color`}\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Color</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Black\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name={`variants.${index}.size`}\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Size</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., M\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <FormField\n                  control={form.control}\n                  name={`variants.${index}.stock`}\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Stock</FormLabel>\n                      <FormControl>\n                        <Input type=\"number\" placeholder=\"0\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name={`variants.${index}.price`}\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Price</FormLabel>\n                      <FormControl>\n                        <Input type=\"number\" placeholder=\"0.00\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              {/* Variant Images */}\n              <div>\n                <h4 className=\"font-medium mb-2\">Variant Images</h4>\n                {variantImages[index].map((img, imgIndex) => (\n                  <div key={img.id} className=\"flex gap-2 items-end mb-2\">\n                    <FormField\n                      control={form.control}\n                      name={`variants.${index}.images.${imgIndex}.url`}\n                      render={({ field }) => (\n                        <FormItem className=\"flex-1\">\n                          <FormLabel\n                            className={imgIndex === 0 ? \"block\" : \"sr-only\"}\n                          >\n                            Image URL\n                          </FormLabel>\n                          <FormControl>\n                            <Input\n                              placeholder=\"https://example.com/img.jpg\"\n                              {...field}\n                            />\n                          </FormControl>\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name={`variants.${index}.images.${imgIndex}.alt`}\n                      render={({ field }) => (\n                        <FormItem className=\"flex-1\">\n                          <FormLabel\n                            className={imgIndex === 0 ? \"block\" : \"sr-only\"}\n                          >\n                            Alt Text\n                          </FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Alt description\" {...field} />\n                          </FormControl>\n                        </FormItem>\n                      )}\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"destructive\"\n                      size=\"icon\"\n                      onClick={() => removeVariantImage(index, imgIndex)}\n                    >\n                      <Trash2 className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                ))}\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() =>\n                    appendVariantImage(index, { alt: \"\", url: \"\" })\n                  }\n                >\n                  <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Image\n                </Button>\n              </div>\n\n              <Button\n                type=\"button\"\n                variant=\"destructive\"\n                onClick={() => removeVariant(index)}\n                disabled={variantFields.length === 1}\n              >\n                <Trash2 className=\"mr-2 h-4 w-4\" /> Remove Variant\n              </Button>\n            </div>\n          ))}\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() =>\n              appendVariant({\n                size: \"\",\n                color: \"\",\n                stock: 0,\n                price: 0,\n                images: [{ alt: \"\", url: \"\" }],\n              })\n            }\n          >\n            <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Variant\n          </Button>\n        </div>\n\n        <Separator />\n\n        {/* Extra Product Info */}\n        {/* fabric, valueAddition, cutFit, collarNeck, sleeve, length, washCare, sideCut */}\n\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? \"Creating...\" : \"Create Product\"}\n        </Button>\n      </form>\n    </Form>\n  );\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        {/* Basic Product Details */}\n        <div className=\"grid gap-4 md:grid-cols-2 items-start\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"cursor-pointer\">Product Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"e.g., Wireless Headphones\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"slug\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"cursor-pointer\">Product Slug</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"e.g., wireless-headphones\" {...field} />\n                </FormControl>\n                <FormDescription>\n                  Unique identifier (lowercase, alphanumeric, hyphen-separated).\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel className=\"cursor-pointer\">Description</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Detailed description of the product...\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <div className=\"grid gap-4 md:grid-cols-2 items-start\">\n          <FormField\n            control={form.control}\n            name=\"price\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"cursor-pointer\">Price</FormLabel>\n                <FormControl>\n                  <Input\n                    type=\"number\"\n                    placeholder=\"0.00\"\n                    {...field}\n                    value={String(field.value || \"\")}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"category\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"cursor-pointer\">Category</FormLabel>\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                >\n                  <FormControl>\n                    <SelectTrigger className=\"w-full\">\n                      <SelectValue placeholder=\"Select a category\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {categories !== null &&\n                      categories.map((category) => (\n                        <SelectItem key={category._id} value={category._id}>\n                          {category.name}\n                        </SelectItem>\n                      ))}\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <Separator />\n\n        {/* Image Upload Section */}\n        <div>\n          <h3 className=\"mb-4 text-lg font-medium\">Upload New Image(s)</h3>\n          <div className=\"flex flex-col sm:flex-row gap-4 items-end\">\n            <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n              <Label className=\"cursor-pointer\" htmlFor=\"picture\">\n                Image File(s)\n              </Label>\n              <Input\n                id=\"picture\"\n                type=\"file\"\n                multiple\n                onChange={handleFileChange}\n                ref={fileInputRef}\n              />\n\n              {selectedFiles && selectedFiles.length > 0 && (\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  Selected:{\" \"}\n                  {Array.from(selectedFiles)\n                    .map((f) => f.name)\n                    .join(\", \")}\n                </p>\n              )}\n            </div>\n            <div className=\"grid w-full max-w-sm items-center gap-1.5\">\n              <Label className=\"cursor-pointer\" htmlFor=\"slug\">\n                Image slug\n              </Label>\n              <Input\n                id=\"slug\"\n                multiple\n                onChange={(e) => setSlug(e.target.value)}\n                placeholder=\"t-shirts\"\n              />\n            </div>\n            <Button\n              className=\"cursor-pointer\"\n              onClick={handleUpload}\n              type=\"button\"\n              disabled={\n                !selectedFiles ||\n                selectedFiles.length === 0 ||\n                isLoading ||\n                !slug\n              }\n            >\n              {isLoading ? (\n                <>\n                  <span className=\"animate-spin mr-2\">🌀</span> Uploading...\n                </>\n              ) : (\n                <>\n                  <Upload className=\"mr-2 h-4 w-4\" /> Upload Image(s)\n                </>\n              )}\n            </Button>\n          </div>\n        </div>\n\n        <Separator />\n\n        {/* Existing Images Section */}\n        <div>\n          <h3 className=\"mb-4 text-lg font-medium\">\n            Product Images (Manage Existing)\n          </h3>\n          {imageFields.length === 0 && (\n            <p className=\"text-sm text-muted-foreground\">\n              No images added yet. Upload one above or add manually.\n            </p>\n          )}\n          {imageFields.map((item, index) => (\n            <div\n              key={item.id}\n              className=\"mb-4 grid gap-4 md:grid-cols-[auto_1fr_1fr_auto] items-end\"\n            >\n              {/* Image Preview */}\n              <div className=\"flex items-center justify-center h-16 w-16 rounded-md overflow-hidden border bg-muted\">\n                {item.url ? (\n                  <Image\n                    src={item.url || \"/placeholder.svg\"}\n                    alt={item.alt || \"Product image\"}\n                    width={64}\n                    height={64}\n                    className=\"object-cover\"\n                  />\n                ) : (\n                  <span className=\"text-xs text-muted-foreground text-center p-1\">\n                    No Image\n                  </span>\n                )}\n              </div>\n              <FormField\n                control={form.control}\n                name={`images.${index}.url`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel\n                      className={cn(\n                        \"cursor-pointer\",\n                        index === 0 ? \"block\" : \"sr-only\"\n                      )}\n                    >\n                      Image URL\n                    </FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"https://example.com/image.jpg\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name={`images.${index}.alt`}\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel\n                      className={cn(\n                        \"cursor-pointer\",\n                        index === 0 ? \"block\" : \"sr-only\"\n                      )}\n                    >\n                      Alt Text\n                    </FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"Description of image\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button\n                type=\"button\"\n                variant=\"destructive\"\n                size=\"icon\"\n                onClick={() => removeImage(index)}\n                className={\n                  imageFields.length === 1\n                    ? \"opacity-50 cursor-not-allowed\"\n                    : \"cursor-pointer\"\n                }\n                disabled={imageFields.length === 1}\n              >\n                <Trash2 className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Remove image</span>\n              </Button>\n            </div>\n          ))}\n          <Button\n            className=\"cursor-pointer\"\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => appendImage({ alt: \"\", url: \"\" })}\n          >\n            <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Image Manually\n          </Button>\n        </div>\n\n        <Separator />\n\n        {/* Keys Section */}\n        <div>\n          <h3 className=\"mb-4 text-lg font-medium\">\n            Product Keywords/Tags (Optional)\n          </h3>\n          {keywordFields.map((item, index) => (\n            <div key={item.id} className=\"mb-4 flex gap-2 items-end\">\n              <FormField\n                control={form.control}\n                name={`keywords.${index}.value`}\n                render={({ field }) => (\n                  <FormItem className=\"flex-1\">\n                    <FormLabel\n                      className={cn(\n                        \"cursor-pointer\",\n                        index === 0 ? \"block\" : \"sr-only\"\n                      )}\n                    >\n                      Keyword\n                    </FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., bluetooth\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button\n                className=\"cursor-pointer\"\n                type=\"button\"\n                variant=\"destructive\"\n                size=\"icon\"\n                onClick={() => removeKeyword(index)}\n              >\n                <Trash2 className=\"h-4 w-4\" />\n                <span className=\"sr-only\">Remove keyword</span>\n              </Button>\n            </div>\n          ))}\n          <Button\n            className=\"cursor-pointer\"\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() => appendKeyword({ value: \"\" })}\n          >\n            <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Keyword\n          </Button>\n        </div>\n\n        <Separator />\n\n        {/* Colors and Sizes Section */}\n        <div>\n          <h3 className=\"mb-4 text-lg font-medium\">Product Colors & Sizes</h3>\n          {colorFields.map((colorItem, colorIndex) => (\n            <div key={colorItem.id} className=\"mb-8 rounded-md border p-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h4 className=\"font-semibold\">Color #{colorIndex + 1}</h4>\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={() => removeColor(colorIndex)}\n                  className={cn(\n                    colorFields.length === 1\n                      ? \"opacity-50 cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  )}\n                  disabled={colorFields.length === 1}\n                >\n                  <Trash2 className=\"mr-2 h-4 w-4\" /> Remove Color\n                </Button>\n              </div>\n\n              <div className=\"grid gap-4 md:grid-cols-2 mb-4 items-start\">\n                <FormField\n                  control={form.control}\n                  name={`colors.${colorIndex}.name`}\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"cursor-pointer\">\n                        Color Name\n                      </FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., Black\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name={`colors.${colorIndex}.inStock`}\n                  render={({ field }) => (\n                    <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4 shadow\">\n                      <FormControl>\n                        <Checkbox\n                          checked={field.value}\n                          onCheckedChange={field.onChange}\n                        />\n                      </FormControl>\n                      <div className=\"space-y-1 leading-none\">\n                        <FormLabel className=\"cursor-pointer\">\n                          In Stock\n                        </FormLabel>\n                        <FormDescription>\n                          Is this color currently in stock?\n                        </FormDescription>\n                      </div>\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              <h5 className=\"mb-3 text-md font-medium\">\n                Sizes for{\" \"}\n                {form.watch(`colors.${colorIndex}.name`) ||\n                  `Color #${colorIndex + 1}`}\n              </h5>\n              <div className=\"ml-4 border-l pl-4\">\n                <SizesFieldArray\n                  colorIndex={colorIndex}\n                  control={form.control}\n                />\n              </div>\n            </div>\n          ))}\n          <Button\n            className=\"cursor-pointer\"\n            type=\"button\"\n            variant=\"outline\"\n            onClick={() =>\n              appendColor({\n                name: \"\",\n                inStock: true,\n                sizes: [{ name: \"S\", inStock: true, quantity: 0 }],\n              })\n            }\n          >\n            <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Color\n          </Button>\n        </div>\n\n        <Button className=\"cursor-pointer\" type=\"submit\" disabled={isLoading}>\n          {isLoading ? \"Creating...\" : \"Create Product\"}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n\n// Helper component for nested sizes array\nfunction SizesFieldArray({\n  colorIndex,\n  control,\n}: {\n  colorIndex: number;\n  control: any;\n}) {\n  const {\n    fields: sizeFields,\n    append: appendSize,\n    remove: removeSize,\n  } = useFieldArray({\n    control,\n    name: `colors.${colorIndex}.sizes`,\n  });\n\n  return (\n    <div className=\"space-y-4\">\n      {sizeFields.map((sizeItem, sizeIndex) => (\n        <div\n          key={sizeItem.id}\n          className=\"grid gap-4 md:grid-cols-[1fr_auto_auto_auto] items-start\"\n        >\n          <FormField\n            control={control}\n            name={`colors.${colorIndex}.sizes.${sizeIndex}.name`}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel\n                  className={cn(\n                    \"cursor-pointer\",\n                    sizeIndex === 0 ? \"block\" : \"sr-only\"\n                  )}\n                >\n                  Size Name\n                </FormLabel>\n                <FormControl>\n                  <Input placeholder=\"e.g., M, XL\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={control}\n            name={`colors.${colorIndex}.sizes.${sizeIndex}.quantity`}\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel\n                  className={cn(\n                    \"cursor-pointer\",\n                    sizeIndex === 0 ? \"block\" : \"sr-only\"\n                  )}\n                >\n                  Quantity\n                </FormLabel>\n                <FormControl>\n                  <Input type=\"number\" placeholder=\"0\" {...field} />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={control}\n            name={`colors.${colorIndex}.sizes.${sizeIndex}.inStock`}\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-2 space-y-0 rounded-md border p-2 shadow\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel className=\"cursor-pointer\">In Stock</FormLabel>\n                  <FormDescription className=\"sr-only\">\n                    Is this size in stock?\n                  </FormDescription>\n                </div>\n              </FormItem>\n            )}\n          />\n          <Button\n            type=\"button\"\n            variant=\"destructive\"\n            size=\"icon\"\n            onClick={() => removeSize(sizeIndex)}\n            className={\n              sizeFields.length === 1\n                ? \"opacity-50 cursor-not-allowed\"\n                : \"cursor-pointer\"\n            }\n            disabled={sizeFields.length === 1}\n          >\n            <Trash2 className=\"h-4 w-4\" />\n            <span className=\"sr-only\">Remove size</span>\n          </Button>\n        </div>\n      ))}\n      <Button\n        className=\"cursor-pointer\"\n        type=\"button\"\n        variant=\"secondary\"\n        onClick={() => appendSize({ name: \"\", inStock: true, quantity: 0 })}\n      >\n        <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Size\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2086, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/create/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { ProductForm } from \"../_components/form\";\n\nexport default function CreateProductPage() {\n  return (\n    <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm p-6\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Create New Product</h2>\n      <ProductForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,6WAAC,oJAAA,CAAA,cAAW;;;;;;;;;;;AAGlB","debugId":null}}]
}