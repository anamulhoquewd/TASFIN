{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6WAAC,8QAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  useFormState,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState } = useFormContext()\n  const formState = useFormState({ name: fieldContext.name })\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nfunction FormItem({ className, ...props }: React.ComponentProps<\"div\">) {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        data-slot=\"form-item\"\n        className={cn(\"grid gap-2\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  )\n}\n\nfunction FormLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      data-slot=\"form-label\"\n      data-error={!!error}\n      className={cn(\"data-[error=true]:text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      data-slot=\"form-control\"\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      data-slot=\"form-description\"\n      id={formDescriptionId}\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<\"p\">) {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : props.children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      data-slot=\"form-message\"\n      id={formMessageId}\n      className={cn(\"text-destructive text-sm\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n}\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/lib/schemas.ts"],"sourcesContent":["import { z } from \"zod\";\n\n// Image validation (matches your ImageSchema)\nexport const imageZ = z.object({\n  alt: z.string().min(1, \"Image alt text required\").trim(),\n  url: z.string().url(\"Invalid image URL\").trim(),\n});\n\n// Zod schema for ICategory\nexport const categorySchema = z.object({\n  slug: z\n    .string()\n    .min(1, \"Slug is required\")\n    .regex(\n      /^[a-z0-9-]+$/,\n      \"Slug must be lowercase, alphanumeric, and hyphen-separated\"\n    )\n    .trim(),\n  name: z.string().min(1, \"Name is required\").trim(),\n});\n\n// Zod schema for IProduct\nexport const productSchema = z.object({\n  slug: z\n    .string()\n    .regex(\n      /^[a-z0-9]+(-[a-z0-9]+)*$/,\n      \"Slug must be lowercase letters, numbers, and hyphens only (no spaces or special characters).\"\n    ),\n  name: z.string().min(1, \"Name is required\"),\n  images: z.array(\n    z.object({\n      alt: z.string().min(1, \"Image alt is required\"),\n      url: z.string().url(\"Must be a valid URL\"),\n    })\n  ),\n  keywords: z\n    .array(\n      z.object({\n        value: z.string().optional(),\n      })\n    )\n    .optional(),\n  price: z.coerce.number().positive(\"Price must be a positive number\"),\n  description: z.string().optional(),\n  colors: z\n    .array(\n      z.object({\n        name: z.string().min(1, \"Color name is required\"),\n        inStock: z.boolean(),\n        sizes: z.array(\n          z.object({\n            name: z.string().min(1, \"Size name is required\"),\n            inStock: z.boolean(),\n            quantity: z.coerce\n              .number()\n              .nonnegative(\"Quantity must be 0 or more\"),\n          })\n        ),\n      })\n    )\n    .min(1, \"At least one color is required\"),\n\n  category: z\n    .string()\n    .length(24, { message: \"Invalid category ID\" })\n    .regex(/^[a-fA-F0-9]{24}$/, { message: \"Invalid ObjectId format\" }),\n});\n\n// IProductVariant schema\nexport const productVariantSchemaZ = z.object({\n  size: z.string().min(1),\n  color: z.string().min(1),\n  stock: z.number().int().min(0, \"stock must be >= 0\"),\n  price: z.number().nonnegative(\"price must be >= 0\"),\n  images: z.array(z.file()).optional(),\n});\n\n// If you want a separate update schema where fields can be optional:\nexport const productVariantUpdateZ = productVariantSchemaZ.partial().refine(\n  (data) => {\n    // ensure at least one field present on update\n    return Object.keys(data).length > 0;\n  },\n  { message: \"At least one field must be provided for update\" }\n);\n\n// IProduct schema\nexport const productSchemaZ = z.object({\n  title: z.string().min(1, \"title is required\"),\n  slug: z\n    .string()\n    .regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, \"slug must be kebab-case\"),\n  description: z.string().optional(),\n\n  categories: z.array(z.string()),\n\n  images: z.array(z.file()),\n  variants: z.array(productVariantSchemaZ),\n\n  fabric: z.string().optional(),\n  valueAddition: z.string().optional(),\n  cutFit: z.string().optional(),\n  collarNeck: z.string().optional(),\n  sleeve: z.string().optional(),\n  length: z.string().optional(),\n  washCare: z.string().optional(),\n  sideCut: z.string().optional(),\n\n  isFeatured: z.boolean().optional(),\n  isActive: z.boolean().default(true),\n  tags: z.array(z.string().min(1)).optional(),\n});\n\n// If you want a separate update schema where fields can be optional:\nexport const productUpdateZ = productSchemaZ.partial().refine(\n  (data) => {\n    // ensure at least one field present on update\n    return Object.keys(data).length > 0;\n  },\n  { message: \"At least one field must be provided for update\" }\n);\n\n// Types + helpers\nexport type ProductCreateInput = z.infer<typeof productSchemaZ>;\nexport type ProductVariantUpdateInput = z.infer<typeof productVariantUpdateZ>;\n\nexport type ProductUpdateInput = z.infer<typeof productUpdateZ>;\n\nexport type ProductFormValues = z.infer<typeof productSchema>;\nexport type CategoryFormValues = z.infer<typeof categorySchema>;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/_components/form2.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport {\r\n  Form,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n  FormControl,\r\n} from \"@/components/ui/form\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { PlusCircle, Trash2 } from \"lucide-react\";\r\nimport { toast } from \"sonner\";\r\nimport { productSchemaZ } from \"@/lib/schemas\";\r\nimport axios from \"axios\";\r\nimport useCategories from \"../../categories/_hooks/useCategories\";\r\nimport Image from \"next/image\";\r\n\r\nexport default function ProductCreateForm() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [mainFiles, setMainFiles] = useState<File[]>([]);\r\n\r\n  const form = useForm({\r\n    resolver: zodResolver(productSchemaZ),\r\n    defaultValues: {\r\n      title: \"\",\r\n      slug: \"\",\r\n      description: \"\",\r\n      categories: [\"\"],\r\n      variants: [\r\n        {\r\n          size: \"\",\r\n          color: \"\",\r\n          stock: 0,\r\n          price: 0,\r\n          files: [] as File[],\r\n        },\r\n      ],\r\n      fabric: \"\",\r\n      valueAddition: \"\",\r\n      cutFit: \"\",\r\n      collarNeck: \"\",\r\n      sleeve: \"\",\r\n      length: \"\",\r\n      washCare: \"\",\r\n      sideCut: \"\",\r\n      isFeatured: false,\r\n      isActive: true,\r\n      tags: [\"\"],\r\n    },\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const {\r\n    fields: variantFields,\r\n    append: appendVariant,\r\n    remove: removeVariant,\r\n  } = useFieldArray({ control: form.control, name: \"variants\" });\r\n\r\n  const handleMainFilesChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files) return;\r\n    setMainFiles((prev) => [...prev, ...Array.from(e.target.files ?? [])]);\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      // Prepare all files: main + variant\r\n      const formData = new FormData();\r\n      mainFiles.forEach((file) => formData.append(\"images\", file));\r\n\r\n      data.variants.forEach((variant: any, idx: number) => {\r\n        variant.files?.forEach((file: File) =>\r\n          formData.append(`variantImages[${idx}]`, file)\r\n        );\r\n        delete variant.files; // remove from body, backend handles separately\r\n      });\r\n\r\n      Object.entries(data).forEach(([key, value]) => {\r\n        if (key !== \"variants\") formData.append(key, value);\r\n      });\r\n\r\n      formData.append(\"variants\", JSON.stringify(data.variants));\r\n\r\n      const res = await axios.post(\"/api/products\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      if (!res.data.success)\r\n        throw new Error(res.data.error?.message || \"Error\");\r\n\r\n      toast.success(res.data.success.message);\r\n      form.reset();\r\n      setMainFiles([]);\r\n    } catch (err: any) {\r\n      toast.error(err.message || \"Unexpected error\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\r\n        {/* Title & Slug */}\r\n        <div className=\"grid gap-4 md:grid-cols-2\">\r\n          <FormField\r\n            control={form.control}\r\n            name=\"title\"\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel>Product Title</FormLabel>\r\n                <FormControl>\r\n                  <Input placeholder=\"e.g., 3 Piece Set\" {...field} />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n          <FormField\r\n            control={form.control}\r\n            name=\"slug\"\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel>Product Slug</FormLabel>\r\n                <FormControl>\r\n                  <Input placeholder=\"e.g., three-piece-set\" {...field} />\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        {/* Description */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"description\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Description</FormLabel>\r\n              <FormControl>\r\n                <Textarea placeholder=\"Detailed description...\" {...field} />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* Main Product Images */}\r\n        <div>\r\n          <FormLabel>Product Images</FormLabel>\r\n          <Input type=\"file\" multiple onChange={handleMainFilesChange} />\r\n          {mainFiles.length > 0 && (\r\n            <div className=\"mt-2 flex flex-wrap gap-2\">\r\n              {mainFiles.map((file, idx) => (\r\n                <div\r\n                  key={idx}\r\n                  className=\"relative w-20 h-20 border rounded-md overflow-hidden flex items-center justify-center bg-gray-100\"\r\n                >\r\n                  <Image\r\n                    src={URL.createObjectURL(file)}\r\n                    alt={file.name}\r\n                    width={64}\r\n                    height={64}\r\n                    className=\"object-cover\"\r\n                  />\r\n                  <Button\r\n                    variant=\"destructive\"\r\n                    onClick={() => {\r\n                      const newFiles = [...mainFiles];\r\n                      newFiles.splice(idx, 1);\r\n                      setMainFiles(newFiles);\r\n                    }}\r\n                    className=\"absolute top-0 right-0 p-1 h-6 w-6 text-xs\"\r\n                  >\r\n                    ×\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Variants */}\r\n        <div>\r\n          <h3 className=\"text-lg font-medium\">Product Variants</h3>\r\n          {variantFields.map((variant, index) => {\r\n            const [variantFiles, setVariantFiles] = useState<File[]>([]);\r\n\r\n            const handleVariantFiles = (\r\n              e: React.ChangeEvent<HTMLInputElement>\r\n            ) => {\r\n              if (!e.target.files) return;\r\n              setVariantFiles((prev) => [\r\n                ...prev,\r\n                ...Array.from(e.target.files ?? []),\r\n              ]);\r\n              form.setValue(`variants.${index}.files`, [\r\n                ...(form.getValues(`variants.${index}.files`) || []),\r\n                ...Array.from(e.target.files ?? []),\r\n              ]);\r\n            };\r\n\r\n            return (\r\n              <div key={variant.id} className=\"border p-4 rounded-md mt-4\">\r\n                {/* Color & Size */}\r\n                <div className=\"grid gap-4 md:grid-cols-2\">\r\n                  <FormField\r\n                    control={form.control}\r\n                    name={`variants.${index}.color`}\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Color</FormLabel>\r\n                        <FormControl>\r\n                          <Input placeholder=\"e.g., Black\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                  <FormField\r\n                    control={form.control}\r\n                    name={`variants.${index}.size`}\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Size</FormLabel>\r\n                        <FormControl>\r\n                          <Input placeholder=\"e.g., M\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                {/* Stock & Price */}\r\n                <div className=\"grid gap-4 md:grid-cols-2 mt-4\">\r\n                  <FormField\r\n                    control={form.control}\r\n                    name={`variants.${index}.stock`}\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Stock</FormLabel>\r\n                        <FormControl>\r\n                          <Input type=\"number\" placeholder=\"0\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                  <FormField\r\n                    control={form.control}\r\n                    name={`variants.${index}.price`}\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Price</FormLabel>\r\n                        <FormControl>\r\n                          <Input type=\"number\" placeholder=\"0.00\" {...field} />\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </div>\r\n\r\n                {/* Variant Images */}\r\n                <div className=\"mt-4\">\r\n                  <FormLabel>Variant Images</FormLabel>\r\n                  <Input type=\"file\" multiple onChange={handleVariantFiles} />\r\n                  {variantFiles.length > 0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {variantFiles.map((file, idx) => (\r\n                        <div\r\n                          key={idx}\r\n                          className=\"relative w-20 h-20 border rounded-md overflow-hidden flex items-center justify-center bg-gray-100\"\r\n                        >\r\n                          <Image\r\n                            src={URL.createObjectURL(file)}\r\n                            alt={file.name}\r\n                            width={64}\r\n                            height={64}\r\n                            className=\"object-cover\"\r\n                          />\r\n                          <Button\r\n                            variant=\"destructive\"\r\n                            onClick={() => {\r\n                              const newFiles = [...variantFiles];\r\n                              newFiles.splice(idx, 1);\r\n                              setVariantFiles(newFiles);\r\n\r\n                              const currentFiles =\r\n                                form.getValues(`variants.${index}.files`) || [];\r\n                              currentFiles.splice(idx, 1);\r\n                              form.setValue(\r\n                                `variants.${index}.files`,\r\n                                currentFiles\r\n                              );\r\n                            }}\r\n                            className=\"absolute top-0 right-0 p-1 h-6 w-6 text-xs\"\r\n                          >\r\n                            ×\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Remove Variant */}\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"destructive\"\r\n                  onClick={() => removeVariant(index)}\r\n                  disabled={variantFields.length === 1}\r\n                  className=\"mt-4\"\r\n                >\r\n                  <Trash2 className=\"mr-2 h-4 w-4\" /> Remove Variant\r\n                </Button>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <Button\r\n            type=\"button\"\r\n            variant=\"outline\"\r\n            onClick={() =>\r\n              appendVariant({\r\n                size: \"\",\r\n                color: \"\",\r\n                stock: 0,\r\n                price: 0,\r\n                files: [] as File[],\r\n              })\r\n            }\r\n            className=\"mt-4\"\r\n          >\r\n            <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Variant\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Submit */}\r\n        <Button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Creating...\" : \"Create Product\"}\r\n        </Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1082, "column": 0}, "map": {"version":3,"sources":["file:///F:/SOFTWARES/Tasfin/dashboad/app/dashboard/products/create/page.tsx"],"sourcesContent":["\"use client\";\n\nimport ProductCreateForm from \"../_components/form2\";\n\nexport default function CreateProductPage() {\n  return (\n    <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm p-6\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Create New Product</h2>\n      <ProductCreateForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,6WAAC,qJAAA,CAAA,UAAiB;;;;;;;;;;;AAGxB","debugId":null}}]
}